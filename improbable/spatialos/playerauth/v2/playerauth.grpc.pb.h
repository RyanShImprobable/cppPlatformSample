// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: improbable/spatialos/playerauth/v2/playerauth.proto
#ifndef GRPC_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto__INCLUDED
#define GRPC_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto__INCLUDED

#include "improbable/spatialos/playerauth/v2/playerauth.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace improbable {
namespace spatialos {
namespace playerauth {
namespace v2 {

// The PlayerAuthService provides methods for creating and managing
// `PlayerIdentityTokens` (PITs), `LoginTokens` (LTs) and `DevelopmentAuthenticationTokens` (DATs).
class PlayerAuthService final {
 public:
  static constexpr char const* service_full_name() {
    return "improbable.spatialos.playerauth.v2.PlayerAuthService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Creates a `LoginToken` (LT) for a given user, project and deployment.
    //
    // This grants the user access to a given deployment.
    virtual ::grpc::Status CreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>> AsyncCreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>>(AsyncCreateLoginTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>> PrepareAsyncCreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>>(PrepareAsyncCreateLoginTokenRaw(context, request, cq));
    }
    // Creates a `PlayerIdentityToken` (PIT) for a given user and project.
    //
    // This identifies players in the context of a project and provider.
    //
    // Invalid fields result in an `InvalidArgument` error. See the `CreatePlayerIdentityTokenRequest`
    // message for details of what is valid for each field.
    virtual ::grpc::Status CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>> AsyncCreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>>(AsyncCreatePlayerIdentityTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>> PrepareAsyncCreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>>(PrepareAsyncCreatePlayerIdentityTokenRaw(context, request, cq));
    }
    // Decodes a `PlayerIdentityToken` (PIT).
    //
    // Tokens that cannot be verified result in an `InvalidArgument` error.
    virtual ::grpc::Status DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>> AsyncDecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>>(AsyncDecodePlayerIdentityTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>> PrepareAsyncDecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>>(PrepareAsyncDecodePlayerIdentityTokenRaw(context, request, cq));
    }
    // Creates a `DevelopmentAuthenticationToken` (DAT) for a given project.
    virtual ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>> AsyncCreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>>(AsyncCreateDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>> PrepareAsyncCreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>>(PrepareAsyncCreateDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    // Get a DAT given its ID.
    //
    // This endpoint returns a NotFound error in case the DAT could not be found.
    virtual ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>> AsyncGetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>>(AsyncGetDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>> PrepareAsyncGetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>>(PrepareAsyncGetDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    // Lists DATs associated with a project.
    virtual ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>> AsyncListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>>(AsyncListDevelopmentAuthenticationTokensRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>> PrepareAsyncListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>>(PrepareAsyncListDevelopmentAuthenticationTokensRaw(context, request, cq));
    }
    // Updates the description and the validity period of a DAT.
    //
    // You can use this endpoint to both extend the validity period of valid DATs and renew expired
    // DATs.
    virtual ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>> AsyncUpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>>(AsyncUpdateDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>> PrepareAsyncUpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>>(PrepareAsyncUpdateDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    // Immediately expires a DAT thereby revoking its validity.
    //
    // You can undo this operation by extending the lifetime of an expired DAT using the
    // `UpdateDevelopmentAuthenticationToken` endpoint. Expired DATs are permanently deleted after one
    // week.
    virtual ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>> AsyncExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>>(AsyncExpireDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>> PrepareAsyncExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>>(PrepareAsyncExpireDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    // Immediately deletes a DAT, rendering it immediately unusable.
    virtual ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>> AsyncDeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>>(AsyncDeleteDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>> PrepareAsyncDeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>>(PrepareAsyncDeleteDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // Creates a `LoginToken` (LT) for a given user, project and deployment.
      //
      // This grants the user access to a given deployment.
      virtual void CreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateLoginToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateLoginToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateLoginToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a `PlayerIdentityToken` (PIT) for a given user and project.
      //
      // This identifies players in the context of a project and provider.
      //
      // Invalid fields result in an `InvalidArgument` error. See the `CreatePlayerIdentityTokenRequest`
      // message for details of what is valid for each field.
      virtual void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Decodes a `PlayerIdentityToken` (PIT).
      //
      // Tokens that cannot be verified result in an `InvalidArgument` error.
      virtual void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Creates a `DevelopmentAuthenticationToken` (DAT) for a given project.
      virtual void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Get a DAT given its ID.
      //
      // This endpoint returns a NotFound error in case the DAT could not be found.
      virtual void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Lists DATs associated with a project.
      virtual void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Updates the description and the validity period of a DAT.
      //
      // You can use this endpoint to both extend the validity period of valid DATs and renew expired
      // DATs.
      virtual void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Immediately expires a DAT thereby revoking its validity.
      //
      // You can undo this operation by extending the lifetime of an expired DAT using the
      // `UpdateDevelopmentAuthenticationToken` endpoint. Expired DATs are permanently deleted after one
      // week.
      virtual void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // Immediately deletes a DAT, rendering it immediately unusable.
      virtual void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>* AsyncCreateLoginTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>* PrepareAsyncCreateLoginTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>* AsyncCreatePlayerIdentityTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>* PrepareAsyncCreatePlayerIdentityTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>* AsyncDecodePlayerIdentityTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>* PrepareAsyncDecodePlayerIdentityTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>* AsyncCreateDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>* PrepareAsyncCreateDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>* AsyncGetDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>* PrepareAsyncGetDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>* AsyncListDevelopmentAuthenticationTokensRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>* PrepareAsyncListDevelopmentAuthenticationTokensRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>* AsyncUpdateDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>* PrepareAsyncUpdateDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>* AsyncExpireDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>* PrepareAsyncExpireDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>* AsyncDeleteDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>* PrepareAsyncDeleteDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status CreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>> AsyncCreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>>(AsyncCreateLoginTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>> PrepareAsyncCreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>>(PrepareAsyncCreateLoginTokenRaw(context, request, cq));
    }
    ::grpc::Status CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>> AsyncCreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>>(AsyncCreatePlayerIdentityTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>> PrepareAsyncCreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>>(PrepareAsyncCreatePlayerIdentityTokenRaw(context, request, cq));
    }
    ::grpc::Status DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>> AsyncDecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>>(AsyncDecodePlayerIdentityTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>> PrepareAsyncDecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>>(PrepareAsyncDecodePlayerIdentityTokenRaw(context, request, cq));
    }
    ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>> AsyncCreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>>(AsyncCreateDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>> PrepareAsyncCreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>>(PrepareAsyncCreateDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>> AsyncGetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>>(AsyncGetDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>> PrepareAsyncGetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>>(PrepareAsyncGetDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>> AsyncListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>>(AsyncListDevelopmentAuthenticationTokensRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>> PrepareAsyncListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>>(PrepareAsyncListDevelopmentAuthenticationTokensRaw(context, request, cq));
    }
    ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>> AsyncUpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>>(AsyncUpdateDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>> PrepareAsyncUpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>>(PrepareAsyncUpdateDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>> AsyncExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>>(AsyncExpireDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>> PrepareAsyncExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>>(PrepareAsyncExpireDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>> AsyncDeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>>(AsyncDeleteDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>> PrepareAsyncDeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>>(PrepareAsyncDeleteDevelopmentAuthenticationTokenRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void CreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateLoginToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateLoginToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateLoginToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateLoginToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreatePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DecodePlayerIdentityToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void GetDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, std::function<void(::grpc::Status)>) override;
      void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ListDevelopmentAuthenticationTokens(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void UpdateDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ExpireDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeleteDevelopmentAuthenticationToken(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>* AsyncCreateLoginTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>* PrepareAsyncCreateLoginTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>* AsyncCreatePlayerIdentityTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>* PrepareAsyncCreatePlayerIdentityTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>* AsyncDecodePlayerIdentityTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>* PrepareAsyncDecodePlayerIdentityTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>* AsyncCreateDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>* PrepareAsyncCreateDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>* AsyncGetDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>* PrepareAsyncGetDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>* AsyncListDevelopmentAuthenticationTokensRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>* PrepareAsyncListDevelopmentAuthenticationTokensRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>* AsyncUpdateDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>* PrepareAsyncUpdateDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>* AsyncExpireDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>* PrepareAsyncExpireDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>* AsyncDeleteDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>* PrepareAsyncDeleteDevelopmentAuthenticationTokenRaw(::grpc::ClientContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateLoginToken_;
    const ::grpc::internal::RpcMethod rpcmethod_CreatePlayerIdentityToken_;
    const ::grpc::internal::RpcMethod rpcmethod_DecodePlayerIdentityToken_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDevelopmentAuthenticationToken_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDevelopmentAuthenticationToken_;
    const ::grpc::internal::RpcMethod rpcmethod_ListDevelopmentAuthenticationTokens_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateDevelopmentAuthenticationToken_;
    const ::grpc::internal::RpcMethod rpcmethod_ExpireDevelopmentAuthenticationToken_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDevelopmentAuthenticationToken_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Creates a `LoginToken` (LT) for a given user, project and deployment.
    //
    // This grants the user access to a given deployment.
    virtual ::grpc::Status CreateLoginToken(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response);
    // Creates a `PlayerIdentityToken` (PIT) for a given user and project.
    //
    // This identifies players in the context of a project and provider.
    //
    // Invalid fields result in an `InvalidArgument` error. See the `CreatePlayerIdentityTokenRequest`
    // message for details of what is valid for each field.
    virtual ::grpc::Status CreatePlayerIdentityToken(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response);
    // Decodes a `PlayerIdentityToken` (PIT).
    //
    // Tokens that cannot be verified result in an `InvalidArgument` error.
    virtual ::grpc::Status DecodePlayerIdentityToken(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response);
    // Creates a `DevelopmentAuthenticationToken` (DAT) for a given project.
    virtual ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response);
    // Get a DAT given its ID.
    //
    // This endpoint returns a NotFound error in case the DAT could not be found.
    virtual ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response);
    // Lists DATs associated with a project.
    virtual ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response);
    // Updates the description and the validity period of a DAT.
    //
    // You can use this endpoint to both extend the validity period of valid DATs and renew expired
    // DATs.
    virtual ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response);
    // Immediately expires a DAT thereby revoking its validity.
    //
    // You can undo this operation by extending the lifetime of an expired DAT using the
    // `UpdateDevelopmentAuthenticationToken` endpoint. Expired DATs are permanently deleted after one
    // week.
    virtual ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response);
    // Immediately deletes a DAT, rendering it immediately unusable.
    virtual ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ServerContext* context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateLoginToken(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreatePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreatePlayerIdentityToken() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreatePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreatePlayerIdentityToken(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DecodePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DecodePlayerIdentityToken() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DecodePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecodePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDecodePlayerIdentityToken(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_CreateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListDevelopmentAuthenticationTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListDevelopmentAuthenticationTokens() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ListDevelopmentAuthenticationTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDevelopmentAuthenticationTokens(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_UpdateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExpireDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ExpireDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ExpireDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExpireDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_DeleteDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateLoginToken<WithAsyncMethod_CreatePlayerIdentityToken<WithAsyncMethod_DecodePlayerIdentityToken<WithAsyncMethod_CreateDevelopmentAuthenticationToken<WithAsyncMethod_GetDevelopmentAuthenticationToken<WithAsyncMethod_ListDevelopmentAuthenticationTokens<WithAsyncMethod_UpdateDevelopmentAuthenticationToken<WithAsyncMethod_ExpireDevelopmentAuthenticationToken<WithAsyncMethod_DeleteDevelopmentAuthenticationToken<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateLoginToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* response) { return this->CreateLoginToken(context, request, response); }));}
    void SetMessageAllocatorFor_CreateLoginToken(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateLoginToken(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateLoginToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreatePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreatePlayerIdentityToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* response) { return this->CreatePlayerIdentityToken(context, request, response); }));}
    void SetMessageAllocatorFor_CreatePlayerIdentityToken(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreatePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreatePlayerIdentityToken(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreatePlayerIdentityToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DecodePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DecodePlayerIdentityToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* request, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* response) { return this->DecodePlayerIdentityToken(context, request, response); }));}
    void SetMessageAllocatorFor_DecodePlayerIdentityToken(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DecodePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecodePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DecodePlayerIdentityToken(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DecodePlayerIdentityToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* response) { return this->CreateDevelopmentAuthenticationToken(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDevelopmentAuthenticationToken(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_GetDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_GetDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* response) { return this->GetDevelopmentAuthenticationToken(context, request, response); }));}
    void SetMessageAllocatorFor_GetDevelopmentAuthenticationToken(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_GetDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ListDevelopmentAuthenticationTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ListDevelopmentAuthenticationTokens() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* request, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* response) { return this->ListDevelopmentAuthenticationTokens(context, request, response); }));}
    void SetMessageAllocatorFor_ListDevelopmentAuthenticationTokens(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ListDevelopmentAuthenticationTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListDevelopmentAuthenticationTokens(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListDevelopmentAuthenticationTokens(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_UpdateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_UpdateDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* response) { return this->UpdateDevelopmentAuthenticationToken(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateDevelopmentAuthenticationToken(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_UpdateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ExpireDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ExpireDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(7,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* response) { return this->ExpireDevelopmentAuthenticationToken(context, request, response); }));}
    void SetMessageAllocatorFor_ExpireDevelopmentAuthenticationToken(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(7);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ExpireDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ExpireDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ExpireDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeleteDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeleteDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(8,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* request, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* response) { return this->DeleteDevelopmentAuthenticationToken(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDevelopmentAuthenticationToken(
        ::grpc::experimental::MessageAllocator< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(8);
    #endif
      static_cast<::grpc_impl::internal::CallbackUnaryHandler< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeleteDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_CreateLoginToken<ExperimentalWithCallbackMethod_CreatePlayerIdentityToken<ExperimentalWithCallbackMethod_DecodePlayerIdentityToken<ExperimentalWithCallbackMethod_CreateDevelopmentAuthenticationToken<ExperimentalWithCallbackMethod_GetDevelopmentAuthenticationToken<ExperimentalWithCallbackMethod_ListDevelopmentAuthenticationTokens<ExperimentalWithCallbackMethod_UpdateDevelopmentAuthenticationToken<ExperimentalWithCallbackMethod_ExpireDevelopmentAuthenticationToken<ExperimentalWithCallbackMethod_DeleteDevelopmentAuthenticationToken<Service > > > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_CreateLoginToken<ExperimentalWithCallbackMethod_CreatePlayerIdentityToken<ExperimentalWithCallbackMethod_DecodePlayerIdentityToken<ExperimentalWithCallbackMethod_CreateDevelopmentAuthenticationToken<ExperimentalWithCallbackMethod_GetDevelopmentAuthenticationToken<ExperimentalWithCallbackMethod_ListDevelopmentAuthenticationTokens<ExperimentalWithCallbackMethod_UpdateDevelopmentAuthenticationToken<ExperimentalWithCallbackMethod_ExpireDevelopmentAuthenticationToken<ExperimentalWithCallbackMethod_DeleteDevelopmentAuthenticationToken<Service > > > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreatePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreatePlayerIdentityToken() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreatePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DecodePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DecodePlayerIdentityToken() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DecodePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecodePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_CreateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListDevelopmentAuthenticationTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListDevelopmentAuthenticationTokens() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ListDevelopmentAuthenticationTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_UpdateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExpireDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ExpireDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ExpireDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_DeleteDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateLoginToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreatePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreatePlayerIdentityToken() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreatePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreatePlayerIdentityToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DecodePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DecodePlayerIdentityToken() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DecodePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecodePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDecodePlayerIdentityToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_CreateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListDevelopmentAuthenticationTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListDevelopmentAuthenticationTokens() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ListDevelopmentAuthenticationTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListDevelopmentAuthenticationTokens(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_UpdateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ExpireDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ExpireDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ExpireDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExpireDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_DeleteDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateLoginToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateLoginToken(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateLoginToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateLoginToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreatePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreatePlayerIdentityToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreatePlayerIdentityToken(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreatePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreatePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreatePlayerIdentityToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreatePlayerIdentityToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DecodePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DecodePlayerIdentityToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DecodePlayerIdentityToken(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DecodePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DecodePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DecodePlayerIdentityToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DecodePlayerIdentityToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDevelopmentAuthenticationToken(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_GetDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_GetDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDevelopmentAuthenticationToken(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_GetDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* GetDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* GetDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ListDevelopmentAuthenticationTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ListDevelopmentAuthenticationTokens() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListDevelopmentAuthenticationTokens(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ListDevelopmentAuthenticationTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ListDevelopmentAuthenticationTokens(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ListDevelopmentAuthenticationTokens(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_UpdateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_UpdateDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateDevelopmentAuthenticationToken(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_UpdateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* UpdateDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* UpdateDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ExpireDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ExpireDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(7,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ExpireDevelopmentAuthenticationToken(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ExpireDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ExpireDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ExpireDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeleteDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeleteDevelopmentAuthenticationToken() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(8,
          new ::grpc_impl::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDevelopmentAuthenticationToken(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeleteDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeleteDevelopmentAuthenticationToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeleteDevelopmentAuthenticationToken(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateLoginToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateLoginToken() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>(std::bind(&WithStreamedUnaryMethod_CreateLoginToken<BaseClass>::StreamedCreateLoginToken, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateLoginToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateLoginToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateLoginToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest,::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreatePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreatePlayerIdentityToken() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>(std::bind(&WithStreamedUnaryMethod_CreatePlayerIdentityToken<BaseClass>::StreamedCreatePlayerIdentityToken, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreatePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreatePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreatePlayerIdentityToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest,::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DecodePlayerIdentityToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DecodePlayerIdentityToken() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>(std::bind(&WithStreamedUnaryMethod_DecodePlayerIdentityToken<BaseClass>::StreamedDecodePlayerIdentityToken, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DecodePlayerIdentityToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DecodePlayerIdentityToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDecodePlayerIdentityToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest,::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>(std::bind(&WithStreamedUnaryMethod_CreateDevelopmentAuthenticationToken<BaseClass>::StreamedCreateDevelopmentAuthenticationToken, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest,::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>(std::bind(&WithStreamedUnaryMethod_GetDevelopmentAuthenticationToken<BaseClass>::StreamedGetDevelopmentAuthenticationToken, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest,::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListDevelopmentAuthenticationTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListDevelopmentAuthenticationTokens() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>(std::bind(&WithStreamedUnaryMethod_ListDevelopmentAuthenticationTokens<BaseClass>::StreamedListDevelopmentAuthenticationTokens, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListDevelopmentAuthenticationTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListDevelopmentAuthenticationTokens(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListDevelopmentAuthenticationTokens(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest,::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>(std::bind(&WithStreamedUnaryMethod_UpdateDevelopmentAuthenticationToken<BaseClass>::StreamedUpdateDevelopmentAuthenticationToken, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpdateDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest,::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExpireDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ExpireDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>(std::bind(&WithStreamedUnaryMethod_ExpireDevelopmentAuthenticationToken<BaseClass>::StreamedExpireDevelopmentAuthenticationToken, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ExpireDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExpireDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExpireDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest,::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDevelopmentAuthenticationToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDevelopmentAuthenticationToken() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>(std::bind(&WithStreamedUnaryMethod_DeleteDevelopmentAuthenticationToken<BaseClass>::StreamedDeleteDevelopmentAuthenticationToken, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteDevelopmentAuthenticationToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDevelopmentAuthenticationToken(::grpc::ServerContext* /*context*/, const ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* /*request*/, ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDevelopmentAuthenticationToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest,::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateLoginToken<WithStreamedUnaryMethod_CreatePlayerIdentityToken<WithStreamedUnaryMethod_DecodePlayerIdentityToken<WithStreamedUnaryMethod_CreateDevelopmentAuthenticationToken<WithStreamedUnaryMethod_GetDevelopmentAuthenticationToken<WithStreamedUnaryMethod_ListDevelopmentAuthenticationTokens<WithStreamedUnaryMethod_UpdateDevelopmentAuthenticationToken<WithStreamedUnaryMethod_ExpireDevelopmentAuthenticationToken<WithStreamedUnaryMethod_DeleteDevelopmentAuthenticationToken<Service > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateLoginToken<WithStreamedUnaryMethod_CreatePlayerIdentityToken<WithStreamedUnaryMethod_DecodePlayerIdentityToken<WithStreamedUnaryMethod_CreateDevelopmentAuthenticationToken<WithStreamedUnaryMethod_GetDevelopmentAuthenticationToken<WithStreamedUnaryMethod_ListDevelopmentAuthenticationTokens<WithStreamedUnaryMethod_UpdateDevelopmentAuthenticationToken<WithStreamedUnaryMethod_ExpireDevelopmentAuthenticationToken<WithStreamedUnaryMethod_DeleteDevelopmentAuthenticationToken<Service > > > > > > > > > StreamedService;
};

}  // namespace v2
}  // namespace playerauth
}  // namespace spatialos
}  // namespace improbable


#endif  // GRPC_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto__INCLUDED
