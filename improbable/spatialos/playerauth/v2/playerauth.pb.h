// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/spatialos/playerauth/v2/playerauth.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "github.com/improbable-io/go-proto-logfields/logfields.pb.h"
#include "github.com/mwitkow/go-proto-validators/validator.pb.h"
#include "google/api/client.pb.h"
#include "google/api/field_behavior.pb.h"
#include <google/protobuf/duration.pb.h>
#include <google/protobuf/timestamp.pb.h>
#include "improbable/ext/plugin/auth/perms.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[21]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
namespace improbable {
namespace spatialos {
namespace playerauth {
namespace v2 {
class CreateDevelopmentAuthenticationTokenRequest;
class CreateDevelopmentAuthenticationTokenRequestDefaultTypeInternal;
extern CreateDevelopmentAuthenticationTokenRequestDefaultTypeInternal _CreateDevelopmentAuthenticationTokenRequest_default_instance_;
class CreateDevelopmentAuthenticationTokenResponse;
class CreateDevelopmentAuthenticationTokenResponseDefaultTypeInternal;
extern CreateDevelopmentAuthenticationTokenResponseDefaultTypeInternal _CreateDevelopmentAuthenticationTokenResponse_default_instance_;
class CreateLoginTokenRequest;
class CreateLoginTokenRequestDefaultTypeInternal;
extern CreateLoginTokenRequestDefaultTypeInternal _CreateLoginTokenRequest_default_instance_;
class CreateLoginTokenResponse;
class CreateLoginTokenResponseDefaultTypeInternal;
extern CreateLoginTokenResponseDefaultTypeInternal _CreateLoginTokenResponse_default_instance_;
class CreatePlayerIdentityTokenRequest;
class CreatePlayerIdentityTokenRequestDefaultTypeInternal;
extern CreatePlayerIdentityTokenRequestDefaultTypeInternal _CreatePlayerIdentityTokenRequest_default_instance_;
class CreatePlayerIdentityTokenResponse;
class CreatePlayerIdentityTokenResponseDefaultTypeInternal;
extern CreatePlayerIdentityTokenResponseDefaultTypeInternal _CreatePlayerIdentityTokenResponse_default_instance_;
class DecodePlayerIdentityTokenRequest;
class DecodePlayerIdentityTokenRequestDefaultTypeInternal;
extern DecodePlayerIdentityTokenRequestDefaultTypeInternal _DecodePlayerIdentityTokenRequest_default_instance_;
class DecodePlayerIdentityTokenResponse;
class DecodePlayerIdentityTokenResponseDefaultTypeInternal;
extern DecodePlayerIdentityTokenResponseDefaultTypeInternal _DecodePlayerIdentityTokenResponse_default_instance_;
class DeleteDevelopmentAuthenticationTokenRequest;
class DeleteDevelopmentAuthenticationTokenRequestDefaultTypeInternal;
extern DeleteDevelopmentAuthenticationTokenRequestDefaultTypeInternal _DeleteDevelopmentAuthenticationTokenRequest_default_instance_;
class DeleteDevelopmentAuthenticationTokenResponse;
class DeleteDevelopmentAuthenticationTokenResponseDefaultTypeInternal;
extern DeleteDevelopmentAuthenticationTokenResponseDefaultTypeInternal _DeleteDevelopmentAuthenticationTokenResponse_default_instance_;
class DevelopmentAuthenticationToken;
class DevelopmentAuthenticationTokenDefaultTypeInternal;
extern DevelopmentAuthenticationTokenDefaultTypeInternal _DevelopmentAuthenticationToken_default_instance_;
class ExpireDevelopmentAuthenticationTokenRequest;
class ExpireDevelopmentAuthenticationTokenRequestDefaultTypeInternal;
extern ExpireDevelopmentAuthenticationTokenRequestDefaultTypeInternal _ExpireDevelopmentAuthenticationTokenRequest_default_instance_;
class ExpireDevelopmentAuthenticationTokenResponse;
class ExpireDevelopmentAuthenticationTokenResponseDefaultTypeInternal;
extern ExpireDevelopmentAuthenticationTokenResponseDefaultTypeInternal _ExpireDevelopmentAuthenticationTokenResponse_default_instance_;
class GetDevelopmentAuthenticationTokenRequest;
class GetDevelopmentAuthenticationTokenRequestDefaultTypeInternal;
extern GetDevelopmentAuthenticationTokenRequestDefaultTypeInternal _GetDevelopmentAuthenticationTokenRequest_default_instance_;
class GetDevelopmentAuthenticationTokenResponse;
class GetDevelopmentAuthenticationTokenResponseDefaultTypeInternal;
extern GetDevelopmentAuthenticationTokenResponseDefaultTypeInternal _GetDevelopmentAuthenticationTokenResponse_default_instance_;
class ListDevelopmentAuthenticationTokensRequest;
class ListDevelopmentAuthenticationTokensRequestDefaultTypeInternal;
extern ListDevelopmentAuthenticationTokensRequestDefaultTypeInternal _ListDevelopmentAuthenticationTokensRequest_default_instance_;
class ListDevelopmentAuthenticationTokensResponse;
class ListDevelopmentAuthenticationTokensResponseDefaultTypeInternal;
extern ListDevelopmentAuthenticationTokensResponseDefaultTypeInternal _ListDevelopmentAuthenticationTokensResponse_default_instance_;
class LoginToken;
class LoginTokenDefaultTypeInternal;
extern LoginTokenDefaultTypeInternal _LoginToken_default_instance_;
class PlayerIdentityToken;
class PlayerIdentityTokenDefaultTypeInternal;
extern PlayerIdentityTokenDefaultTypeInternal _PlayerIdentityToken_default_instance_;
class UpdateDevelopmentAuthenticationTokenRequest;
class UpdateDevelopmentAuthenticationTokenRequestDefaultTypeInternal;
extern UpdateDevelopmentAuthenticationTokenRequestDefaultTypeInternal _UpdateDevelopmentAuthenticationTokenRequest_default_instance_;
class UpdateDevelopmentAuthenticationTokenResponse;
class UpdateDevelopmentAuthenticationTokenResponseDefaultTypeInternal;
extern UpdateDevelopmentAuthenticationTokenResponseDefaultTypeInternal _UpdateDevelopmentAuthenticationTokenResponse_default_instance_;
}  // namespace v2
}  // namespace playerauth
}  // namespace spatialos
}  // namespace improbable
PROTOBUF_NAMESPACE_OPEN
template<> ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::CreateDevelopmentAuthenticationTokenResponse>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::CreateLoginTokenRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::CreateLoginTokenResponse>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::CreatePlayerIdentityTokenResponse>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::DecodePlayerIdentityTokenResponse>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::DeleteDevelopmentAuthenticationTokenResponse>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::ExpireDevelopmentAuthenticationTokenResponse>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::GetDevelopmentAuthenticationTokenResponse>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::ListDevelopmentAuthenticationTokensResponse>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::LoginToken* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::LoginToken>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::PlayerIdentityToken>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenRequest>(Arena*);
template<> ::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse* Arena::CreateMaybeMessage<::improbable::spatialos::playerauth::v2::UpdateDevelopmentAuthenticationTokenResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace improbable {
namespace spatialos {
namespace playerauth {
namespace v2 {

// ===================================================================

class CreateLoginTokenRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest) */ {
 public:
  inline CreateLoginTokenRequest() : CreateLoginTokenRequest(nullptr) {};
  virtual ~CreateLoginTokenRequest();

  CreateLoginTokenRequest(const CreateLoginTokenRequest& from);
  CreateLoginTokenRequest(CreateLoginTokenRequest&& from) noexcept
    : CreateLoginTokenRequest() {
    *this = ::std::move(from);
  }

  inline CreateLoginTokenRequest& operator=(const CreateLoginTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateLoginTokenRequest& operator=(CreateLoginTokenRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateLoginTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateLoginTokenRequest* internal_default_instance() {
    return reinterpret_cast<const CreateLoginTokenRequest*>(
               &_CreateLoginTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CreateLoginTokenRequest& a, CreateLoginTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateLoginTokenRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateLoginTokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateLoginTokenRequest* New() const final {
    return CreateMaybeMessage<CreateLoginTokenRequest>(nullptr);
  }

  CreateLoginTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateLoginTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateLoginTokenRequest& from);
  void MergeFrom(const CreateLoginTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateLoginTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.CreateLoginTokenRequest";
  }
  protected:
  explicit CreateLoginTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdentityTokenFieldNumber = 1,
    kDeploymentIdFieldNumber = 2,
    kWorkerTypeFieldNumber = 4,
    kLifetimeDurationFieldNumber = 3,
  };
  // string player_identity_token = 1 [(.google.api.field_behavior) = REQUIRED];
  void clear_player_identity_token();
  const std::string& player_identity_token() const;
  void set_player_identity_token(const std::string& value);
  void set_player_identity_token(std::string&& value);
  void set_player_identity_token(const char* value);
  void set_player_identity_token(const char* value, size_t size);
  std::string* mutable_player_identity_token();
  std::string* release_player_identity_token();
  void set_allocated_player_identity_token(std::string* player_identity_token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_player_identity_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_player_identity_token(
      std::string* player_identity_token);
  private:
  const std::string& _internal_player_identity_token() const;
  void _internal_set_player_identity_token(const std::string& value);
  std::string* _internal_mutable_player_identity_token();
  public:

  // string deployment_id = 2 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
  void clear_deployment_id();
  const std::string& deployment_id() const;
  void set_deployment_id(const std::string& value);
  void set_deployment_id(std::string&& value);
  void set_deployment_id(const char* value);
  void set_deployment_id(const char* value, size_t size);
  std::string* mutable_deployment_id();
  std::string* release_deployment_id();
  void set_allocated_deployment_id(std::string* deployment_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_deployment_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_deployment_id(
      std::string* deployment_id);
  private:
  const std::string& _internal_deployment_id() const;
  void _internal_set_deployment_id(const std::string& value);
  std::string* _internal_mutable_deployment_id();
  public:

  // string worker_type = 4 [(.validator.field) = {
  void clear_worker_type();
  const std::string& worker_type() const;
  void set_worker_type(const std::string& value);
  void set_worker_type(std::string&& value);
  void set_worker_type(const char* value);
  void set_worker_type(const char* value, size_t size);
  std::string* mutable_worker_type();
  std::string* release_worker_type();
  void set_allocated_worker_type(std::string* worker_type);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_worker_type();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_worker_type(
      std::string* worker_type);
  private:
  const std::string& _internal_worker_type() const;
  void _internal_set_worker_type(const std::string& value);
  std::string* _internal_mutable_worker_type();
  public:

  // .google.protobuf.Duration lifetime_duration = 3;
  bool has_lifetime_duration() const;
  private:
  bool _internal_has_lifetime_duration() const;
  public:
  void clear_lifetime_duration();
  const PROTOBUF_NAMESPACE_ID::Duration& lifetime_duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_lifetime_duration();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_lifetime_duration();
  void set_allocated_lifetime_duration(PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_lifetime_duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_lifetime_duration();
  public:
  void unsafe_arena_set_allocated_lifetime_duration(
      PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_lifetime_duration();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr player_identity_token_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr deployment_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr worker_type_;
  PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class CreateLoginTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse) */ {
 public:
  inline CreateLoginTokenResponse() : CreateLoginTokenResponse(nullptr) {};
  virtual ~CreateLoginTokenResponse();

  CreateLoginTokenResponse(const CreateLoginTokenResponse& from);
  CreateLoginTokenResponse(CreateLoginTokenResponse&& from) noexcept
    : CreateLoginTokenResponse() {
    *this = ::std::move(from);
  }

  inline CreateLoginTokenResponse& operator=(const CreateLoginTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateLoginTokenResponse& operator=(CreateLoginTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateLoginTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateLoginTokenResponse* internal_default_instance() {
    return reinterpret_cast<const CreateLoginTokenResponse*>(
               &_CreateLoginTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateLoginTokenResponse& a, CreateLoginTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateLoginTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateLoginTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateLoginTokenResponse* New() const final {
    return CreateMaybeMessage<CreateLoginTokenResponse>(nullptr);
  }

  CreateLoginTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateLoginTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateLoginTokenResponse& from);
  void MergeFrom(const CreateLoginTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateLoginTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.CreateLoginTokenResponse";
  }
  protected:
  explicit CreateLoginTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLoginTokenFieldNumber = 1,
  };
  // string login_token = 1;
  void clear_login_token();
  const std::string& login_token() const;
  void set_login_token(const std::string& value);
  void set_login_token(std::string&& value);
  void set_login_token(const char* value);
  void set_login_token(const char* value, size_t size);
  std::string* mutable_login_token();
  std::string* release_login_token();
  void set_allocated_login_token(std::string* login_token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_login_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_login_token(
      std::string* login_token);
  private:
  const std::string& _internal_login_token() const;
  void _internal_set_login_token(const std::string& value);
  std::string* _internal_mutable_login_token();
  public:

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr login_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class CreatePlayerIdentityTokenRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest) */ {
 public:
  inline CreatePlayerIdentityTokenRequest() : CreatePlayerIdentityTokenRequest(nullptr) {};
  virtual ~CreatePlayerIdentityTokenRequest();

  CreatePlayerIdentityTokenRequest(const CreatePlayerIdentityTokenRequest& from);
  CreatePlayerIdentityTokenRequest(CreatePlayerIdentityTokenRequest&& from) noexcept
    : CreatePlayerIdentityTokenRequest() {
    *this = ::std::move(from);
  }

  inline CreatePlayerIdentityTokenRequest& operator=(const CreatePlayerIdentityTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePlayerIdentityTokenRequest& operator=(CreatePlayerIdentityTokenRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreatePlayerIdentityTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePlayerIdentityTokenRequest* internal_default_instance() {
    return reinterpret_cast<const CreatePlayerIdentityTokenRequest*>(
               &_CreatePlayerIdentityTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CreatePlayerIdentityTokenRequest& a, CreatePlayerIdentityTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatePlayerIdentityTokenRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePlayerIdentityTokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreatePlayerIdentityTokenRequest* New() const final {
    return CreateMaybeMessage<CreatePlayerIdentityTokenRequest>(nullptr);
  }

  CreatePlayerIdentityTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreatePlayerIdentityTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreatePlayerIdentityTokenRequest& from);
  void MergeFrom(const CreatePlayerIdentityTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePlayerIdentityTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest";
  }
  protected:
  explicit CreatePlayerIdentityTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProviderFieldNumber = 1,
    kPlayerIdentifierFieldNumber = 2,
    kProjectNameFieldNumber = 3,
    kDisplayNameFieldNumber = 5,
    kMetadataFieldNumber = 6,
    kLifetimeDurationFieldNumber = 4,
  };
  // string provider = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  void clear_provider();
  const std::string& provider() const;
  void set_provider(const std::string& value);
  void set_provider(std::string&& value);
  void set_provider(const char* value);
  void set_provider(const char* value, size_t size);
  std::string* mutable_provider();
  std::string* release_provider();
  void set_allocated_provider(std::string* provider);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_provider();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_provider(
      std::string* provider);
  private:
  const std::string& _internal_provider() const;
  void _internal_set_provider(const std::string& value);
  std::string* _internal_mutable_provider();
  public:

  // string player_identifier = 2 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  void clear_player_identifier();
  const std::string& player_identifier() const;
  void set_player_identifier(const std::string& value);
  void set_player_identifier(std::string&& value);
  void set_player_identifier(const char* value);
  void set_player_identifier(const char* value, size_t size);
  std::string* mutable_player_identifier();
  std::string* release_player_identifier();
  void set_allocated_player_identifier(std::string* player_identifier);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_player_identifier();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_player_identifier(
      std::string* player_identifier);
  private:
  const std::string& _internal_player_identifier() const;
  void _internal_set_player_identifier(const std::string& value);
  std::string* _internal_mutable_player_identifier();
  public:

  // string project_name = 3 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
  void clear_project_name();
  const std::string& project_name() const;
  void set_project_name(const std::string& value);
  void set_project_name(std::string&& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  std::string* mutable_project_name();
  std::string* release_project_name();
  void set_allocated_project_name(std::string* project_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_project_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project_name(
      std::string* project_name);
  private:
  const std::string& _internal_project_name() const;
  void _internal_set_project_name(const std::string& value);
  std::string* _internal_mutable_project_name();
  public:

  // string display_name = 5;
  void clear_display_name();
  const std::string& display_name() const;
  void set_display_name(const std::string& value);
  void set_display_name(std::string&& value);
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  std::string* mutable_display_name();
  std::string* release_display_name();
  void set_allocated_display_name(std::string* display_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_display_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      std::string* display_name);
  private:
  const std::string& _internal_display_name() const;
  void _internal_set_display_name(const std::string& value);
  std::string* _internal_mutable_display_name();
  public:

  // bytes metadata = 6;
  void clear_metadata();
  const std::string& metadata() const;
  void set_metadata(const std::string& value);
  void set_metadata(std::string&& value);
  void set_metadata(const char* value);
  void set_metadata(const void* value, size_t size);
  std::string* mutable_metadata();
  std::string* release_metadata();
  void set_allocated_metadata(std::string* metadata);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_metadata();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_metadata(
      std::string* metadata);
  private:
  const std::string& _internal_metadata() const;
  void _internal_set_metadata(const std::string& value);
  std::string* _internal_mutable_metadata();
  public:

  // .google.protobuf.Duration lifetime_duration = 4;
  bool has_lifetime_duration() const;
  private:
  bool _internal_has_lifetime_duration() const;
  public:
  void clear_lifetime_duration();
  const PROTOBUF_NAMESPACE_ID::Duration& lifetime_duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_lifetime_duration();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_lifetime_duration();
  void set_allocated_lifetime_duration(PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_lifetime_duration() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_lifetime_duration();
  public:
  void unsafe_arena_set_allocated_lifetime_duration(
      PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_lifetime_duration();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr provider_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr player_identifier_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr display_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr metadata_;
  PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class CreatePlayerIdentityTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse) */ {
 public:
  inline CreatePlayerIdentityTokenResponse() : CreatePlayerIdentityTokenResponse(nullptr) {};
  virtual ~CreatePlayerIdentityTokenResponse();

  CreatePlayerIdentityTokenResponse(const CreatePlayerIdentityTokenResponse& from);
  CreatePlayerIdentityTokenResponse(CreatePlayerIdentityTokenResponse&& from) noexcept
    : CreatePlayerIdentityTokenResponse() {
    *this = ::std::move(from);
  }

  inline CreatePlayerIdentityTokenResponse& operator=(const CreatePlayerIdentityTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePlayerIdentityTokenResponse& operator=(CreatePlayerIdentityTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreatePlayerIdentityTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreatePlayerIdentityTokenResponse* internal_default_instance() {
    return reinterpret_cast<const CreatePlayerIdentityTokenResponse*>(
               &_CreatePlayerIdentityTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CreatePlayerIdentityTokenResponse& a, CreatePlayerIdentityTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatePlayerIdentityTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePlayerIdentityTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreatePlayerIdentityTokenResponse* New() const final {
    return CreateMaybeMessage<CreatePlayerIdentityTokenResponse>(nullptr);
  }

  CreatePlayerIdentityTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreatePlayerIdentityTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreatePlayerIdentityTokenResponse& from);
  void MergeFrom(const CreatePlayerIdentityTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePlayerIdentityTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse";
  }
  protected:
  explicit CreatePlayerIdentityTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdentityTokenFieldNumber = 1,
  };
  // string player_identity_token = 1;
  void clear_player_identity_token();
  const std::string& player_identity_token() const;
  void set_player_identity_token(const std::string& value);
  void set_player_identity_token(std::string&& value);
  void set_player_identity_token(const char* value);
  void set_player_identity_token(const char* value, size_t size);
  std::string* mutable_player_identity_token();
  std::string* release_player_identity_token();
  void set_allocated_player_identity_token(std::string* player_identity_token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_player_identity_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_player_identity_token(
      std::string* player_identity_token);
  private:
  const std::string& _internal_player_identity_token() const;
  void _internal_set_player_identity_token(const std::string& value);
  std::string* _internal_mutable_player_identity_token();
  public:

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr player_identity_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class DecodePlayerIdentityTokenRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest) */ {
 public:
  inline DecodePlayerIdentityTokenRequest() : DecodePlayerIdentityTokenRequest(nullptr) {};
  virtual ~DecodePlayerIdentityTokenRequest();

  DecodePlayerIdentityTokenRequest(const DecodePlayerIdentityTokenRequest& from);
  DecodePlayerIdentityTokenRequest(DecodePlayerIdentityTokenRequest&& from) noexcept
    : DecodePlayerIdentityTokenRequest() {
    *this = ::std::move(from);
  }

  inline DecodePlayerIdentityTokenRequest& operator=(const DecodePlayerIdentityTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecodePlayerIdentityTokenRequest& operator=(DecodePlayerIdentityTokenRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DecodePlayerIdentityTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecodePlayerIdentityTokenRequest* internal_default_instance() {
    return reinterpret_cast<const DecodePlayerIdentityTokenRequest*>(
               &_DecodePlayerIdentityTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(DecodePlayerIdentityTokenRequest& a, DecodePlayerIdentityTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DecodePlayerIdentityTokenRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DecodePlayerIdentityTokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DecodePlayerIdentityTokenRequest* New() const final {
    return CreateMaybeMessage<DecodePlayerIdentityTokenRequest>(nullptr);
  }

  DecodePlayerIdentityTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DecodePlayerIdentityTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DecodePlayerIdentityTokenRequest& from);
  void MergeFrom(const DecodePlayerIdentityTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecodePlayerIdentityTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest";
  }
  protected:
  explicit DecodePlayerIdentityTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdentityTokenFieldNumber = 1,
  };
  // string player_identity_token = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  void clear_player_identity_token();
  const std::string& player_identity_token() const;
  void set_player_identity_token(const std::string& value);
  void set_player_identity_token(std::string&& value);
  void set_player_identity_token(const char* value);
  void set_player_identity_token(const char* value, size_t size);
  std::string* mutable_player_identity_token();
  std::string* release_player_identity_token();
  void set_allocated_player_identity_token(std::string* player_identity_token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_player_identity_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_player_identity_token(
      std::string* player_identity_token);
  private:
  const std::string& _internal_player_identity_token() const;
  void _internal_set_player_identity_token(const std::string& value);
  std::string* _internal_mutable_player_identity_token();
  public:

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr player_identity_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class DecodePlayerIdentityTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenResponse) */ {
 public:
  inline DecodePlayerIdentityTokenResponse() : DecodePlayerIdentityTokenResponse(nullptr) {};
  virtual ~DecodePlayerIdentityTokenResponse();

  DecodePlayerIdentityTokenResponse(const DecodePlayerIdentityTokenResponse& from);
  DecodePlayerIdentityTokenResponse(DecodePlayerIdentityTokenResponse&& from) noexcept
    : DecodePlayerIdentityTokenResponse() {
    *this = ::std::move(from);
  }

  inline DecodePlayerIdentityTokenResponse& operator=(const DecodePlayerIdentityTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecodePlayerIdentityTokenResponse& operator=(DecodePlayerIdentityTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DecodePlayerIdentityTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecodePlayerIdentityTokenResponse* internal_default_instance() {
    return reinterpret_cast<const DecodePlayerIdentityTokenResponse*>(
               &_DecodePlayerIdentityTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(DecodePlayerIdentityTokenResponse& a, DecodePlayerIdentityTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DecodePlayerIdentityTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DecodePlayerIdentityTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DecodePlayerIdentityTokenResponse* New() const final {
    return CreateMaybeMessage<DecodePlayerIdentityTokenResponse>(nullptr);
  }

  DecodePlayerIdentityTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DecodePlayerIdentityTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DecodePlayerIdentityTokenResponse& from);
  void MergeFrom(const DecodePlayerIdentityTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecodePlayerIdentityTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenResponse";
  }
  protected:
  explicit DecodePlayerIdentityTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdentityTokenFieldNumber = 1,
  };
  // .improbable.spatialos.playerauth.v2.PlayerIdentityToken player_identity_token = 1 [(.validator.field) = {
  bool has_player_identity_token() const;
  private:
  bool _internal_has_player_identity_token() const;
  public:
  void clear_player_identity_token();
  const ::improbable::spatialos::playerauth::v2::PlayerIdentityToken& player_identity_token() const;
  ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* release_player_identity_token();
  ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* mutable_player_identity_token();
  void set_allocated_player_identity_token(::improbable::spatialos::playerauth::v2::PlayerIdentityToken* player_identity_token);
  private:
  const ::improbable::spatialos::playerauth::v2::PlayerIdentityToken& _internal_player_identity_token() const;
  ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* _internal_mutable_player_identity_token();
  public:
  void unsafe_arena_set_allocated_player_identity_token(
      ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* player_identity_token);
  ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* unsafe_arena_release_player_identity_token();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* player_identity_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class PlayerIdentityToken PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.PlayerIdentityToken) */ {
 public:
  inline PlayerIdentityToken() : PlayerIdentityToken(nullptr) {};
  virtual ~PlayerIdentityToken();

  PlayerIdentityToken(const PlayerIdentityToken& from);
  PlayerIdentityToken(PlayerIdentityToken&& from) noexcept
    : PlayerIdentityToken() {
    *this = ::std::move(from);
  }

  inline PlayerIdentityToken& operator=(const PlayerIdentityToken& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerIdentityToken& operator=(PlayerIdentityToken&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlayerIdentityToken& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerIdentityToken* internal_default_instance() {
    return reinterpret_cast<const PlayerIdentityToken*>(
               &_PlayerIdentityToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PlayerIdentityToken& a, PlayerIdentityToken& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerIdentityToken* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerIdentityToken* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlayerIdentityToken* New() const final {
    return CreateMaybeMessage<PlayerIdentityToken>(nullptr);
  }

  PlayerIdentityToken* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlayerIdentityToken>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlayerIdentityToken& from);
  void MergeFrom(const PlayerIdentityToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerIdentityToken* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.PlayerIdentityToken";
  }
  protected:
  explicit PlayerIdentityToken(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProviderFieldNumber = 1,
    kPlayerIdentifierFieldNumber = 2,
    kProjectNameFieldNumber = 3,
    kDisplayNameFieldNumber = 5,
    kMetadataFieldNumber = 6,
    kIssuedAtTimeFieldNumber = 7,
    kExpiryTimeFieldNumber = 8,
  };
  // string provider = 1[json_name = "prvdr"];
  void clear_provider();
  const std::string& provider() const;
  void set_provider(const std::string& value);
  void set_provider(std::string&& value);
  void set_provider(const char* value);
  void set_provider(const char* value, size_t size);
  std::string* mutable_provider();
  std::string* release_provider();
  void set_allocated_provider(std::string* provider);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_provider();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_provider(
      std::string* provider);
  private:
  const std::string& _internal_provider() const;
  void _internal_set_provider(const std::string& value);
  std::string* _internal_mutable_provider();
  public:

  // string player_identifier = 2[json_name = "sub"];
  void clear_player_identifier();
  const std::string& player_identifier() const;
  void set_player_identifier(const std::string& value);
  void set_player_identifier(std::string&& value);
  void set_player_identifier(const char* value);
  void set_player_identifier(const char* value, size_t size);
  std::string* mutable_player_identifier();
  std::string* release_player_identifier();
  void set_allocated_player_identifier(std::string* player_identifier);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_player_identifier();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_player_identifier(
      std::string* player_identifier);
  private:
  const std::string& _internal_player_identifier() const;
  void _internal_set_player_identifier(const std::string& value);
  std::string* _internal_mutable_player_identifier();
  public:

  // string project_name = 3[json_name = "prj", (.validator.field) = {
  void clear_project_name();
  const std::string& project_name() const;
  void set_project_name(const std::string& value);
  void set_project_name(std::string&& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  std::string* mutable_project_name();
  std::string* release_project_name();
  void set_allocated_project_name(std::string* project_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_project_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project_name(
      std::string* project_name);
  private:
  const std::string& _internal_project_name() const;
  void _internal_set_project_name(const std::string& value);
  std::string* _internal_mutable_project_name();
  public:

  // string display_name = 5[json_name = "dn"];
  void clear_display_name();
  const std::string& display_name() const;
  void set_display_name(const std::string& value);
  void set_display_name(std::string&& value);
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  std::string* mutable_display_name();
  std::string* release_display_name();
  void set_allocated_display_name(std::string* display_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_display_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_display_name(
      std::string* display_name);
  private:
  const std::string& _internal_display_name() const;
  void _internal_set_display_name(const std::string& value);
  std::string* _internal_mutable_display_name();
  public:

  // bytes metadata = 6[json_name = "md"];
  void clear_metadata();
  const std::string& metadata() const;
  void set_metadata(const std::string& value);
  void set_metadata(std::string&& value);
  void set_metadata(const char* value);
  void set_metadata(const void* value, size_t size);
  std::string* mutable_metadata();
  std::string* release_metadata();
  void set_allocated_metadata(std::string* metadata);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_metadata();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_metadata(
      std::string* metadata);
  private:
  const std::string& _internal_metadata() const;
  void _internal_set_metadata(const std::string& value);
  std::string* _internal_mutable_metadata();
  public:

  // .google.protobuf.Timestamp issued_at_time = 7[json_name = "iat"];
  bool has_issued_at_time() const;
  private:
  bool _internal_has_issued_at_time() const;
  public:
  void clear_issued_at_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& issued_at_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_issued_at_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_issued_at_time();
  void set_allocated_issued_at_time(PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_issued_at_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_issued_at_time();
  public:
  void unsafe_arena_set_allocated_issued_at_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_issued_at_time();

  // .google.protobuf.Timestamp expiry_time = 8[json_name = "exp"];
  bool has_expiry_time() const;
  private:
  bool _internal_has_expiry_time() const;
  public:
  void clear_expiry_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& expiry_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_expiry_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_expiry_time();
  void set_allocated_expiry_time(PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_expiry_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_expiry_time();
  public:
  void unsafe_arena_set_allocated_expiry_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_expiry_time();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.PlayerIdentityToken)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr provider_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr player_identifier_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr display_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr metadata_;
  PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time_;
  PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class LoginToken PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.LoginToken) */ {
 public:
  inline LoginToken() : LoginToken(nullptr) {};
  virtual ~LoginToken();

  LoginToken(const LoginToken& from);
  LoginToken(LoginToken&& from) noexcept
    : LoginToken() {
    *this = ::std::move(from);
  }

  inline LoginToken& operator=(const LoginToken& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginToken& operator=(LoginToken&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoginToken& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginToken* internal_default_instance() {
    return reinterpret_cast<const LoginToken*>(
               &_LoginToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(LoginToken& a, LoginToken& b) {
    a.Swap(&b);
  }
  inline void Swap(LoginToken* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginToken* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoginToken* New() const final {
    return CreateMaybeMessage<LoginToken>(nullptr);
  }

  LoginToken* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoginToken>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoginToken& from);
  void MergeFrom(const LoginToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginToken* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.LoginToken";
  }
  protected:
  explicit LoginToken(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProviderFieldNumber = 1,
    kPlayerIdentifierFieldNumber = 2,
    kProjectNameFieldNumber = 3,
    kDeploymentIdFieldNumber = 4,
    kWorkerTypeFieldNumber = 5,
    kIssuedAtTimeFieldNumber = 6,
    kExpiryTimeFieldNumber = 7,
  };
  // string provider = 1[json_name = "prvdr"];
  void clear_provider();
  const std::string& provider() const;
  void set_provider(const std::string& value);
  void set_provider(std::string&& value);
  void set_provider(const char* value);
  void set_provider(const char* value, size_t size);
  std::string* mutable_provider();
  std::string* release_provider();
  void set_allocated_provider(std::string* provider);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_provider();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_provider(
      std::string* provider);
  private:
  const std::string& _internal_provider() const;
  void _internal_set_provider(const std::string& value);
  std::string* _internal_mutable_provider();
  public:

  // string player_identifier = 2[json_name = "sub"];
  void clear_player_identifier();
  const std::string& player_identifier() const;
  void set_player_identifier(const std::string& value);
  void set_player_identifier(std::string&& value);
  void set_player_identifier(const char* value);
  void set_player_identifier(const char* value, size_t size);
  std::string* mutable_player_identifier();
  std::string* release_player_identifier();
  void set_allocated_player_identifier(std::string* player_identifier);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_player_identifier();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_player_identifier(
      std::string* player_identifier);
  private:
  const std::string& _internal_player_identifier() const;
  void _internal_set_player_identifier(const std::string& value);
  std::string* _internal_mutable_player_identifier();
  public:

  // string project_name = 3[json_name = "prj", (.validator.field) = {
  void clear_project_name();
  const std::string& project_name() const;
  void set_project_name(const std::string& value);
  void set_project_name(std::string&& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  std::string* mutable_project_name();
  std::string* release_project_name();
  void set_allocated_project_name(std::string* project_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_project_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project_name(
      std::string* project_name);
  private:
  const std::string& _internal_project_name() const;
  void _internal_set_project_name(const std::string& value);
  std::string* _internal_mutable_project_name();
  public:

  // string deployment_id = 4[json_name = "dpl"];
  void clear_deployment_id();
  const std::string& deployment_id() const;
  void set_deployment_id(const std::string& value);
  void set_deployment_id(std::string&& value);
  void set_deployment_id(const char* value);
  void set_deployment_id(const char* value, size_t size);
  std::string* mutable_deployment_id();
  std::string* release_deployment_id();
  void set_allocated_deployment_id(std::string* deployment_id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_deployment_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_deployment_id(
      std::string* deployment_id);
  private:
  const std::string& _internal_deployment_id() const;
  void _internal_set_deployment_id(const std::string& value);
  std::string* _internal_mutable_deployment_id();
  public:

  // string worker_type = 5[json_name = "wkt"];
  void clear_worker_type();
  const std::string& worker_type() const;
  void set_worker_type(const std::string& value);
  void set_worker_type(std::string&& value);
  void set_worker_type(const char* value);
  void set_worker_type(const char* value, size_t size);
  std::string* mutable_worker_type();
  std::string* release_worker_type();
  void set_allocated_worker_type(std::string* worker_type);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_worker_type();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_worker_type(
      std::string* worker_type);
  private:
  const std::string& _internal_worker_type() const;
  void _internal_set_worker_type(const std::string& value);
  std::string* _internal_mutable_worker_type();
  public:

  // .google.protobuf.Timestamp issued_at_time = 6[json_name = "iat"];
  bool has_issued_at_time() const;
  private:
  bool _internal_has_issued_at_time() const;
  public:
  void clear_issued_at_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& issued_at_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_issued_at_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_issued_at_time();
  void set_allocated_issued_at_time(PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_issued_at_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_issued_at_time();
  public:
  void unsafe_arena_set_allocated_issued_at_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_issued_at_time();

  // .google.protobuf.Timestamp expiry_time = 7[json_name = "exp"];
  bool has_expiry_time() const;
  private:
  bool _internal_has_expiry_time() const;
  public:
  void clear_expiry_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& expiry_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_expiry_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_expiry_time();
  void set_allocated_expiry_time(PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_expiry_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_expiry_time();
  public:
  void unsafe_arena_set_allocated_expiry_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_expiry_time();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.LoginToken)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr provider_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr player_identifier_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr deployment_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr worker_type_;
  PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time_;
  PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class DevelopmentAuthenticationToken PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken) */ {
 public:
  inline DevelopmentAuthenticationToken() : DevelopmentAuthenticationToken(nullptr) {};
  virtual ~DevelopmentAuthenticationToken();

  DevelopmentAuthenticationToken(const DevelopmentAuthenticationToken& from);
  DevelopmentAuthenticationToken(DevelopmentAuthenticationToken&& from) noexcept
    : DevelopmentAuthenticationToken() {
    *this = ::std::move(from);
  }

  inline DevelopmentAuthenticationToken& operator=(const DevelopmentAuthenticationToken& from) {
    CopyFrom(from);
    return *this;
  }
  inline DevelopmentAuthenticationToken& operator=(DevelopmentAuthenticationToken&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DevelopmentAuthenticationToken& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DevelopmentAuthenticationToken* internal_default_instance() {
    return reinterpret_cast<const DevelopmentAuthenticationToken*>(
               &_DevelopmentAuthenticationToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(DevelopmentAuthenticationToken& a, DevelopmentAuthenticationToken& b) {
    a.Swap(&b);
  }
  inline void Swap(DevelopmentAuthenticationToken* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DevelopmentAuthenticationToken* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DevelopmentAuthenticationToken* New() const final {
    return CreateMaybeMessage<DevelopmentAuthenticationToken>(nullptr);
  }

  DevelopmentAuthenticationToken* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DevelopmentAuthenticationToken>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DevelopmentAuthenticationToken& from);
  void MergeFrom(const DevelopmentAuthenticationToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DevelopmentAuthenticationToken* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken";
  }
  protected:
  explicit DevelopmentAuthenticationToken(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kProjectNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCreationTimeFieldNumber = 4,
    kExpirationTimeFieldNumber = 5,
  };
  // string id = 1 [(.improbable.logfield) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string project_name = 2 [(.improbable.logfield) = {
  void clear_project_name();
  const std::string& project_name() const;
  void set_project_name(const std::string& value);
  void set_project_name(std::string&& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  std::string* mutable_project_name();
  std::string* release_project_name();
  void set_allocated_project_name(std::string* project_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_project_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project_name(
      std::string* project_name);
  private:
  const std::string& _internal_project_name() const;
  void _internal_set_project_name(const std::string& value);
  std::string* _internal_mutable_project_name();
  public:

  // string description = 3 [(.validator.field) = {
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_description();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // .google.protobuf.Timestamp creation_time = 4;
  bool has_creation_time() const;
  private:
  bool _internal_has_creation_time() const;
  public:
  void clear_creation_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& creation_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_creation_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_creation_time();
  void set_allocated_creation_time(PROTOBUF_NAMESPACE_ID::Timestamp* creation_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_creation_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_creation_time();
  public:
  void unsafe_arena_set_allocated_creation_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* creation_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_creation_time();

  // .google.protobuf.Timestamp expiration_time = 5;
  bool has_expiration_time() const;
  private:
  bool _internal_has_expiration_time() const;
  public:
  void clear_expiration_time();
  const PROTOBUF_NAMESPACE_ID::Timestamp& expiration_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* release_expiration_time();
  PROTOBUF_NAMESPACE_ID::Timestamp* mutable_expiration_time();
  void set_allocated_expiration_time(PROTOBUF_NAMESPACE_ID::Timestamp* expiration_time);
  private:
  const PROTOBUF_NAMESPACE_ID::Timestamp& _internal_expiration_time() const;
  PROTOBUF_NAMESPACE_ID::Timestamp* _internal_mutable_expiration_time();
  public:
  void unsafe_arena_set_allocated_expiration_time(
      PROTOBUF_NAMESPACE_ID::Timestamp* expiration_time);
  PROTOBUF_NAMESPACE_ID::Timestamp* unsafe_arena_release_expiration_time();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  PROTOBUF_NAMESPACE_ID::Timestamp* creation_time_;
  PROTOBUF_NAMESPACE_ID::Timestamp* expiration_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class CreateDevelopmentAuthenticationTokenRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest) */ {
 public:
  inline CreateDevelopmentAuthenticationTokenRequest() : CreateDevelopmentAuthenticationTokenRequest(nullptr) {};
  virtual ~CreateDevelopmentAuthenticationTokenRequest();

  CreateDevelopmentAuthenticationTokenRequest(const CreateDevelopmentAuthenticationTokenRequest& from);
  CreateDevelopmentAuthenticationTokenRequest(CreateDevelopmentAuthenticationTokenRequest&& from) noexcept
    : CreateDevelopmentAuthenticationTokenRequest() {
    *this = ::std::move(from);
  }

  inline CreateDevelopmentAuthenticationTokenRequest& operator=(const CreateDevelopmentAuthenticationTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDevelopmentAuthenticationTokenRequest& operator=(CreateDevelopmentAuthenticationTokenRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateDevelopmentAuthenticationTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDevelopmentAuthenticationTokenRequest* internal_default_instance() {
    return reinterpret_cast<const CreateDevelopmentAuthenticationTokenRequest*>(
               &_CreateDevelopmentAuthenticationTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CreateDevelopmentAuthenticationTokenRequest& a, CreateDevelopmentAuthenticationTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateDevelopmentAuthenticationTokenRequest* New() const final {
    return CreateMaybeMessage<CreateDevelopmentAuthenticationTokenRequest>(nullptr);
  }

  CreateDevelopmentAuthenticationTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateDevelopmentAuthenticationTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateDevelopmentAuthenticationTokenRequest& from);
  void MergeFrom(const CreateDevelopmentAuthenticationTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDevelopmentAuthenticationTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest";
  }
  protected:
  explicit CreateDevelopmentAuthenticationTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectNameFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kLifetimeFieldNumber = 3,
  };
  // string project_name = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
  void clear_project_name();
  const std::string& project_name() const;
  void set_project_name(const std::string& value);
  void set_project_name(std::string&& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  std::string* mutable_project_name();
  std::string* release_project_name();
  void set_allocated_project_name(std::string* project_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_project_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project_name(
      std::string* project_name);
  private:
  const std::string& _internal_project_name() const;
  void _internal_set_project_name(const std::string& value);
  std::string* _internal_mutable_project_name();
  public:

  // string description = 2 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_description();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // .google.protobuf.Duration lifetime = 3;
  bool has_lifetime() const;
  private:
  bool _internal_has_lifetime() const;
  public:
  void clear_lifetime();
  const PROTOBUF_NAMESPACE_ID::Duration& lifetime() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_lifetime();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_lifetime();
  void set_allocated_lifetime(PROTOBUF_NAMESPACE_ID::Duration* lifetime);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_lifetime() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_lifetime();
  public:
  void unsafe_arena_set_allocated_lifetime(
      PROTOBUF_NAMESPACE_ID::Duration* lifetime);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_lifetime();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  PROTOBUF_NAMESPACE_ID::Duration* lifetime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class CreateDevelopmentAuthenticationTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse) */ {
 public:
  inline CreateDevelopmentAuthenticationTokenResponse() : CreateDevelopmentAuthenticationTokenResponse(nullptr) {};
  virtual ~CreateDevelopmentAuthenticationTokenResponse();

  CreateDevelopmentAuthenticationTokenResponse(const CreateDevelopmentAuthenticationTokenResponse& from);
  CreateDevelopmentAuthenticationTokenResponse(CreateDevelopmentAuthenticationTokenResponse&& from) noexcept
    : CreateDevelopmentAuthenticationTokenResponse() {
    *this = ::std::move(from);
  }

  inline CreateDevelopmentAuthenticationTokenResponse& operator=(const CreateDevelopmentAuthenticationTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateDevelopmentAuthenticationTokenResponse& operator=(CreateDevelopmentAuthenticationTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateDevelopmentAuthenticationTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateDevelopmentAuthenticationTokenResponse* internal_default_instance() {
    return reinterpret_cast<const CreateDevelopmentAuthenticationTokenResponse*>(
               &_CreateDevelopmentAuthenticationTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CreateDevelopmentAuthenticationTokenResponse& a, CreateDevelopmentAuthenticationTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateDevelopmentAuthenticationTokenResponse* New() const final {
    return CreateMaybeMessage<CreateDevelopmentAuthenticationTokenResponse>(nullptr);
  }

  CreateDevelopmentAuthenticationTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateDevelopmentAuthenticationTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateDevelopmentAuthenticationTokenResponse& from);
  void MergeFrom(const CreateDevelopmentAuthenticationTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateDevelopmentAuthenticationTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse";
  }
  protected:
  explicit CreateDevelopmentAuthenticationTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenSecretFieldNumber = 2,
    kDevelopmentAuthenticationTokenFieldNumber = 1,
  };
  // string token_secret = 2;
  void clear_token_secret();
  const std::string& token_secret() const;
  void set_token_secret(const std::string& value);
  void set_token_secret(std::string&& value);
  void set_token_secret(const char* value);
  void set_token_secret(const char* value, size_t size);
  std::string* mutable_token_secret();
  std::string* release_token_secret();
  void set_allocated_token_secret(std::string* token_secret);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_token_secret();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_token_secret(
      std::string* token_secret);
  private:
  const std::string& _internal_token_secret() const;
  void _internal_set_token_secret(const std::string& value);
  std::string* _internal_mutable_token_secret();
  public:

  // .improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken development_authentication_token = 1;
  bool has_development_authentication_token() const;
  private:
  bool _internal_has_development_authentication_token() const;
  public:
  void clear_development_authentication_token();
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& development_authentication_token() const;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* release_development_authentication_token();
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* mutable_development_authentication_token();
  void set_allocated_development_authentication_token(::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token);
  private:
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& _internal_development_authentication_token() const;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* _internal_mutable_development_authentication_token();
  public:
  void unsafe_arena_set_allocated_development_authentication_token(
      ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token);
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* unsafe_arena_release_development_authentication_token();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr token_secret_;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class GetDevelopmentAuthenticationTokenRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest) */ {
 public:
  inline GetDevelopmentAuthenticationTokenRequest() : GetDevelopmentAuthenticationTokenRequest(nullptr) {};
  virtual ~GetDevelopmentAuthenticationTokenRequest();

  GetDevelopmentAuthenticationTokenRequest(const GetDevelopmentAuthenticationTokenRequest& from);
  GetDevelopmentAuthenticationTokenRequest(GetDevelopmentAuthenticationTokenRequest&& from) noexcept
    : GetDevelopmentAuthenticationTokenRequest() {
    *this = ::std::move(from);
  }

  inline GetDevelopmentAuthenticationTokenRequest& operator=(const GetDevelopmentAuthenticationTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDevelopmentAuthenticationTokenRequest& operator=(GetDevelopmentAuthenticationTokenRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetDevelopmentAuthenticationTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDevelopmentAuthenticationTokenRequest* internal_default_instance() {
    return reinterpret_cast<const GetDevelopmentAuthenticationTokenRequest*>(
               &_GetDevelopmentAuthenticationTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GetDevelopmentAuthenticationTokenRequest& a, GetDevelopmentAuthenticationTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetDevelopmentAuthenticationTokenRequest* New() const final {
    return CreateMaybeMessage<GetDevelopmentAuthenticationTokenRequest>(nullptr);
  }

  GetDevelopmentAuthenticationTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetDevelopmentAuthenticationTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetDevelopmentAuthenticationTokenRequest& from);
  void MergeFrom(const GetDevelopmentAuthenticationTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDevelopmentAuthenticationTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest";
  }
  protected:
  explicit GetDevelopmentAuthenticationTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class GetDevelopmentAuthenticationTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenResponse) */ {
 public:
  inline GetDevelopmentAuthenticationTokenResponse() : GetDevelopmentAuthenticationTokenResponse(nullptr) {};
  virtual ~GetDevelopmentAuthenticationTokenResponse();

  GetDevelopmentAuthenticationTokenResponse(const GetDevelopmentAuthenticationTokenResponse& from);
  GetDevelopmentAuthenticationTokenResponse(GetDevelopmentAuthenticationTokenResponse&& from) noexcept
    : GetDevelopmentAuthenticationTokenResponse() {
    *this = ::std::move(from);
  }

  inline GetDevelopmentAuthenticationTokenResponse& operator=(const GetDevelopmentAuthenticationTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDevelopmentAuthenticationTokenResponse& operator=(GetDevelopmentAuthenticationTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetDevelopmentAuthenticationTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetDevelopmentAuthenticationTokenResponse* internal_default_instance() {
    return reinterpret_cast<const GetDevelopmentAuthenticationTokenResponse*>(
               &_GetDevelopmentAuthenticationTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GetDevelopmentAuthenticationTokenResponse& a, GetDevelopmentAuthenticationTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetDevelopmentAuthenticationTokenResponse* New() const final {
    return CreateMaybeMessage<GetDevelopmentAuthenticationTokenResponse>(nullptr);
  }

  GetDevelopmentAuthenticationTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetDevelopmentAuthenticationTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetDevelopmentAuthenticationTokenResponse& from);
  void MergeFrom(const GetDevelopmentAuthenticationTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetDevelopmentAuthenticationTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenResponse";
  }
  protected:
  explicit GetDevelopmentAuthenticationTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDevelopmentAuthenticationTokenFieldNumber = 1,
  };
  // .improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken development_authentication_token = 1;
  bool has_development_authentication_token() const;
  private:
  bool _internal_has_development_authentication_token() const;
  public:
  void clear_development_authentication_token();
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& development_authentication_token() const;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* release_development_authentication_token();
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* mutable_development_authentication_token();
  void set_allocated_development_authentication_token(::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token);
  private:
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& _internal_development_authentication_token() const;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* _internal_mutable_development_authentication_token();
  public:
  void unsafe_arena_set_allocated_development_authentication_token(
      ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token);
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* unsafe_arena_release_development_authentication_token();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class ListDevelopmentAuthenticationTokensRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest) */ {
 public:
  inline ListDevelopmentAuthenticationTokensRequest() : ListDevelopmentAuthenticationTokensRequest(nullptr) {};
  virtual ~ListDevelopmentAuthenticationTokensRequest();

  ListDevelopmentAuthenticationTokensRequest(const ListDevelopmentAuthenticationTokensRequest& from);
  ListDevelopmentAuthenticationTokensRequest(ListDevelopmentAuthenticationTokensRequest&& from) noexcept
    : ListDevelopmentAuthenticationTokensRequest() {
    *this = ::std::move(from);
  }

  inline ListDevelopmentAuthenticationTokensRequest& operator=(const ListDevelopmentAuthenticationTokensRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDevelopmentAuthenticationTokensRequest& operator=(ListDevelopmentAuthenticationTokensRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListDevelopmentAuthenticationTokensRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDevelopmentAuthenticationTokensRequest* internal_default_instance() {
    return reinterpret_cast<const ListDevelopmentAuthenticationTokensRequest*>(
               &_ListDevelopmentAuthenticationTokensRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ListDevelopmentAuthenticationTokensRequest& a, ListDevelopmentAuthenticationTokensRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListDevelopmentAuthenticationTokensRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListDevelopmentAuthenticationTokensRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListDevelopmentAuthenticationTokensRequest* New() const final {
    return CreateMaybeMessage<ListDevelopmentAuthenticationTokensRequest>(nullptr);
  }

  ListDevelopmentAuthenticationTokensRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListDevelopmentAuthenticationTokensRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListDevelopmentAuthenticationTokensRequest& from);
  void MergeFrom(const ListDevelopmentAuthenticationTokensRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDevelopmentAuthenticationTokensRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest";
  }
  protected:
  explicit ListDevelopmentAuthenticationTokensRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProjectNameFieldNumber = 1,
    kPageTokenFieldNumber = 4,
    kIncludeExpiredFieldNumber = 2,
    kPageSizeFieldNumber = 3,
  };
  // string project_name = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
  void clear_project_name();
  const std::string& project_name() const;
  void set_project_name(const std::string& value);
  void set_project_name(std::string&& value);
  void set_project_name(const char* value);
  void set_project_name(const char* value, size_t size);
  std::string* mutable_project_name();
  std::string* release_project_name();
  void set_allocated_project_name(std::string* project_name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_project_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_project_name(
      std::string* project_name);
  private:
  const std::string& _internal_project_name() const;
  void _internal_set_project_name(const std::string& value);
  std::string* _internal_mutable_project_name();
  public:

  // string page_token = 4;
  void clear_page_token();
  const std::string& page_token() const;
  void set_page_token(const std::string& value);
  void set_page_token(std::string&& value);
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  std::string* mutable_page_token();
  std::string* release_page_token();
  void set_allocated_page_token(std::string* page_token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_page_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_page_token(
      std::string* page_token);
  private:
  const std::string& _internal_page_token() const;
  void _internal_set_page_token(const std::string& value);
  std::string* _internal_mutable_page_token();
  public:

  // bool include_expired = 2;
  void clear_include_expired();
  bool include_expired() const;
  void set_include_expired(bool value);
  private:
  bool _internal_include_expired() const;
  void _internal_set_include_expired(bool value);
  public:

  // int32 page_size = 3 [(.validator.field) = {
  void clear_page_size();
  ::PROTOBUF_NAMESPACE_ID::int32 page_size() const;
  void set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_page_size() const;
  void _internal_set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr project_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr page_token_;
  bool include_expired_;
  ::PROTOBUF_NAMESPACE_ID::int32 page_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class ListDevelopmentAuthenticationTokensResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse) */ {
 public:
  inline ListDevelopmentAuthenticationTokensResponse() : ListDevelopmentAuthenticationTokensResponse(nullptr) {};
  virtual ~ListDevelopmentAuthenticationTokensResponse();

  ListDevelopmentAuthenticationTokensResponse(const ListDevelopmentAuthenticationTokensResponse& from);
  ListDevelopmentAuthenticationTokensResponse(ListDevelopmentAuthenticationTokensResponse&& from) noexcept
    : ListDevelopmentAuthenticationTokensResponse() {
    *this = ::std::move(from);
  }

  inline ListDevelopmentAuthenticationTokensResponse& operator=(const ListDevelopmentAuthenticationTokensResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDevelopmentAuthenticationTokensResponse& operator=(ListDevelopmentAuthenticationTokensResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListDevelopmentAuthenticationTokensResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDevelopmentAuthenticationTokensResponse* internal_default_instance() {
    return reinterpret_cast<const ListDevelopmentAuthenticationTokensResponse*>(
               &_ListDevelopmentAuthenticationTokensResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ListDevelopmentAuthenticationTokensResponse& a, ListDevelopmentAuthenticationTokensResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ListDevelopmentAuthenticationTokensResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListDevelopmentAuthenticationTokensResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListDevelopmentAuthenticationTokensResponse* New() const final {
    return CreateMaybeMessage<ListDevelopmentAuthenticationTokensResponse>(nullptr);
  }

  ListDevelopmentAuthenticationTokensResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListDevelopmentAuthenticationTokensResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListDevelopmentAuthenticationTokensResponse& from);
  void MergeFrom(const ListDevelopmentAuthenticationTokensResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDevelopmentAuthenticationTokensResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse";
  }
  protected:
  explicit ListDevelopmentAuthenticationTokensResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDevelopmentAuthenticationTokensFieldNumber = 1,
    kNextPageTokenFieldNumber = 2,
  };
  // repeated .improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken development_authentication_tokens = 1;
  int development_authentication_tokens_size() const;
  private:
  int _internal_development_authentication_tokens_size() const;
  public:
  void clear_development_authentication_tokens();
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* mutable_development_authentication_tokens(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken >*
      mutable_development_authentication_tokens();
  private:
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& _internal_development_authentication_tokens(int index) const;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* _internal_add_development_authentication_tokens();
  public:
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& development_authentication_tokens(int index) const;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* add_development_authentication_tokens();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken >&
      development_authentication_tokens() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  const std::string& next_page_token() const;
  void set_next_page_token(const std::string& value);
  void set_next_page_token(std::string&& value);
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  std::string* mutable_next_page_token();
  std::string* release_next_page_token();
  void set_allocated_next_page_token(std::string* next_page_token);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_next_page_token();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_next_page_token(
      std::string* next_page_token);
  private:
  const std::string& _internal_next_page_token() const;
  void _internal_set_next_page_token(const std::string& value);
  std::string* _internal_mutable_next_page_token();
  public:

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken > development_authentication_tokens_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr next_page_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class UpdateDevelopmentAuthenticationTokenRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest) */ {
 public:
  inline UpdateDevelopmentAuthenticationTokenRequest() : UpdateDevelopmentAuthenticationTokenRequest(nullptr) {};
  virtual ~UpdateDevelopmentAuthenticationTokenRequest();

  UpdateDevelopmentAuthenticationTokenRequest(const UpdateDevelopmentAuthenticationTokenRequest& from);
  UpdateDevelopmentAuthenticationTokenRequest(UpdateDevelopmentAuthenticationTokenRequest&& from) noexcept
    : UpdateDevelopmentAuthenticationTokenRequest() {
    *this = ::std::move(from);
  }

  inline UpdateDevelopmentAuthenticationTokenRequest& operator=(const UpdateDevelopmentAuthenticationTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDevelopmentAuthenticationTokenRequest& operator=(UpdateDevelopmentAuthenticationTokenRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateDevelopmentAuthenticationTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateDevelopmentAuthenticationTokenRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateDevelopmentAuthenticationTokenRequest*>(
               &_UpdateDevelopmentAuthenticationTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(UpdateDevelopmentAuthenticationTokenRequest& a, UpdateDevelopmentAuthenticationTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateDevelopmentAuthenticationTokenRequest* New() const final {
    return CreateMaybeMessage<UpdateDevelopmentAuthenticationTokenRequest>(nullptr);
  }

  UpdateDevelopmentAuthenticationTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateDevelopmentAuthenticationTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateDevelopmentAuthenticationTokenRequest& from);
  void MergeFrom(const UpdateDevelopmentAuthenticationTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateDevelopmentAuthenticationTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest";
  }
  protected:
  explicit UpdateDevelopmentAuthenticationTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kUpdatedLifetimeFieldNumber = 3,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // string description = 2 [(.validator.field) = {
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_description();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // .google.protobuf.Duration updated_lifetime = 3;
  bool has_updated_lifetime() const;
  private:
  bool _internal_has_updated_lifetime() const;
  public:
  void clear_updated_lifetime();
  const PROTOBUF_NAMESPACE_ID::Duration& updated_lifetime() const;
  PROTOBUF_NAMESPACE_ID::Duration* release_updated_lifetime();
  PROTOBUF_NAMESPACE_ID::Duration* mutable_updated_lifetime();
  void set_allocated_updated_lifetime(PROTOBUF_NAMESPACE_ID::Duration* updated_lifetime);
  private:
  const PROTOBUF_NAMESPACE_ID::Duration& _internal_updated_lifetime() const;
  PROTOBUF_NAMESPACE_ID::Duration* _internal_mutable_updated_lifetime();
  public:
  void unsafe_arena_set_allocated_updated_lifetime(
      PROTOBUF_NAMESPACE_ID::Duration* updated_lifetime);
  PROTOBUF_NAMESPACE_ID::Duration* unsafe_arena_release_updated_lifetime();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  PROTOBUF_NAMESPACE_ID::Duration* updated_lifetime_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class UpdateDevelopmentAuthenticationTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenResponse) */ {
 public:
  inline UpdateDevelopmentAuthenticationTokenResponse() : UpdateDevelopmentAuthenticationTokenResponse(nullptr) {};
  virtual ~UpdateDevelopmentAuthenticationTokenResponse();

  UpdateDevelopmentAuthenticationTokenResponse(const UpdateDevelopmentAuthenticationTokenResponse& from);
  UpdateDevelopmentAuthenticationTokenResponse(UpdateDevelopmentAuthenticationTokenResponse&& from) noexcept
    : UpdateDevelopmentAuthenticationTokenResponse() {
    *this = ::std::move(from);
  }

  inline UpdateDevelopmentAuthenticationTokenResponse& operator=(const UpdateDevelopmentAuthenticationTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDevelopmentAuthenticationTokenResponse& operator=(UpdateDevelopmentAuthenticationTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateDevelopmentAuthenticationTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateDevelopmentAuthenticationTokenResponse* internal_default_instance() {
    return reinterpret_cast<const UpdateDevelopmentAuthenticationTokenResponse*>(
               &_UpdateDevelopmentAuthenticationTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(UpdateDevelopmentAuthenticationTokenResponse& a, UpdateDevelopmentAuthenticationTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateDevelopmentAuthenticationTokenResponse* New() const final {
    return CreateMaybeMessage<UpdateDevelopmentAuthenticationTokenResponse>(nullptr);
  }

  UpdateDevelopmentAuthenticationTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateDevelopmentAuthenticationTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateDevelopmentAuthenticationTokenResponse& from);
  void MergeFrom(const UpdateDevelopmentAuthenticationTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateDevelopmentAuthenticationTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenResponse";
  }
  protected:
  explicit UpdateDevelopmentAuthenticationTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDevelopmentAuthenticationTokenFieldNumber = 1,
  };
  // .improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken development_authentication_token = 1;
  bool has_development_authentication_token() const;
  private:
  bool _internal_has_development_authentication_token() const;
  public:
  void clear_development_authentication_token();
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& development_authentication_token() const;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* release_development_authentication_token();
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* mutable_development_authentication_token();
  void set_allocated_development_authentication_token(::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token);
  private:
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& _internal_development_authentication_token() const;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* _internal_mutable_development_authentication_token();
  public:
  void unsafe_arena_set_allocated_development_authentication_token(
      ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token);
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* unsafe_arena_release_development_authentication_token();

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class ExpireDevelopmentAuthenticationTokenRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest) */ {
 public:
  inline ExpireDevelopmentAuthenticationTokenRequest() : ExpireDevelopmentAuthenticationTokenRequest(nullptr) {};
  virtual ~ExpireDevelopmentAuthenticationTokenRequest();

  ExpireDevelopmentAuthenticationTokenRequest(const ExpireDevelopmentAuthenticationTokenRequest& from);
  ExpireDevelopmentAuthenticationTokenRequest(ExpireDevelopmentAuthenticationTokenRequest&& from) noexcept
    : ExpireDevelopmentAuthenticationTokenRequest() {
    *this = ::std::move(from);
  }

  inline ExpireDevelopmentAuthenticationTokenRequest& operator=(const ExpireDevelopmentAuthenticationTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpireDevelopmentAuthenticationTokenRequest& operator=(ExpireDevelopmentAuthenticationTokenRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExpireDevelopmentAuthenticationTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpireDevelopmentAuthenticationTokenRequest* internal_default_instance() {
    return reinterpret_cast<const ExpireDevelopmentAuthenticationTokenRequest*>(
               &_ExpireDevelopmentAuthenticationTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ExpireDevelopmentAuthenticationTokenRequest& a, ExpireDevelopmentAuthenticationTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExpireDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExpireDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExpireDevelopmentAuthenticationTokenRequest* New() const final {
    return CreateMaybeMessage<ExpireDevelopmentAuthenticationTokenRequest>(nullptr);
  }

  ExpireDevelopmentAuthenticationTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExpireDevelopmentAuthenticationTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExpireDevelopmentAuthenticationTokenRequest& from);
  void MergeFrom(const ExpireDevelopmentAuthenticationTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpireDevelopmentAuthenticationTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest";
  }
  protected:
  explicit ExpireDevelopmentAuthenticationTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class ExpireDevelopmentAuthenticationTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenResponse) */ {
 public:
  inline ExpireDevelopmentAuthenticationTokenResponse() : ExpireDevelopmentAuthenticationTokenResponse(nullptr) {};
  virtual ~ExpireDevelopmentAuthenticationTokenResponse();

  ExpireDevelopmentAuthenticationTokenResponse(const ExpireDevelopmentAuthenticationTokenResponse& from);
  ExpireDevelopmentAuthenticationTokenResponse(ExpireDevelopmentAuthenticationTokenResponse&& from) noexcept
    : ExpireDevelopmentAuthenticationTokenResponse() {
    *this = ::std::move(from);
  }

  inline ExpireDevelopmentAuthenticationTokenResponse& operator=(const ExpireDevelopmentAuthenticationTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpireDevelopmentAuthenticationTokenResponse& operator=(ExpireDevelopmentAuthenticationTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExpireDevelopmentAuthenticationTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpireDevelopmentAuthenticationTokenResponse* internal_default_instance() {
    return reinterpret_cast<const ExpireDevelopmentAuthenticationTokenResponse*>(
               &_ExpireDevelopmentAuthenticationTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ExpireDevelopmentAuthenticationTokenResponse& a, ExpireDevelopmentAuthenticationTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ExpireDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExpireDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExpireDevelopmentAuthenticationTokenResponse* New() const final {
    return CreateMaybeMessage<ExpireDevelopmentAuthenticationTokenResponse>(nullptr);
  }

  ExpireDevelopmentAuthenticationTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExpireDevelopmentAuthenticationTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExpireDevelopmentAuthenticationTokenResponse& from);
  void MergeFrom(const ExpireDevelopmentAuthenticationTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpireDevelopmentAuthenticationTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenResponse";
  }
  protected:
  explicit ExpireDevelopmentAuthenticationTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class DeleteDevelopmentAuthenticationTokenRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest) */ {
 public:
  inline DeleteDevelopmentAuthenticationTokenRequest() : DeleteDevelopmentAuthenticationTokenRequest(nullptr) {};
  virtual ~DeleteDevelopmentAuthenticationTokenRequest();

  DeleteDevelopmentAuthenticationTokenRequest(const DeleteDevelopmentAuthenticationTokenRequest& from);
  DeleteDevelopmentAuthenticationTokenRequest(DeleteDevelopmentAuthenticationTokenRequest&& from) noexcept
    : DeleteDevelopmentAuthenticationTokenRequest() {
    *this = ::std::move(from);
  }

  inline DeleteDevelopmentAuthenticationTokenRequest& operator=(const DeleteDevelopmentAuthenticationTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteDevelopmentAuthenticationTokenRequest& operator=(DeleteDevelopmentAuthenticationTokenRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteDevelopmentAuthenticationTokenRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteDevelopmentAuthenticationTokenRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteDevelopmentAuthenticationTokenRequest*>(
               &_DeleteDevelopmentAuthenticationTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(DeleteDevelopmentAuthenticationTokenRequest& a, DeleteDevelopmentAuthenticationTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteDevelopmentAuthenticationTokenRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteDevelopmentAuthenticationTokenRequest* New() const final {
    return CreateMaybeMessage<DeleteDevelopmentAuthenticationTokenRequest>(nullptr);
  }

  DeleteDevelopmentAuthenticationTokenRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteDevelopmentAuthenticationTokenRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteDevelopmentAuthenticationTokenRequest& from);
  void MergeFrom(const DeleteDevelopmentAuthenticationTokenRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDevelopmentAuthenticationTokenRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest";
  }
  protected:
  explicit DeleteDevelopmentAuthenticationTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_id();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_id(
      std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// -------------------------------------------------------------------

class DeleteDevelopmentAuthenticationTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenResponse) */ {
 public:
  inline DeleteDevelopmentAuthenticationTokenResponse() : DeleteDevelopmentAuthenticationTokenResponse(nullptr) {};
  virtual ~DeleteDevelopmentAuthenticationTokenResponse();

  DeleteDevelopmentAuthenticationTokenResponse(const DeleteDevelopmentAuthenticationTokenResponse& from);
  DeleteDevelopmentAuthenticationTokenResponse(DeleteDevelopmentAuthenticationTokenResponse&& from) noexcept
    : DeleteDevelopmentAuthenticationTokenResponse() {
    *this = ::std::move(from);
  }

  inline DeleteDevelopmentAuthenticationTokenResponse& operator=(const DeleteDevelopmentAuthenticationTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteDevelopmentAuthenticationTokenResponse& operator=(DeleteDevelopmentAuthenticationTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeleteDevelopmentAuthenticationTokenResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteDevelopmentAuthenticationTokenResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteDevelopmentAuthenticationTokenResponse*>(
               &_DeleteDevelopmentAuthenticationTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(DeleteDevelopmentAuthenticationTokenResponse& a, DeleteDevelopmentAuthenticationTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteDevelopmentAuthenticationTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeleteDevelopmentAuthenticationTokenResponse* New() const final {
    return CreateMaybeMessage<DeleteDevelopmentAuthenticationTokenResponse>(nullptr);
  }

  DeleteDevelopmentAuthenticationTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeleteDevelopmentAuthenticationTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeleteDevelopmentAuthenticationTokenResponse& from);
  void MergeFrom(const DeleteDevelopmentAuthenticationTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteDevelopmentAuthenticationTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenResponse";
  }
  protected:
  explicit DeleteDevelopmentAuthenticationTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto);
    return ::descriptor_table_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateLoginTokenRequest

// string player_identity_token = 1 [(.google.api.field_behavior) = REQUIRED];
inline void CreateLoginTokenRequest::clear_player_identity_token() {
  player_identity_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateLoginTokenRequest::player_identity_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
  return _internal_player_identity_token();
}
inline void CreateLoginTokenRequest::set_player_identity_token(const std::string& value) {
  _internal_set_player_identity_token(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
}
inline std::string* CreateLoginTokenRequest::mutable_player_identity_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
  return _internal_mutable_player_identity_token();
}
inline const std::string& CreateLoginTokenRequest::_internal_player_identity_token() const {
  return player_identity_token_.Get();
}
inline void CreateLoginTokenRequest::_internal_set_player_identity_token(const std::string& value) {
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateLoginTokenRequest::set_player_identity_token(std::string&& value) {
  
  player_identity_token_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
}
inline void CreateLoginTokenRequest::set_player_identity_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
}
inline void CreateLoginTokenRequest::set_player_identity_token(const char* value,
    size_t size) {
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
}
inline std::string* CreateLoginTokenRequest::_internal_mutable_player_identity_token() {
  
  return player_identity_token_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateLoginTokenRequest::release_player_identity_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
  return player_identity_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateLoginTokenRequest::set_allocated_player_identity_token(std::string* player_identity_token) {
  if (player_identity_token != nullptr) {
    
  } else {
    
  }
  player_identity_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), player_identity_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
}
inline std::string* CreateLoginTokenRequest::unsafe_arena_release_player_identity_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return player_identity_token_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateLoginTokenRequest::unsafe_arena_set_allocated_player_identity_token(
    std::string* player_identity_token) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (player_identity_token != nullptr) {
    
  } else {
    
  }
  player_identity_token_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      player_identity_token, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.player_identity_token)
}

// string deployment_id = 2 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
inline void CreateLoginTokenRequest::clear_deployment_id() {
  deployment_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateLoginTokenRequest::deployment_id() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
  return _internal_deployment_id();
}
inline void CreateLoginTokenRequest::set_deployment_id(const std::string& value) {
  _internal_set_deployment_id(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
}
inline std::string* CreateLoginTokenRequest::mutable_deployment_id() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
  return _internal_mutable_deployment_id();
}
inline const std::string& CreateLoginTokenRequest::_internal_deployment_id() const {
  return deployment_id_.Get();
}
inline void CreateLoginTokenRequest::_internal_set_deployment_id(const std::string& value) {
  
  deployment_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateLoginTokenRequest::set_deployment_id(std::string&& value) {
  
  deployment_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
}
inline void CreateLoginTokenRequest::set_deployment_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  deployment_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
}
inline void CreateLoginTokenRequest::set_deployment_id(const char* value,
    size_t size) {
  
  deployment_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
}
inline std::string* CreateLoginTokenRequest::_internal_mutable_deployment_id() {
  
  return deployment_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateLoginTokenRequest::release_deployment_id() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
  return deployment_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateLoginTokenRequest::set_allocated_deployment_id(std::string* deployment_id) {
  if (deployment_id != nullptr) {
    
  } else {
    
  }
  deployment_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), deployment_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
}
inline std::string* CreateLoginTokenRequest::unsafe_arena_release_deployment_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return deployment_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateLoginTokenRequest::unsafe_arena_set_allocated_deployment_id(
    std::string* deployment_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (deployment_id != nullptr) {
    
  } else {
    
  }
  deployment_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      deployment_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.deployment_id)
}

// .google.protobuf.Duration lifetime_duration = 3;
inline bool CreateLoginTokenRequest::_internal_has_lifetime_duration() const {
  return this != internal_default_instance() && lifetime_duration_ != nullptr;
}
inline bool CreateLoginTokenRequest::has_lifetime_duration() const {
  return _internal_has_lifetime_duration();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& CreateLoginTokenRequest::_internal_lifetime_duration() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = lifetime_duration_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration*>(
      &PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& CreateLoginTokenRequest::lifetime_duration() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.lifetime_duration)
  return _internal_lifetime_duration();
}
inline void CreateLoginTokenRequest::unsafe_arena_set_allocated_lifetime_duration(
    PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime_duration_);
  }
  lifetime_duration_ = lifetime_duration;
  if (lifetime_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.lifetime_duration)
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreateLoginTokenRequest::release_lifetime_duration() {
  auto temp = unsafe_arena_release_lifetime_duration();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreateLoginTokenRequest::unsafe_arena_release_lifetime_duration() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.lifetime_duration)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = lifetime_duration_;
  lifetime_duration_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreateLoginTokenRequest::_internal_mutable_lifetime_duration() {
  
  if (lifetime_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    lifetime_duration_ = p;
  }
  return lifetime_duration_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreateLoginTokenRequest::mutable_lifetime_duration() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.lifetime_duration)
  return _internal_mutable_lifetime_duration();
}
inline void CreateLoginTokenRequest::set_allocated_lifetime_duration(PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime_duration_);
  }
  if (lifetime_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime_duration)->GetArena();
    if (message_arena != submessage_arena) {
      lifetime_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lifetime_duration, submessage_arena);
    }
    
  } else {
    
  }
  lifetime_duration_ = lifetime_duration;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.lifetime_duration)
}

// string worker_type = 4 [(.validator.field) = {
inline void CreateLoginTokenRequest::clear_worker_type() {
  worker_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateLoginTokenRequest::worker_type() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
  return _internal_worker_type();
}
inline void CreateLoginTokenRequest::set_worker_type(const std::string& value) {
  _internal_set_worker_type(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
}
inline std::string* CreateLoginTokenRequest::mutable_worker_type() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
  return _internal_mutable_worker_type();
}
inline const std::string& CreateLoginTokenRequest::_internal_worker_type() const {
  return worker_type_.Get();
}
inline void CreateLoginTokenRequest::_internal_set_worker_type(const std::string& value) {
  
  worker_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateLoginTokenRequest::set_worker_type(std::string&& value) {
  
  worker_type_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
}
inline void CreateLoginTokenRequest::set_worker_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  worker_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
}
inline void CreateLoginTokenRequest::set_worker_type(const char* value,
    size_t size) {
  
  worker_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
}
inline std::string* CreateLoginTokenRequest::_internal_mutable_worker_type() {
  
  return worker_type_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateLoginTokenRequest::release_worker_type() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
  return worker_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateLoginTokenRequest::set_allocated_worker_type(std::string* worker_type) {
  if (worker_type != nullptr) {
    
  } else {
    
  }
  worker_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), worker_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
}
inline std::string* CreateLoginTokenRequest::unsafe_arena_release_worker_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return worker_type_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateLoginTokenRequest::unsafe_arena_set_allocated_worker_type(
    std::string* worker_type) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (worker_type != nullptr) {
    
  } else {
    
  }
  worker_type_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      worker_type, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenRequest.worker_type)
}

// -------------------------------------------------------------------

// CreateLoginTokenResponse

// string login_token = 1;
inline void CreateLoginTokenResponse::clear_login_token() {
  login_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateLoginTokenResponse::login_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
  return _internal_login_token();
}
inline void CreateLoginTokenResponse::set_login_token(const std::string& value) {
  _internal_set_login_token(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
}
inline std::string* CreateLoginTokenResponse::mutable_login_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
  return _internal_mutable_login_token();
}
inline const std::string& CreateLoginTokenResponse::_internal_login_token() const {
  return login_token_.Get();
}
inline void CreateLoginTokenResponse::_internal_set_login_token(const std::string& value) {
  
  login_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateLoginTokenResponse::set_login_token(std::string&& value) {
  
  login_token_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
}
inline void CreateLoginTokenResponse::set_login_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  login_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
}
inline void CreateLoginTokenResponse::set_login_token(const char* value,
    size_t size) {
  
  login_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
}
inline std::string* CreateLoginTokenResponse::_internal_mutable_login_token() {
  
  return login_token_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateLoginTokenResponse::release_login_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
  return login_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateLoginTokenResponse::set_allocated_login_token(std::string* login_token) {
  if (login_token != nullptr) {
    
  } else {
    
  }
  login_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), login_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
}
inline std::string* CreateLoginTokenResponse::unsafe_arena_release_login_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return login_token_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateLoginTokenResponse::unsafe_arena_set_allocated_login_token(
    std::string* login_token) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (login_token != nullptr) {
    
  } else {
    
  }
  login_token_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      login_token, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateLoginTokenResponse.login_token)
}

// -------------------------------------------------------------------

// CreatePlayerIdentityTokenRequest

// string provider = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
inline void CreatePlayerIdentityTokenRequest::clear_provider() {
  provider_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreatePlayerIdentityTokenRequest::provider() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
  return _internal_provider();
}
inline void CreatePlayerIdentityTokenRequest::set_provider(const std::string& value) {
  _internal_set_provider(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
}
inline std::string* CreatePlayerIdentityTokenRequest::mutable_provider() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
  return _internal_mutable_provider();
}
inline const std::string& CreatePlayerIdentityTokenRequest::_internal_provider() const {
  return provider_.Get();
}
inline void CreatePlayerIdentityTokenRequest::_internal_set_provider(const std::string& value) {
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_provider(std::string&& value) {
  
  provider_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
}
inline void CreatePlayerIdentityTokenRequest::set_provider(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
}
inline void CreatePlayerIdentityTokenRequest::set_provider(const char* value,
    size_t size) {
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
}
inline std::string* CreatePlayerIdentityTokenRequest::_internal_mutable_provider() {
  
  return provider_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreatePlayerIdentityTokenRequest::release_provider() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
  return provider_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_allocated_provider(std::string* provider) {
  if (provider != nullptr) {
    
  } else {
    
  }
  provider_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), provider,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
}
inline std::string* CreatePlayerIdentityTokenRequest::unsafe_arena_release_provider() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return provider_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreatePlayerIdentityTokenRequest::unsafe_arena_set_allocated_provider(
    std::string* provider) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (provider != nullptr) {
    
  } else {
    
  }
  provider_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      provider, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.provider)
}

// string player_identifier = 2 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
inline void CreatePlayerIdentityTokenRequest::clear_player_identifier() {
  player_identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreatePlayerIdentityTokenRequest::player_identifier() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
  return _internal_player_identifier();
}
inline void CreatePlayerIdentityTokenRequest::set_player_identifier(const std::string& value) {
  _internal_set_player_identifier(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
}
inline std::string* CreatePlayerIdentityTokenRequest::mutable_player_identifier() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
  return _internal_mutable_player_identifier();
}
inline const std::string& CreatePlayerIdentityTokenRequest::_internal_player_identifier() const {
  return player_identifier_.Get();
}
inline void CreatePlayerIdentityTokenRequest::_internal_set_player_identifier(const std::string& value) {
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_player_identifier(std::string&& value) {
  
  player_identifier_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
}
inline void CreatePlayerIdentityTokenRequest::set_player_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
}
inline void CreatePlayerIdentityTokenRequest::set_player_identifier(const char* value,
    size_t size) {
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
}
inline std::string* CreatePlayerIdentityTokenRequest::_internal_mutable_player_identifier() {
  
  return player_identifier_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreatePlayerIdentityTokenRequest::release_player_identifier() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
  return player_identifier_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_allocated_player_identifier(std::string* player_identifier) {
  if (player_identifier != nullptr) {
    
  } else {
    
  }
  player_identifier_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), player_identifier,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
}
inline std::string* CreatePlayerIdentityTokenRequest::unsafe_arena_release_player_identifier() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return player_identifier_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreatePlayerIdentityTokenRequest::unsafe_arena_set_allocated_player_identifier(
    std::string* player_identifier) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (player_identifier != nullptr) {
    
  } else {
    
  }
  player_identifier_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      player_identifier, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.player_identifier)
}

// string project_name = 3 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
inline void CreatePlayerIdentityTokenRequest::clear_project_name() {
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreatePlayerIdentityTokenRequest::project_name() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
  return _internal_project_name();
}
inline void CreatePlayerIdentityTokenRequest::set_project_name(const std::string& value) {
  _internal_set_project_name(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
}
inline std::string* CreatePlayerIdentityTokenRequest::mutable_project_name() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
  return _internal_mutable_project_name();
}
inline const std::string& CreatePlayerIdentityTokenRequest::_internal_project_name() const {
  return project_name_.Get();
}
inline void CreatePlayerIdentityTokenRequest::_internal_set_project_name(const std::string& value) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_project_name(std::string&& value) {
  
  project_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
}
inline void CreatePlayerIdentityTokenRequest::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
}
inline void CreatePlayerIdentityTokenRequest::set_project_name(const char* value,
    size_t size) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
}
inline std::string* CreatePlayerIdentityTokenRequest::_internal_mutable_project_name() {
  
  return project_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreatePlayerIdentityTokenRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
  return project_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_allocated_project_name(std::string* project_name) {
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), project_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
}
inline std::string* CreatePlayerIdentityTokenRequest::unsafe_arena_release_project_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return project_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreatePlayerIdentityTokenRequest::unsafe_arena_set_allocated_project_name(
    std::string* project_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      project_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.project_name)
}

// .google.protobuf.Duration lifetime_duration = 4;
inline bool CreatePlayerIdentityTokenRequest::_internal_has_lifetime_duration() const {
  return this != internal_default_instance() && lifetime_duration_ != nullptr;
}
inline bool CreatePlayerIdentityTokenRequest::has_lifetime_duration() const {
  return _internal_has_lifetime_duration();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& CreatePlayerIdentityTokenRequest::_internal_lifetime_duration() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = lifetime_duration_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration*>(
      &PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& CreatePlayerIdentityTokenRequest::lifetime_duration() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.lifetime_duration)
  return _internal_lifetime_duration();
}
inline void CreatePlayerIdentityTokenRequest::unsafe_arena_set_allocated_lifetime_duration(
    PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime_duration_);
  }
  lifetime_duration_ = lifetime_duration;
  if (lifetime_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.lifetime_duration)
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreatePlayerIdentityTokenRequest::release_lifetime_duration() {
  auto temp = unsafe_arena_release_lifetime_duration();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreatePlayerIdentityTokenRequest::unsafe_arena_release_lifetime_duration() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.lifetime_duration)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = lifetime_duration_;
  lifetime_duration_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreatePlayerIdentityTokenRequest::_internal_mutable_lifetime_duration() {
  
  if (lifetime_duration_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    lifetime_duration_ = p;
  }
  return lifetime_duration_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreatePlayerIdentityTokenRequest::mutable_lifetime_duration() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.lifetime_duration)
  return _internal_mutable_lifetime_duration();
}
inline void CreatePlayerIdentityTokenRequest::set_allocated_lifetime_duration(PROTOBUF_NAMESPACE_ID::Duration* lifetime_duration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime_duration_);
  }
  if (lifetime_duration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime_duration)->GetArena();
    if (message_arena != submessage_arena) {
      lifetime_duration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lifetime_duration, submessage_arena);
    }
    
  } else {
    
  }
  lifetime_duration_ = lifetime_duration;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.lifetime_duration)
}

// string display_name = 5;
inline void CreatePlayerIdentityTokenRequest::clear_display_name() {
  display_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreatePlayerIdentityTokenRequest::display_name() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
  return _internal_display_name();
}
inline void CreatePlayerIdentityTokenRequest::set_display_name(const std::string& value) {
  _internal_set_display_name(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
}
inline std::string* CreatePlayerIdentityTokenRequest::mutable_display_name() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
  return _internal_mutable_display_name();
}
inline const std::string& CreatePlayerIdentityTokenRequest::_internal_display_name() const {
  return display_name_.Get();
}
inline void CreatePlayerIdentityTokenRequest::_internal_set_display_name(const std::string& value) {
  
  display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_display_name(std::string&& value) {
  
  display_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
}
inline void CreatePlayerIdentityTokenRequest::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
}
inline void CreatePlayerIdentityTokenRequest::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
}
inline std::string* CreatePlayerIdentityTokenRequest::_internal_mutable_display_name() {
  
  return display_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreatePlayerIdentityTokenRequest::release_display_name() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
  return display_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_allocated_display_name(std::string* display_name) {
  if (display_name != nullptr) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
}
inline std::string* CreatePlayerIdentityTokenRequest::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return display_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreatePlayerIdentityTokenRequest::unsafe_arena_set_allocated_display_name(
    std::string* display_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (display_name != nullptr) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.display_name)
}

// bytes metadata = 6;
inline void CreatePlayerIdentityTokenRequest::clear_metadata() {
  metadata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreatePlayerIdentityTokenRequest::metadata() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
  return _internal_metadata();
}
inline void CreatePlayerIdentityTokenRequest::set_metadata(const std::string& value) {
  _internal_set_metadata(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
}
inline std::string* CreatePlayerIdentityTokenRequest::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
  return _internal_mutable_metadata();
}
inline const std::string& CreatePlayerIdentityTokenRequest::_internal_metadata() const {
  return metadata_.Get();
}
inline void CreatePlayerIdentityTokenRequest::_internal_set_metadata(const std::string& value) {
  
  metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_metadata(std::string&& value) {
  
  metadata_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
}
inline void CreatePlayerIdentityTokenRequest::set_metadata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
}
inline void CreatePlayerIdentityTokenRequest::set_metadata(const void* value,
    size_t size) {
  
  metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
}
inline std::string* CreatePlayerIdentityTokenRequest::_internal_mutable_metadata() {
  
  return metadata_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreatePlayerIdentityTokenRequest::release_metadata() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
  return metadata_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreatePlayerIdentityTokenRequest::set_allocated_metadata(std::string* metadata) {
  if (metadata != nullptr) {
    
  } else {
    
  }
  metadata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), metadata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
}
inline std::string* CreatePlayerIdentityTokenRequest::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return metadata_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreatePlayerIdentityTokenRequest::unsafe_arena_set_allocated_metadata(
    std::string* metadata) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (metadata != nullptr) {
    
  } else {
    
  }
  metadata_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      metadata, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenRequest.metadata)
}

// -------------------------------------------------------------------

// CreatePlayerIdentityTokenResponse

// string player_identity_token = 1;
inline void CreatePlayerIdentityTokenResponse::clear_player_identity_token() {
  player_identity_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreatePlayerIdentityTokenResponse::player_identity_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
  return _internal_player_identity_token();
}
inline void CreatePlayerIdentityTokenResponse::set_player_identity_token(const std::string& value) {
  _internal_set_player_identity_token(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
}
inline std::string* CreatePlayerIdentityTokenResponse::mutable_player_identity_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
  return _internal_mutable_player_identity_token();
}
inline const std::string& CreatePlayerIdentityTokenResponse::_internal_player_identity_token() const {
  return player_identity_token_.Get();
}
inline void CreatePlayerIdentityTokenResponse::_internal_set_player_identity_token(const std::string& value) {
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreatePlayerIdentityTokenResponse::set_player_identity_token(std::string&& value) {
  
  player_identity_token_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
}
inline void CreatePlayerIdentityTokenResponse::set_player_identity_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
}
inline void CreatePlayerIdentityTokenResponse::set_player_identity_token(const char* value,
    size_t size) {
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
}
inline std::string* CreatePlayerIdentityTokenResponse::_internal_mutable_player_identity_token() {
  
  return player_identity_token_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreatePlayerIdentityTokenResponse::release_player_identity_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
  return player_identity_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreatePlayerIdentityTokenResponse::set_allocated_player_identity_token(std::string* player_identity_token) {
  if (player_identity_token != nullptr) {
    
  } else {
    
  }
  player_identity_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), player_identity_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
}
inline std::string* CreatePlayerIdentityTokenResponse::unsafe_arena_release_player_identity_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return player_identity_token_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreatePlayerIdentityTokenResponse::unsafe_arena_set_allocated_player_identity_token(
    std::string* player_identity_token) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (player_identity_token != nullptr) {
    
  } else {
    
  }
  player_identity_token_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      player_identity_token, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreatePlayerIdentityTokenResponse.player_identity_token)
}

// -------------------------------------------------------------------

// DecodePlayerIdentityTokenRequest

// string player_identity_token = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
inline void DecodePlayerIdentityTokenRequest::clear_player_identity_token() {
  player_identity_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DecodePlayerIdentityTokenRequest::player_identity_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
  return _internal_player_identity_token();
}
inline void DecodePlayerIdentityTokenRequest::set_player_identity_token(const std::string& value) {
  _internal_set_player_identity_token(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
}
inline std::string* DecodePlayerIdentityTokenRequest::mutable_player_identity_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
  return _internal_mutable_player_identity_token();
}
inline const std::string& DecodePlayerIdentityTokenRequest::_internal_player_identity_token() const {
  return player_identity_token_.Get();
}
inline void DecodePlayerIdentityTokenRequest::_internal_set_player_identity_token(const std::string& value) {
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DecodePlayerIdentityTokenRequest::set_player_identity_token(std::string&& value) {
  
  player_identity_token_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
}
inline void DecodePlayerIdentityTokenRequest::set_player_identity_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
}
inline void DecodePlayerIdentityTokenRequest::set_player_identity_token(const char* value,
    size_t size) {
  
  player_identity_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
}
inline std::string* DecodePlayerIdentityTokenRequest::_internal_mutable_player_identity_token() {
  
  return player_identity_token_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DecodePlayerIdentityTokenRequest::release_player_identity_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
  return player_identity_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DecodePlayerIdentityTokenRequest::set_allocated_player_identity_token(std::string* player_identity_token) {
  if (player_identity_token != nullptr) {
    
  } else {
    
  }
  player_identity_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), player_identity_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
}
inline std::string* DecodePlayerIdentityTokenRequest::unsafe_arena_release_player_identity_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return player_identity_token_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DecodePlayerIdentityTokenRequest::unsafe_arena_set_allocated_player_identity_token(
    std::string* player_identity_token) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (player_identity_token != nullptr) {
    
  } else {
    
  }
  player_identity_token_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      player_identity_token, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenRequest.player_identity_token)
}

// -------------------------------------------------------------------

// DecodePlayerIdentityTokenResponse

// .improbable.spatialos.playerauth.v2.PlayerIdentityToken player_identity_token = 1 [(.validator.field) = {
inline bool DecodePlayerIdentityTokenResponse::_internal_has_player_identity_token() const {
  return this != internal_default_instance() && player_identity_token_ != nullptr;
}
inline bool DecodePlayerIdentityTokenResponse::has_player_identity_token() const {
  return _internal_has_player_identity_token();
}
inline void DecodePlayerIdentityTokenResponse::clear_player_identity_token() {
  if (GetArena() == nullptr && player_identity_token_ != nullptr) {
    delete player_identity_token_;
  }
  player_identity_token_ = nullptr;
}
inline const ::improbable::spatialos::playerauth::v2::PlayerIdentityToken& DecodePlayerIdentityTokenResponse::_internal_player_identity_token() const {
  const ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* p = player_identity_token_;
  return p != nullptr ? *p : *reinterpret_cast<const ::improbable::spatialos::playerauth::v2::PlayerIdentityToken*>(
      &::improbable::spatialos::playerauth::v2::_PlayerIdentityToken_default_instance_);
}
inline const ::improbable::spatialos::playerauth::v2::PlayerIdentityToken& DecodePlayerIdentityTokenResponse::player_identity_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenResponse.player_identity_token)
  return _internal_player_identity_token();
}
inline void DecodePlayerIdentityTokenResponse::unsafe_arena_set_allocated_player_identity_token(
    ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* player_identity_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_identity_token_);
  }
  player_identity_token_ = player_identity_token;
  if (player_identity_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenResponse.player_identity_token)
}
inline ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* DecodePlayerIdentityTokenResponse::release_player_identity_token() {
  auto temp = unsafe_arena_release_player_identity_token();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* DecodePlayerIdentityTokenResponse::unsafe_arena_release_player_identity_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenResponse.player_identity_token)
  
  ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* temp = player_identity_token_;
  player_identity_token_ = nullptr;
  return temp;
}
inline ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* DecodePlayerIdentityTokenResponse::_internal_mutable_player_identity_token() {
  
  if (player_identity_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::improbable::spatialos::playerauth::v2::PlayerIdentityToken>(GetArena());
    player_identity_token_ = p;
  }
  return player_identity_token_;
}
inline ::improbable::spatialos::playerauth::v2::PlayerIdentityToken* DecodePlayerIdentityTokenResponse::mutable_player_identity_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenResponse.player_identity_token)
  return _internal_mutable_player_identity_token();
}
inline void DecodePlayerIdentityTokenResponse::set_allocated_player_identity_token(::improbable::spatialos::playerauth::v2::PlayerIdentityToken* player_identity_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_identity_token_;
  }
  if (player_identity_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player_identity_token);
    if (message_arena != submessage_arena) {
      player_identity_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player_identity_token, submessage_arena);
    }
    
  } else {
    
  }
  player_identity_token_ = player_identity_token;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.DecodePlayerIdentityTokenResponse.player_identity_token)
}

// -------------------------------------------------------------------

// PlayerIdentityToken

// string provider = 1[json_name = "prvdr"];
inline void PlayerIdentityToken::clear_provider() {
  provider_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PlayerIdentityToken::provider() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
  return _internal_provider();
}
inline void PlayerIdentityToken::set_provider(const std::string& value) {
  _internal_set_provider(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
}
inline std::string* PlayerIdentityToken::mutable_provider() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
  return _internal_mutable_provider();
}
inline const std::string& PlayerIdentityToken::_internal_provider() const {
  return provider_.Get();
}
inline void PlayerIdentityToken::_internal_set_provider(const std::string& value) {
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PlayerIdentityToken::set_provider(std::string&& value) {
  
  provider_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
}
inline void PlayerIdentityToken::set_provider(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
}
inline void PlayerIdentityToken::set_provider(const char* value,
    size_t size) {
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
}
inline std::string* PlayerIdentityToken::_internal_mutable_provider() {
  
  return provider_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PlayerIdentityToken::release_provider() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
  return provider_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PlayerIdentityToken::set_allocated_provider(std::string* provider) {
  if (provider != nullptr) {
    
  } else {
    
  }
  provider_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), provider,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
}
inline std::string* PlayerIdentityToken::unsafe_arena_release_provider() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return provider_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PlayerIdentityToken::unsafe_arena_set_allocated_provider(
    std::string* provider) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (provider != nullptr) {
    
  } else {
    
  }
  provider_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      provider, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.provider)
}

// string player_identifier = 2[json_name = "sub"];
inline void PlayerIdentityToken::clear_player_identifier() {
  player_identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PlayerIdentityToken::player_identifier() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
  return _internal_player_identifier();
}
inline void PlayerIdentityToken::set_player_identifier(const std::string& value) {
  _internal_set_player_identifier(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
}
inline std::string* PlayerIdentityToken::mutable_player_identifier() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
  return _internal_mutable_player_identifier();
}
inline const std::string& PlayerIdentityToken::_internal_player_identifier() const {
  return player_identifier_.Get();
}
inline void PlayerIdentityToken::_internal_set_player_identifier(const std::string& value) {
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PlayerIdentityToken::set_player_identifier(std::string&& value) {
  
  player_identifier_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
}
inline void PlayerIdentityToken::set_player_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
}
inline void PlayerIdentityToken::set_player_identifier(const char* value,
    size_t size) {
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
}
inline std::string* PlayerIdentityToken::_internal_mutable_player_identifier() {
  
  return player_identifier_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PlayerIdentityToken::release_player_identifier() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
  return player_identifier_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PlayerIdentityToken::set_allocated_player_identifier(std::string* player_identifier) {
  if (player_identifier != nullptr) {
    
  } else {
    
  }
  player_identifier_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), player_identifier,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
}
inline std::string* PlayerIdentityToken::unsafe_arena_release_player_identifier() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return player_identifier_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PlayerIdentityToken::unsafe_arena_set_allocated_player_identifier(
    std::string* player_identifier) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (player_identifier != nullptr) {
    
  } else {
    
  }
  player_identifier_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      player_identifier, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.player_identifier)
}

// string project_name = 3[json_name = "prj", (.validator.field) = {
inline void PlayerIdentityToken::clear_project_name() {
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PlayerIdentityToken::project_name() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
  return _internal_project_name();
}
inline void PlayerIdentityToken::set_project_name(const std::string& value) {
  _internal_set_project_name(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
}
inline std::string* PlayerIdentityToken::mutable_project_name() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
  return _internal_mutable_project_name();
}
inline const std::string& PlayerIdentityToken::_internal_project_name() const {
  return project_name_.Get();
}
inline void PlayerIdentityToken::_internal_set_project_name(const std::string& value) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PlayerIdentityToken::set_project_name(std::string&& value) {
  
  project_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
}
inline void PlayerIdentityToken::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
}
inline void PlayerIdentityToken::set_project_name(const char* value,
    size_t size) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
}
inline std::string* PlayerIdentityToken::_internal_mutable_project_name() {
  
  return project_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PlayerIdentityToken::release_project_name() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
  return project_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PlayerIdentityToken::set_allocated_project_name(std::string* project_name) {
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), project_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
}
inline std::string* PlayerIdentityToken::unsafe_arena_release_project_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return project_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PlayerIdentityToken::unsafe_arena_set_allocated_project_name(
    std::string* project_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      project_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.project_name)
}

// string display_name = 5[json_name = "dn"];
inline void PlayerIdentityToken::clear_display_name() {
  display_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PlayerIdentityToken::display_name() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
  return _internal_display_name();
}
inline void PlayerIdentityToken::set_display_name(const std::string& value) {
  _internal_set_display_name(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
}
inline std::string* PlayerIdentityToken::mutable_display_name() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
  return _internal_mutable_display_name();
}
inline const std::string& PlayerIdentityToken::_internal_display_name() const {
  return display_name_.Get();
}
inline void PlayerIdentityToken::_internal_set_display_name(const std::string& value) {
  
  display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PlayerIdentityToken::set_display_name(std::string&& value) {
  
  display_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
}
inline void PlayerIdentityToken::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
}
inline void PlayerIdentityToken::set_display_name(const char* value,
    size_t size) {
  
  display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
}
inline std::string* PlayerIdentityToken::_internal_mutable_display_name() {
  
  return display_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PlayerIdentityToken::release_display_name() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
  return display_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PlayerIdentityToken::set_allocated_display_name(std::string* display_name) {
  if (display_name != nullptr) {
    
  } else {
    
  }
  display_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), display_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
}
inline std::string* PlayerIdentityToken::unsafe_arena_release_display_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return display_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PlayerIdentityToken::unsafe_arena_set_allocated_display_name(
    std::string* display_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (display_name != nullptr) {
    
  } else {
    
  }
  display_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      display_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.display_name)
}

// bytes metadata = 6[json_name = "md"];
inline void PlayerIdentityToken::clear_metadata() {
  metadata_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& PlayerIdentityToken::metadata() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
  return _internal_metadata();
}
inline void PlayerIdentityToken::set_metadata(const std::string& value) {
  _internal_set_metadata(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
}
inline std::string* PlayerIdentityToken::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
  return _internal_mutable_metadata();
}
inline const std::string& PlayerIdentityToken::_internal_metadata() const {
  return metadata_.Get();
}
inline void PlayerIdentityToken::_internal_set_metadata(const std::string& value) {
  
  metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void PlayerIdentityToken::set_metadata(std::string&& value) {
  
  metadata_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
}
inline void PlayerIdentityToken::set_metadata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
}
inline void PlayerIdentityToken::set_metadata(const void* value,
    size_t size) {
  
  metadata_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
}
inline std::string* PlayerIdentityToken::_internal_mutable_metadata() {
  
  return metadata_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* PlayerIdentityToken::release_metadata() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
  return metadata_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void PlayerIdentityToken::set_allocated_metadata(std::string* metadata) {
  if (metadata != nullptr) {
    
  } else {
    
  }
  metadata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), metadata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
}
inline std::string* PlayerIdentityToken::unsafe_arena_release_metadata() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return metadata_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void PlayerIdentityToken::unsafe_arena_set_allocated_metadata(
    std::string* metadata) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (metadata != nullptr) {
    
  } else {
    
  }
  metadata_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      metadata, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.metadata)
}

// .google.protobuf.Timestamp issued_at_time = 7[json_name = "iat"];
inline bool PlayerIdentityToken::_internal_has_issued_at_time() const {
  return this != internal_default_instance() && issued_at_time_ != nullptr;
}
inline bool PlayerIdentityToken::has_issued_at_time() const {
  return _internal_has_issued_at_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& PlayerIdentityToken::_internal_issued_at_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = issued_at_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& PlayerIdentityToken::issued_at_time() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.PlayerIdentityToken.issued_at_time)
  return _internal_issued_at_time();
}
inline void PlayerIdentityToken::unsafe_arena_set_allocated_issued_at_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(issued_at_time_);
  }
  issued_at_time_ = issued_at_time;
  if (issued_at_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.issued_at_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PlayerIdentityToken::release_issued_at_time() {
  auto temp = unsafe_arena_release_issued_at_time();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PlayerIdentityToken::unsafe_arena_release_issued_at_time() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.issued_at_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = issued_at_time_;
  issued_at_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PlayerIdentityToken::_internal_mutable_issued_at_time() {
  
  if (issued_at_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    issued_at_time_ = p;
  }
  return issued_at_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PlayerIdentityToken::mutable_issued_at_time() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.PlayerIdentityToken.issued_at_time)
  return _internal_mutable_issued_at_time();
}
inline void PlayerIdentityToken::set_allocated_issued_at_time(PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(issued_at_time_);
  }
  if (issued_at_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(issued_at_time)->GetArena();
    if (message_arena != submessage_arena) {
      issued_at_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, issued_at_time, submessage_arena);
    }
    
  } else {
    
  }
  issued_at_time_ = issued_at_time;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.issued_at_time)
}

// .google.protobuf.Timestamp expiry_time = 8[json_name = "exp"];
inline bool PlayerIdentityToken::_internal_has_expiry_time() const {
  return this != internal_default_instance() && expiry_time_ != nullptr;
}
inline bool PlayerIdentityToken::has_expiry_time() const {
  return _internal_has_expiry_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& PlayerIdentityToken::_internal_expiry_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = expiry_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& PlayerIdentityToken::expiry_time() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.PlayerIdentityToken.expiry_time)
  return _internal_expiry_time();
}
inline void PlayerIdentityToken::unsafe_arena_set_allocated_expiry_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiry_time_);
  }
  expiry_time_ = expiry_time;
  if (expiry_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.expiry_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PlayerIdentityToken::release_expiry_time() {
  auto temp = unsafe_arena_release_expiry_time();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PlayerIdentityToken::unsafe_arena_release_expiry_time() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.PlayerIdentityToken.expiry_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = expiry_time_;
  expiry_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PlayerIdentityToken::_internal_mutable_expiry_time() {
  
  if (expiry_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    expiry_time_ = p;
  }
  return expiry_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* PlayerIdentityToken::mutable_expiry_time() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.PlayerIdentityToken.expiry_time)
  return _internal_mutable_expiry_time();
}
inline void PlayerIdentityToken::set_allocated_expiry_time(PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiry_time_);
  }
  if (expiry_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiry_time)->GetArena();
    if (message_arena != submessage_arena) {
      expiry_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, expiry_time, submessage_arena);
    }
    
  } else {
    
  }
  expiry_time_ = expiry_time;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.PlayerIdentityToken.expiry_time)
}

// -------------------------------------------------------------------

// LoginToken

// string provider = 1[json_name = "prvdr"];
inline void LoginToken::clear_provider() {
  provider_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LoginToken::provider() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.LoginToken.provider)
  return _internal_provider();
}
inline void LoginToken::set_provider(const std::string& value) {
  _internal_set_provider(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.LoginToken.provider)
}
inline std::string* LoginToken::mutable_provider() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.LoginToken.provider)
  return _internal_mutable_provider();
}
inline const std::string& LoginToken::_internal_provider() const {
  return provider_.Get();
}
inline void LoginToken::_internal_set_provider(const std::string& value) {
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LoginToken::set_provider(std::string&& value) {
  
  provider_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.LoginToken.provider)
}
inline void LoginToken::set_provider(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.LoginToken.provider)
}
inline void LoginToken::set_provider(const char* value,
    size_t size) {
  
  provider_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.LoginToken.provider)
}
inline std::string* LoginToken::_internal_mutable_provider() {
  
  return provider_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LoginToken::release_provider() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.LoginToken.provider)
  return provider_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LoginToken::set_allocated_provider(std::string* provider) {
  if (provider != nullptr) {
    
  } else {
    
  }
  provider_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), provider,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.provider)
}
inline std::string* LoginToken::unsafe_arena_release_provider() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.LoginToken.provider)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return provider_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LoginToken::unsafe_arena_set_allocated_provider(
    std::string* provider) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (provider != nullptr) {
    
  } else {
    
  }
  provider_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      provider, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.provider)
}

// string player_identifier = 2[json_name = "sub"];
inline void LoginToken::clear_player_identifier() {
  player_identifier_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LoginToken::player_identifier() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
  return _internal_player_identifier();
}
inline void LoginToken::set_player_identifier(const std::string& value) {
  _internal_set_player_identifier(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
}
inline std::string* LoginToken::mutable_player_identifier() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
  return _internal_mutable_player_identifier();
}
inline const std::string& LoginToken::_internal_player_identifier() const {
  return player_identifier_.Get();
}
inline void LoginToken::_internal_set_player_identifier(const std::string& value) {
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LoginToken::set_player_identifier(std::string&& value) {
  
  player_identifier_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
}
inline void LoginToken::set_player_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
}
inline void LoginToken::set_player_identifier(const char* value,
    size_t size) {
  
  player_identifier_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
}
inline std::string* LoginToken::_internal_mutable_player_identifier() {
  
  return player_identifier_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LoginToken::release_player_identifier() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
  return player_identifier_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LoginToken::set_allocated_player_identifier(std::string* player_identifier) {
  if (player_identifier != nullptr) {
    
  } else {
    
  }
  player_identifier_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), player_identifier,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
}
inline std::string* LoginToken::unsafe_arena_release_player_identifier() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return player_identifier_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LoginToken::unsafe_arena_set_allocated_player_identifier(
    std::string* player_identifier) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (player_identifier != nullptr) {
    
  } else {
    
  }
  player_identifier_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      player_identifier, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.player_identifier)
}

// string project_name = 3[json_name = "prj", (.validator.field) = {
inline void LoginToken::clear_project_name() {
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LoginToken::project_name() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.LoginToken.project_name)
  return _internal_project_name();
}
inline void LoginToken::set_project_name(const std::string& value) {
  _internal_set_project_name(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.LoginToken.project_name)
}
inline std::string* LoginToken::mutable_project_name() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.LoginToken.project_name)
  return _internal_mutable_project_name();
}
inline const std::string& LoginToken::_internal_project_name() const {
  return project_name_.Get();
}
inline void LoginToken::_internal_set_project_name(const std::string& value) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LoginToken::set_project_name(std::string&& value) {
  
  project_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.LoginToken.project_name)
}
inline void LoginToken::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.LoginToken.project_name)
}
inline void LoginToken::set_project_name(const char* value,
    size_t size) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.LoginToken.project_name)
}
inline std::string* LoginToken::_internal_mutable_project_name() {
  
  return project_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LoginToken::release_project_name() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.LoginToken.project_name)
  return project_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LoginToken::set_allocated_project_name(std::string* project_name) {
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), project_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.project_name)
}
inline std::string* LoginToken::unsafe_arena_release_project_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.LoginToken.project_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return project_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LoginToken::unsafe_arena_set_allocated_project_name(
    std::string* project_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      project_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.project_name)
}

// string deployment_id = 4[json_name = "dpl"];
inline void LoginToken::clear_deployment_id() {
  deployment_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LoginToken::deployment_id() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
  return _internal_deployment_id();
}
inline void LoginToken::set_deployment_id(const std::string& value) {
  _internal_set_deployment_id(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
}
inline std::string* LoginToken::mutable_deployment_id() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
  return _internal_mutable_deployment_id();
}
inline const std::string& LoginToken::_internal_deployment_id() const {
  return deployment_id_.Get();
}
inline void LoginToken::_internal_set_deployment_id(const std::string& value) {
  
  deployment_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LoginToken::set_deployment_id(std::string&& value) {
  
  deployment_id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
}
inline void LoginToken::set_deployment_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  deployment_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
}
inline void LoginToken::set_deployment_id(const char* value,
    size_t size) {
  
  deployment_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
}
inline std::string* LoginToken::_internal_mutable_deployment_id() {
  
  return deployment_id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LoginToken::release_deployment_id() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
  return deployment_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LoginToken::set_allocated_deployment_id(std::string* deployment_id) {
  if (deployment_id != nullptr) {
    
  } else {
    
  }
  deployment_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), deployment_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
}
inline std::string* LoginToken::unsafe_arena_release_deployment_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return deployment_id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LoginToken::unsafe_arena_set_allocated_deployment_id(
    std::string* deployment_id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (deployment_id != nullptr) {
    
  } else {
    
  }
  deployment_id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      deployment_id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.deployment_id)
}

// string worker_type = 5[json_name = "wkt"];
inline void LoginToken::clear_worker_type() {
  worker_type_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& LoginToken::worker_type() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
  return _internal_worker_type();
}
inline void LoginToken::set_worker_type(const std::string& value) {
  _internal_set_worker_type(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
}
inline std::string* LoginToken::mutable_worker_type() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
  return _internal_mutable_worker_type();
}
inline const std::string& LoginToken::_internal_worker_type() const {
  return worker_type_.Get();
}
inline void LoginToken::_internal_set_worker_type(const std::string& value) {
  
  worker_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void LoginToken::set_worker_type(std::string&& value) {
  
  worker_type_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
}
inline void LoginToken::set_worker_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  worker_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
}
inline void LoginToken::set_worker_type(const char* value,
    size_t size) {
  
  worker_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
}
inline std::string* LoginToken::_internal_mutable_worker_type() {
  
  return worker_type_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* LoginToken::release_worker_type() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
  return worker_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void LoginToken::set_allocated_worker_type(std::string* worker_type) {
  if (worker_type != nullptr) {
    
  } else {
    
  }
  worker_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), worker_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
}
inline std::string* LoginToken::unsafe_arena_release_worker_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return worker_type_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void LoginToken::unsafe_arena_set_allocated_worker_type(
    std::string* worker_type) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (worker_type != nullptr) {
    
  } else {
    
  }
  worker_type_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      worker_type, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.worker_type)
}

// .google.protobuf.Timestamp issued_at_time = 6[json_name = "iat"];
inline bool LoginToken::_internal_has_issued_at_time() const {
  return this != internal_default_instance() && issued_at_time_ != nullptr;
}
inline bool LoginToken::has_issued_at_time() const {
  return _internal_has_issued_at_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& LoginToken::_internal_issued_at_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = issued_at_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& LoginToken::issued_at_time() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.LoginToken.issued_at_time)
  return _internal_issued_at_time();
}
inline void LoginToken::unsafe_arena_set_allocated_issued_at_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(issued_at_time_);
  }
  issued_at_time_ = issued_at_time;
  if (issued_at_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.issued_at_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* LoginToken::release_issued_at_time() {
  auto temp = unsafe_arena_release_issued_at_time();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* LoginToken::unsafe_arena_release_issued_at_time() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.LoginToken.issued_at_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = issued_at_time_;
  issued_at_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* LoginToken::_internal_mutable_issued_at_time() {
  
  if (issued_at_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    issued_at_time_ = p;
  }
  return issued_at_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* LoginToken::mutable_issued_at_time() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.LoginToken.issued_at_time)
  return _internal_mutable_issued_at_time();
}
inline void LoginToken::set_allocated_issued_at_time(PROTOBUF_NAMESPACE_ID::Timestamp* issued_at_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(issued_at_time_);
  }
  if (issued_at_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(issued_at_time)->GetArena();
    if (message_arena != submessage_arena) {
      issued_at_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, issued_at_time, submessage_arena);
    }
    
  } else {
    
  }
  issued_at_time_ = issued_at_time;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.issued_at_time)
}

// .google.protobuf.Timestamp expiry_time = 7[json_name = "exp"];
inline bool LoginToken::_internal_has_expiry_time() const {
  return this != internal_default_instance() && expiry_time_ != nullptr;
}
inline bool LoginToken::has_expiry_time() const {
  return _internal_has_expiry_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& LoginToken::_internal_expiry_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = expiry_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& LoginToken::expiry_time() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.LoginToken.expiry_time)
  return _internal_expiry_time();
}
inline void LoginToken::unsafe_arena_set_allocated_expiry_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiry_time_);
  }
  expiry_time_ = expiry_time;
  if (expiry_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.expiry_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* LoginToken::release_expiry_time() {
  auto temp = unsafe_arena_release_expiry_time();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* LoginToken::unsafe_arena_release_expiry_time() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.LoginToken.expiry_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = expiry_time_;
  expiry_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* LoginToken::_internal_mutable_expiry_time() {
  
  if (expiry_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    expiry_time_ = p;
  }
  return expiry_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* LoginToken::mutable_expiry_time() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.LoginToken.expiry_time)
  return _internal_mutable_expiry_time();
}
inline void LoginToken::set_allocated_expiry_time(PROTOBUF_NAMESPACE_ID::Timestamp* expiry_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiry_time_);
  }
  if (expiry_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiry_time)->GetArena();
    if (message_arena != submessage_arena) {
      expiry_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, expiry_time, submessage_arena);
    }
    
  } else {
    
  }
  expiry_time_ = expiry_time;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.LoginToken.expiry_time)
}

// -------------------------------------------------------------------

// DevelopmentAuthenticationToken

// string id = 1 [(.improbable.logfield) = {
inline void DevelopmentAuthenticationToken::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DevelopmentAuthenticationToken::id() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
  return _internal_id();
}
inline void DevelopmentAuthenticationToken::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
}
inline std::string* DevelopmentAuthenticationToken::mutable_id() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
  return _internal_mutable_id();
}
inline const std::string& DevelopmentAuthenticationToken::_internal_id() const {
  return id_.Get();
}
inline void DevelopmentAuthenticationToken::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DevelopmentAuthenticationToken::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
}
inline void DevelopmentAuthenticationToken::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
}
inline void DevelopmentAuthenticationToken::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
}
inline std::string* DevelopmentAuthenticationToken::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DevelopmentAuthenticationToken::release_id() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DevelopmentAuthenticationToken::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
}
inline std::string* DevelopmentAuthenticationToken::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DevelopmentAuthenticationToken::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.id)
}

// string project_name = 2 [(.improbable.logfield) = {
inline void DevelopmentAuthenticationToken::clear_project_name() {
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DevelopmentAuthenticationToken::project_name() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
  return _internal_project_name();
}
inline void DevelopmentAuthenticationToken::set_project_name(const std::string& value) {
  _internal_set_project_name(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
}
inline std::string* DevelopmentAuthenticationToken::mutable_project_name() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
  return _internal_mutable_project_name();
}
inline const std::string& DevelopmentAuthenticationToken::_internal_project_name() const {
  return project_name_.Get();
}
inline void DevelopmentAuthenticationToken::_internal_set_project_name(const std::string& value) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DevelopmentAuthenticationToken::set_project_name(std::string&& value) {
  
  project_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
}
inline void DevelopmentAuthenticationToken::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
}
inline void DevelopmentAuthenticationToken::set_project_name(const char* value,
    size_t size) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
}
inline std::string* DevelopmentAuthenticationToken::_internal_mutable_project_name() {
  
  return project_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DevelopmentAuthenticationToken::release_project_name() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
  return project_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DevelopmentAuthenticationToken::set_allocated_project_name(std::string* project_name) {
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), project_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
}
inline std::string* DevelopmentAuthenticationToken::unsafe_arena_release_project_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return project_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DevelopmentAuthenticationToken::unsafe_arena_set_allocated_project_name(
    std::string* project_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      project_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.project_name)
}

// string description = 3 [(.validator.field) = {
inline void DevelopmentAuthenticationToken::clear_description() {
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DevelopmentAuthenticationToken::description() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
  return _internal_description();
}
inline void DevelopmentAuthenticationToken::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
}
inline std::string* DevelopmentAuthenticationToken::mutable_description() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
  return _internal_mutable_description();
}
inline const std::string& DevelopmentAuthenticationToken::_internal_description() const {
  return description_.Get();
}
inline void DevelopmentAuthenticationToken::_internal_set_description(const std::string& value) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DevelopmentAuthenticationToken::set_description(std::string&& value) {
  
  description_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
}
inline void DevelopmentAuthenticationToken::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
}
inline void DevelopmentAuthenticationToken::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
}
inline std::string* DevelopmentAuthenticationToken::_internal_mutable_description() {
  
  return description_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DevelopmentAuthenticationToken::release_description() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DevelopmentAuthenticationToken::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
}
inline std::string* DevelopmentAuthenticationToken::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return description_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DevelopmentAuthenticationToken::unsafe_arena_set_allocated_description(
    std::string* description) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (description != nullptr) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      description, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.description)
}

// .google.protobuf.Timestamp creation_time = 4;
inline bool DevelopmentAuthenticationToken::_internal_has_creation_time() const {
  return this != internal_default_instance() && creation_time_ != nullptr;
}
inline bool DevelopmentAuthenticationToken::has_creation_time() const {
  return _internal_has_creation_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& DevelopmentAuthenticationToken::_internal_creation_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = creation_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& DevelopmentAuthenticationToken::creation_time() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.creation_time)
  return _internal_creation_time();
}
inline void DevelopmentAuthenticationToken::unsafe_arena_set_allocated_creation_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* creation_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(creation_time_);
  }
  creation_time_ = creation_time;
  if (creation_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.creation_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* DevelopmentAuthenticationToken::release_creation_time() {
  auto temp = unsafe_arena_release_creation_time();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* DevelopmentAuthenticationToken::unsafe_arena_release_creation_time() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.creation_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = creation_time_;
  creation_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* DevelopmentAuthenticationToken::_internal_mutable_creation_time() {
  
  if (creation_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    creation_time_ = p;
  }
  return creation_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* DevelopmentAuthenticationToken::mutable_creation_time() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.creation_time)
  return _internal_mutable_creation_time();
}
inline void DevelopmentAuthenticationToken::set_allocated_creation_time(PROTOBUF_NAMESPACE_ID::Timestamp* creation_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(creation_time_);
  }
  if (creation_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(creation_time)->GetArena();
    if (message_arena != submessage_arena) {
      creation_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, creation_time, submessage_arena);
    }
    
  } else {
    
  }
  creation_time_ = creation_time;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.creation_time)
}

// .google.protobuf.Timestamp expiration_time = 5;
inline bool DevelopmentAuthenticationToken::_internal_has_expiration_time() const {
  return this != internal_default_instance() && expiration_time_ != nullptr;
}
inline bool DevelopmentAuthenticationToken::has_expiration_time() const {
  return _internal_has_expiration_time();
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& DevelopmentAuthenticationToken::_internal_expiration_time() const {
  const PROTOBUF_NAMESPACE_ID::Timestamp* p = expiration_time_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Timestamp*>(
      &PROTOBUF_NAMESPACE_ID::_Timestamp_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Timestamp& DevelopmentAuthenticationToken::expiration_time() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.expiration_time)
  return _internal_expiration_time();
}
inline void DevelopmentAuthenticationToken::unsafe_arena_set_allocated_expiration_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* expiration_time) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiration_time_);
  }
  expiration_time_ = expiration_time;
  if (expiration_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.expiration_time)
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* DevelopmentAuthenticationToken::release_expiration_time() {
  auto temp = unsafe_arena_release_expiration_time();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* DevelopmentAuthenticationToken::unsafe_arena_release_expiration_time() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.expiration_time)
  
  PROTOBUF_NAMESPACE_ID::Timestamp* temp = expiration_time_;
  expiration_time_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* DevelopmentAuthenticationToken::_internal_mutable_expiration_time() {
  
  if (expiration_time_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Timestamp>(GetArena());
    expiration_time_ = p;
  }
  return expiration_time_;
}
inline PROTOBUF_NAMESPACE_ID::Timestamp* DevelopmentAuthenticationToken::mutable_expiration_time() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.expiration_time)
  return _internal_mutable_expiration_time();
}
inline void DevelopmentAuthenticationToken::set_allocated_expiration_time(PROTOBUF_NAMESPACE_ID::Timestamp* expiration_time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiration_time_);
  }
  if (expiration_time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(expiration_time)->GetArena();
    if (message_arena != submessage_arena) {
      expiration_time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, expiration_time, submessage_arena);
    }
    
  } else {
    
  }
  expiration_time_ = expiration_time;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken.expiration_time)
}

// -------------------------------------------------------------------

// CreateDevelopmentAuthenticationTokenRequest

// string project_name = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
inline void CreateDevelopmentAuthenticationTokenRequest::clear_project_name() {
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateDevelopmentAuthenticationTokenRequest::project_name() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
  return _internal_project_name();
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_project_name(const std::string& value) {
  _internal_set_project_name(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
}
inline std::string* CreateDevelopmentAuthenticationTokenRequest::mutable_project_name() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
  return _internal_mutable_project_name();
}
inline const std::string& CreateDevelopmentAuthenticationTokenRequest::_internal_project_name() const {
  return project_name_.Get();
}
inline void CreateDevelopmentAuthenticationTokenRequest::_internal_set_project_name(const std::string& value) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_project_name(std::string&& value) {
  
  project_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_project_name(const char* value,
    size_t size) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
}
inline std::string* CreateDevelopmentAuthenticationTokenRequest::_internal_mutable_project_name() {
  
  return project_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateDevelopmentAuthenticationTokenRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
  return project_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_allocated_project_name(std::string* project_name) {
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), project_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
}
inline std::string* CreateDevelopmentAuthenticationTokenRequest::unsafe_arena_release_project_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return project_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_project_name(
    std::string* project_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      project_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.project_name)
}

// string description = 2 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
inline void CreateDevelopmentAuthenticationTokenRequest::clear_description() {
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateDevelopmentAuthenticationTokenRequest::description() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
  return _internal_description();
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
}
inline std::string* CreateDevelopmentAuthenticationTokenRequest::mutable_description() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
  return _internal_mutable_description();
}
inline const std::string& CreateDevelopmentAuthenticationTokenRequest::_internal_description() const {
  return description_.Get();
}
inline void CreateDevelopmentAuthenticationTokenRequest::_internal_set_description(const std::string& value) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_description(std::string&& value) {
  
  description_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
}
inline std::string* CreateDevelopmentAuthenticationTokenRequest::_internal_mutable_description() {
  
  return description_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateDevelopmentAuthenticationTokenRequest::release_description() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
}
inline std::string* CreateDevelopmentAuthenticationTokenRequest::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return description_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_description(
    std::string* description) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (description != nullptr) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      description, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.description)
}

// .google.protobuf.Duration lifetime = 3;
inline bool CreateDevelopmentAuthenticationTokenRequest::_internal_has_lifetime() const {
  return this != internal_default_instance() && lifetime_ != nullptr;
}
inline bool CreateDevelopmentAuthenticationTokenRequest::has_lifetime() const {
  return _internal_has_lifetime();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& CreateDevelopmentAuthenticationTokenRequest::_internal_lifetime() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = lifetime_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration*>(
      &PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& CreateDevelopmentAuthenticationTokenRequest::lifetime() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.lifetime)
  return _internal_lifetime();
}
inline void CreateDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_lifetime(
    PROTOBUF_NAMESPACE_ID::Duration* lifetime) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime_);
  }
  lifetime_ = lifetime;
  if (lifetime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.lifetime)
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreateDevelopmentAuthenticationTokenRequest::release_lifetime() {
  auto temp = unsafe_arena_release_lifetime();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreateDevelopmentAuthenticationTokenRequest::unsafe_arena_release_lifetime() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.lifetime)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = lifetime_;
  lifetime_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreateDevelopmentAuthenticationTokenRequest::_internal_mutable_lifetime() {
  
  if (lifetime_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    lifetime_ = p;
  }
  return lifetime_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* CreateDevelopmentAuthenticationTokenRequest::mutable_lifetime() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.lifetime)
  return _internal_mutable_lifetime();
}
inline void CreateDevelopmentAuthenticationTokenRequest::set_allocated_lifetime(PROTOBUF_NAMESPACE_ID::Duration* lifetime) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime_);
  }
  if (lifetime) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(lifetime)->GetArena();
    if (message_arena != submessage_arena) {
      lifetime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, lifetime, submessage_arena);
    }
    
  } else {
    
  }
  lifetime_ = lifetime;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenRequest.lifetime)
}

// -------------------------------------------------------------------

// CreateDevelopmentAuthenticationTokenResponse

// .improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken development_authentication_token = 1;
inline bool CreateDevelopmentAuthenticationTokenResponse::_internal_has_development_authentication_token() const {
  return this != internal_default_instance() && development_authentication_token_ != nullptr;
}
inline bool CreateDevelopmentAuthenticationTokenResponse::has_development_authentication_token() const {
  return _internal_has_development_authentication_token();
}
inline void CreateDevelopmentAuthenticationTokenResponse::clear_development_authentication_token() {
  if (GetArena() == nullptr && development_authentication_token_ != nullptr) {
    delete development_authentication_token_;
  }
  development_authentication_token_ = nullptr;
}
inline const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& CreateDevelopmentAuthenticationTokenResponse::_internal_development_authentication_token() const {
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* p = development_authentication_token_;
  return p != nullptr ? *p : *reinterpret_cast<const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken*>(
      &::improbable::spatialos::playerauth::v2::_DevelopmentAuthenticationToken_default_instance_);
}
inline const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& CreateDevelopmentAuthenticationTokenResponse::development_authentication_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.development_authentication_token)
  return _internal_development_authentication_token();
}
inline void CreateDevelopmentAuthenticationTokenResponse::unsafe_arena_set_allocated_development_authentication_token(
    ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(development_authentication_token_);
  }
  development_authentication_token_ = development_authentication_token;
  if (development_authentication_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.development_authentication_token)
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* CreateDevelopmentAuthenticationTokenResponse::release_development_authentication_token() {
  auto temp = unsafe_arena_release_development_authentication_token();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* CreateDevelopmentAuthenticationTokenResponse::unsafe_arena_release_development_authentication_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.development_authentication_token)
  
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* temp = development_authentication_token_;
  development_authentication_token_ = nullptr;
  return temp;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* CreateDevelopmentAuthenticationTokenResponse::_internal_mutable_development_authentication_token() {
  
  if (development_authentication_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken>(GetArena());
    development_authentication_token_ = p;
  }
  return development_authentication_token_;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* CreateDevelopmentAuthenticationTokenResponse::mutable_development_authentication_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.development_authentication_token)
  return _internal_mutable_development_authentication_token();
}
inline void CreateDevelopmentAuthenticationTokenResponse::set_allocated_development_authentication_token(::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete development_authentication_token_;
  }
  if (development_authentication_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(development_authentication_token);
    if (message_arena != submessage_arena) {
      development_authentication_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, development_authentication_token, submessage_arena);
    }
    
  } else {
    
  }
  development_authentication_token_ = development_authentication_token;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.development_authentication_token)
}

// string token_secret = 2;
inline void CreateDevelopmentAuthenticationTokenResponse::clear_token_secret() {
  token_secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& CreateDevelopmentAuthenticationTokenResponse::token_secret() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
  return _internal_token_secret();
}
inline void CreateDevelopmentAuthenticationTokenResponse::set_token_secret(const std::string& value) {
  _internal_set_token_secret(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
}
inline std::string* CreateDevelopmentAuthenticationTokenResponse::mutable_token_secret() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
  return _internal_mutable_token_secret();
}
inline const std::string& CreateDevelopmentAuthenticationTokenResponse::_internal_token_secret() const {
  return token_secret_.Get();
}
inline void CreateDevelopmentAuthenticationTokenResponse::_internal_set_token_secret(const std::string& value) {
  
  token_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void CreateDevelopmentAuthenticationTokenResponse::set_token_secret(std::string&& value) {
  
  token_secret_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
}
inline void CreateDevelopmentAuthenticationTokenResponse::set_token_secret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  token_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
}
inline void CreateDevelopmentAuthenticationTokenResponse::set_token_secret(const char* value,
    size_t size) {
  
  token_secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
}
inline std::string* CreateDevelopmentAuthenticationTokenResponse::_internal_mutable_token_secret() {
  
  return token_secret_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* CreateDevelopmentAuthenticationTokenResponse::release_token_secret() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
  return token_secret_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CreateDevelopmentAuthenticationTokenResponse::set_allocated_token_secret(std::string* token_secret) {
  if (token_secret != nullptr) {
    
  } else {
    
  }
  token_secret_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), token_secret,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
}
inline std::string* CreateDevelopmentAuthenticationTokenResponse::unsafe_arena_release_token_secret() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return token_secret_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void CreateDevelopmentAuthenticationTokenResponse::unsafe_arena_set_allocated_token_secret(
    std::string* token_secret) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (token_secret != nullptr) {
    
  } else {
    
  }
  token_secret_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      token_secret, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.CreateDevelopmentAuthenticationTokenResponse.token_secret)
}

// -------------------------------------------------------------------

// GetDevelopmentAuthenticationTokenRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
inline void GetDevelopmentAuthenticationTokenRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GetDevelopmentAuthenticationTokenRequest::id() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
  return _internal_id();
}
inline void GetDevelopmentAuthenticationTokenRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* GetDevelopmentAuthenticationTokenRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
  return _internal_mutable_id();
}
inline const std::string& GetDevelopmentAuthenticationTokenRequest::_internal_id() const {
  return id_.Get();
}
inline void GetDevelopmentAuthenticationTokenRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GetDevelopmentAuthenticationTokenRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
}
inline void GetDevelopmentAuthenticationTokenRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
}
inline void GetDevelopmentAuthenticationTokenRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* GetDevelopmentAuthenticationTokenRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GetDevelopmentAuthenticationTokenRequest::release_id() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GetDevelopmentAuthenticationTokenRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* GetDevelopmentAuthenticationTokenRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GetDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenRequest.id)
}

// -------------------------------------------------------------------

// GetDevelopmentAuthenticationTokenResponse

// .improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken development_authentication_token = 1;
inline bool GetDevelopmentAuthenticationTokenResponse::_internal_has_development_authentication_token() const {
  return this != internal_default_instance() && development_authentication_token_ != nullptr;
}
inline bool GetDevelopmentAuthenticationTokenResponse::has_development_authentication_token() const {
  return _internal_has_development_authentication_token();
}
inline void GetDevelopmentAuthenticationTokenResponse::clear_development_authentication_token() {
  if (GetArena() == nullptr && development_authentication_token_ != nullptr) {
    delete development_authentication_token_;
  }
  development_authentication_token_ = nullptr;
}
inline const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& GetDevelopmentAuthenticationTokenResponse::_internal_development_authentication_token() const {
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* p = development_authentication_token_;
  return p != nullptr ? *p : *reinterpret_cast<const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken*>(
      &::improbable::spatialos::playerauth::v2::_DevelopmentAuthenticationToken_default_instance_);
}
inline const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& GetDevelopmentAuthenticationTokenResponse::development_authentication_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenResponse.development_authentication_token)
  return _internal_development_authentication_token();
}
inline void GetDevelopmentAuthenticationTokenResponse::unsafe_arena_set_allocated_development_authentication_token(
    ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(development_authentication_token_);
  }
  development_authentication_token_ = development_authentication_token;
  if (development_authentication_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenResponse.development_authentication_token)
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* GetDevelopmentAuthenticationTokenResponse::release_development_authentication_token() {
  auto temp = unsafe_arena_release_development_authentication_token();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* GetDevelopmentAuthenticationTokenResponse::unsafe_arena_release_development_authentication_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenResponse.development_authentication_token)
  
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* temp = development_authentication_token_;
  development_authentication_token_ = nullptr;
  return temp;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* GetDevelopmentAuthenticationTokenResponse::_internal_mutable_development_authentication_token() {
  
  if (development_authentication_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken>(GetArena());
    development_authentication_token_ = p;
  }
  return development_authentication_token_;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* GetDevelopmentAuthenticationTokenResponse::mutable_development_authentication_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenResponse.development_authentication_token)
  return _internal_mutable_development_authentication_token();
}
inline void GetDevelopmentAuthenticationTokenResponse::set_allocated_development_authentication_token(::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete development_authentication_token_;
  }
  if (development_authentication_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(development_authentication_token);
    if (message_arena != submessage_arena) {
      development_authentication_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, development_authentication_token, submessage_arena);
    }
    
  } else {
    
  }
  development_authentication_token_ = development_authentication_token;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.GetDevelopmentAuthenticationTokenResponse.development_authentication_token)
}

// -------------------------------------------------------------------

// ListDevelopmentAuthenticationTokensRequest

// string project_name = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
inline void ListDevelopmentAuthenticationTokensRequest::clear_project_name() {
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ListDevelopmentAuthenticationTokensRequest::project_name() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
  return _internal_project_name();
}
inline void ListDevelopmentAuthenticationTokensRequest::set_project_name(const std::string& value) {
  _internal_set_project_name(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
}
inline std::string* ListDevelopmentAuthenticationTokensRequest::mutable_project_name() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
  return _internal_mutable_project_name();
}
inline const std::string& ListDevelopmentAuthenticationTokensRequest::_internal_project_name() const {
  return project_name_.Get();
}
inline void ListDevelopmentAuthenticationTokensRequest::_internal_set_project_name(const std::string& value) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ListDevelopmentAuthenticationTokensRequest::set_project_name(std::string&& value) {
  
  project_name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
}
inline void ListDevelopmentAuthenticationTokensRequest::set_project_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
}
inline void ListDevelopmentAuthenticationTokensRequest::set_project_name(const char* value,
    size_t size) {
  
  project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
}
inline std::string* ListDevelopmentAuthenticationTokensRequest::_internal_mutable_project_name() {
  
  return project_name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ListDevelopmentAuthenticationTokensRequest::release_project_name() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
  return project_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListDevelopmentAuthenticationTokensRequest::set_allocated_project_name(std::string* project_name) {
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), project_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
}
inline std::string* ListDevelopmentAuthenticationTokensRequest::unsafe_arena_release_project_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return project_name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ListDevelopmentAuthenticationTokensRequest::unsafe_arena_set_allocated_project_name(
    std::string* project_name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (project_name != nullptr) {
    
  } else {
    
  }
  project_name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      project_name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.project_name)
}

// bool include_expired = 2;
inline void ListDevelopmentAuthenticationTokensRequest::clear_include_expired() {
  include_expired_ = false;
}
inline bool ListDevelopmentAuthenticationTokensRequest::_internal_include_expired() const {
  return include_expired_;
}
inline bool ListDevelopmentAuthenticationTokensRequest::include_expired() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.include_expired)
  return _internal_include_expired();
}
inline void ListDevelopmentAuthenticationTokensRequest::_internal_set_include_expired(bool value) {
  
  include_expired_ = value;
}
inline void ListDevelopmentAuthenticationTokensRequest::set_include_expired(bool value) {
  _internal_set_include_expired(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.include_expired)
}

// int32 page_size = 3 [(.validator.field) = {
inline void ListDevelopmentAuthenticationTokensRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ListDevelopmentAuthenticationTokensRequest::_internal_page_size() const {
  return page_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ListDevelopmentAuthenticationTokensRequest::page_size() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_size)
  return _internal_page_size();
}
inline void ListDevelopmentAuthenticationTokensRequest::_internal_set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  page_size_ = value;
}
inline void ListDevelopmentAuthenticationTokensRequest::set_page_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_page_size(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_size)
}

// string page_token = 4;
inline void ListDevelopmentAuthenticationTokensRequest::clear_page_token() {
  page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ListDevelopmentAuthenticationTokensRequest::page_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
  return _internal_page_token();
}
inline void ListDevelopmentAuthenticationTokensRequest::set_page_token(const std::string& value) {
  _internal_set_page_token(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
}
inline std::string* ListDevelopmentAuthenticationTokensRequest::mutable_page_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
  return _internal_mutable_page_token();
}
inline const std::string& ListDevelopmentAuthenticationTokensRequest::_internal_page_token() const {
  return page_token_.Get();
}
inline void ListDevelopmentAuthenticationTokensRequest::_internal_set_page_token(const std::string& value) {
  
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ListDevelopmentAuthenticationTokensRequest::set_page_token(std::string&& value) {
  
  page_token_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
}
inline void ListDevelopmentAuthenticationTokensRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
}
inline void ListDevelopmentAuthenticationTokensRequest::set_page_token(const char* value,
    size_t size) {
  
  page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
}
inline std::string* ListDevelopmentAuthenticationTokensRequest::_internal_mutable_page_token() {
  
  return page_token_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ListDevelopmentAuthenticationTokensRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
  return page_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListDevelopmentAuthenticationTokensRequest::set_allocated_page_token(std::string* page_token) {
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), page_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
}
inline std::string* ListDevelopmentAuthenticationTokensRequest::unsafe_arena_release_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return page_token_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ListDevelopmentAuthenticationTokensRequest::unsafe_arena_set_allocated_page_token(
    std::string* page_token) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (page_token != nullptr) {
    
  } else {
    
  }
  page_token_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      page_token, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensRequest.page_token)
}

// -------------------------------------------------------------------

// ListDevelopmentAuthenticationTokensResponse

// repeated .improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken development_authentication_tokens = 1;
inline int ListDevelopmentAuthenticationTokensResponse::_internal_development_authentication_tokens_size() const {
  return development_authentication_tokens_.size();
}
inline int ListDevelopmentAuthenticationTokensResponse::development_authentication_tokens_size() const {
  return _internal_development_authentication_tokens_size();
}
inline void ListDevelopmentAuthenticationTokensResponse::clear_development_authentication_tokens() {
  development_authentication_tokens_.Clear();
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* ListDevelopmentAuthenticationTokensResponse::mutable_development_authentication_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.development_authentication_tokens)
  return development_authentication_tokens_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken >*
ListDevelopmentAuthenticationTokensResponse::mutable_development_authentication_tokens() {
  // @@protoc_insertion_point(field_mutable_list:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.development_authentication_tokens)
  return &development_authentication_tokens_;
}
inline const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& ListDevelopmentAuthenticationTokensResponse::_internal_development_authentication_tokens(int index) const {
  return development_authentication_tokens_.Get(index);
}
inline const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& ListDevelopmentAuthenticationTokensResponse::development_authentication_tokens(int index) const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.development_authentication_tokens)
  return _internal_development_authentication_tokens(index);
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* ListDevelopmentAuthenticationTokensResponse::_internal_add_development_authentication_tokens() {
  return development_authentication_tokens_.Add();
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* ListDevelopmentAuthenticationTokensResponse::add_development_authentication_tokens() {
  // @@protoc_insertion_point(field_add:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.development_authentication_tokens)
  return _internal_add_development_authentication_tokens();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken >&
ListDevelopmentAuthenticationTokensResponse::development_authentication_tokens() const {
  // @@protoc_insertion_point(field_list:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.development_authentication_tokens)
  return development_authentication_tokens_;
}

// string next_page_token = 2;
inline void ListDevelopmentAuthenticationTokensResponse::clear_next_page_token() {
  next_page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ListDevelopmentAuthenticationTokensResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
  return _internal_next_page_token();
}
inline void ListDevelopmentAuthenticationTokensResponse::set_next_page_token(const std::string& value) {
  _internal_set_next_page_token(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
}
inline std::string* ListDevelopmentAuthenticationTokensResponse::mutable_next_page_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
  return _internal_mutable_next_page_token();
}
inline const std::string& ListDevelopmentAuthenticationTokensResponse::_internal_next_page_token() const {
  return next_page_token_.Get();
}
inline void ListDevelopmentAuthenticationTokensResponse::_internal_set_next_page_token(const std::string& value) {
  
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ListDevelopmentAuthenticationTokensResponse::set_next_page_token(std::string&& value) {
  
  next_page_token_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
}
inline void ListDevelopmentAuthenticationTokensResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
}
inline void ListDevelopmentAuthenticationTokensResponse::set_next_page_token(const char* value,
    size_t size) {
  
  next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
}
inline std::string* ListDevelopmentAuthenticationTokensResponse::_internal_mutable_next_page_token() {
  
  return next_page_token_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ListDevelopmentAuthenticationTokensResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
  return next_page_token_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ListDevelopmentAuthenticationTokensResponse::set_allocated_next_page_token(std::string* next_page_token) {
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), next_page_token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
}
inline std::string* ListDevelopmentAuthenticationTokensResponse::unsafe_arena_release_next_page_token() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return next_page_token_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ListDevelopmentAuthenticationTokensResponse::unsafe_arena_set_allocated_next_page_token(
    std::string* next_page_token) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (next_page_token != nullptr) {
    
  } else {
    
  }
  next_page_token_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      next_page_token, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.ListDevelopmentAuthenticationTokensResponse.next_page_token)
}

// -------------------------------------------------------------------

// UpdateDevelopmentAuthenticationTokenRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
inline void UpdateDevelopmentAuthenticationTokenRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& UpdateDevelopmentAuthenticationTokenRequest::id() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
  return _internal_id();
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* UpdateDevelopmentAuthenticationTokenRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
  return _internal_mutable_id();
}
inline const std::string& UpdateDevelopmentAuthenticationTokenRequest::_internal_id() const {
  return id_.Get();
}
inline void UpdateDevelopmentAuthenticationTokenRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* UpdateDevelopmentAuthenticationTokenRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* UpdateDevelopmentAuthenticationTokenRequest::release_id() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* UpdateDevelopmentAuthenticationTokenRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void UpdateDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.id)
}

// string description = 2 [(.validator.field) = {
inline void UpdateDevelopmentAuthenticationTokenRequest::clear_description() {
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& UpdateDevelopmentAuthenticationTokenRequest::description() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
  return _internal_description();
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
}
inline std::string* UpdateDevelopmentAuthenticationTokenRequest::mutable_description() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
  return _internal_mutable_description();
}
inline const std::string& UpdateDevelopmentAuthenticationTokenRequest::_internal_description() const {
  return description_.Get();
}
inline void UpdateDevelopmentAuthenticationTokenRequest::_internal_set_description(const std::string& value) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_description(std::string&& value) {
  
  description_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
}
inline std::string* UpdateDevelopmentAuthenticationTokenRequest::_internal_mutable_description() {
  
  return description_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* UpdateDevelopmentAuthenticationTokenRequest::release_description() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
  return description_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    
  } else {
    
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
}
inline std::string* UpdateDevelopmentAuthenticationTokenRequest::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return description_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void UpdateDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_description(
    std::string* description) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (description != nullptr) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      description, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.description)
}

// .google.protobuf.Duration updated_lifetime = 3;
inline bool UpdateDevelopmentAuthenticationTokenRequest::_internal_has_updated_lifetime() const {
  return this != internal_default_instance() && updated_lifetime_ != nullptr;
}
inline bool UpdateDevelopmentAuthenticationTokenRequest::has_updated_lifetime() const {
  return _internal_has_updated_lifetime();
}
inline const PROTOBUF_NAMESPACE_ID::Duration& UpdateDevelopmentAuthenticationTokenRequest::_internal_updated_lifetime() const {
  const PROTOBUF_NAMESPACE_ID::Duration* p = updated_lifetime_;
  return p != nullptr ? *p : *reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Duration*>(
      &PROTOBUF_NAMESPACE_ID::_Duration_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Duration& UpdateDevelopmentAuthenticationTokenRequest::updated_lifetime() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.updated_lifetime)
  return _internal_updated_lifetime();
}
inline void UpdateDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_updated_lifetime(
    PROTOBUF_NAMESPACE_ID::Duration* updated_lifetime) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_lifetime_);
  }
  updated_lifetime_ = updated_lifetime;
  if (updated_lifetime) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.updated_lifetime)
}
inline PROTOBUF_NAMESPACE_ID::Duration* UpdateDevelopmentAuthenticationTokenRequest::release_updated_lifetime() {
  auto temp = unsafe_arena_release_updated_lifetime();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* UpdateDevelopmentAuthenticationTokenRequest::unsafe_arena_release_updated_lifetime() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.updated_lifetime)
  
  PROTOBUF_NAMESPACE_ID::Duration* temp = updated_lifetime_;
  updated_lifetime_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Duration* UpdateDevelopmentAuthenticationTokenRequest::_internal_mutable_updated_lifetime() {
  
  if (updated_lifetime_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Duration>(GetArena());
    updated_lifetime_ = p;
  }
  return updated_lifetime_;
}
inline PROTOBUF_NAMESPACE_ID::Duration* UpdateDevelopmentAuthenticationTokenRequest::mutable_updated_lifetime() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.updated_lifetime)
  return _internal_mutable_updated_lifetime();
}
inline void UpdateDevelopmentAuthenticationTokenRequest::set_allocated_updated_lifetime(PROTOBUF_NAMESPACE_ID::Duration* updated_lifetime) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_lifetime_);
  }
  if (updated_lifetime) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(updated_lifetime)->GetArena();
    if (message_arena != submessage_arena) {
      updated_lifetime = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, updated_lifetime, submessage_arena);
    }
    
  } else {
    
  }
  updated_lifetime_ = updated_lifetime;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenRequest.updated_lifetime)
}

// -------------------------------------------------------------------

// UpdateDevelopmentAuthenticationTokenResponse

// .improbable.spatialos.playerauth.v2.DevelopmentAuthenticationToken development_authentication_token = 1;
inline bool UpdateDevelopmentAuthenticationTokenResponse::_internal_has_development_authentication_token() const {
  return this != internal_default_instance() && development_authentication_token_ != nullptr;
}
inline bool UpdateDevelopmentAuthenticationTokenResponse::has_development_authentication_token() const {
  return _internal_has_development_authentication_token();
}
inline void UpdateDevelopmentAuthenticationTokenResponse::clear_development_authentication_token() {
  if (GetArena() == nullptr && development_authentication_token_ != nullptr) {
    delete development_authentication_token_;
  }
  development_authentication_token_ = nullptr;
}
inline const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& UpdateDevelopmentAuthenticationTokenResponse::_internal_development_authentication_token() const {
  const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* p = development_authentication_token_;
  return p != nullptr ? *p : *reinterpret_cast<const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken*>(
      &::improbable::spatialos::playerauth::v2::_DevelopmentAuthenticationToken_default_instance_);
}
inline const ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken& UpdateDevelopmentAuthenticationTokenResponse::development_authentication_token() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenResponse.development_authentication_token)
  return _internal_development_authentication_token();
}
inline void UpdateDevelopmentAuthenticationTokenResponse::unsafe_arena_set_allocated_development_authentication_token(
    ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(development_authentication_token_);
  }
  development_authentication_token_ = development_authentication_token;
  if (development_authentication_token) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenResponse.development_authentication_token)
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* UpdateDevelopmentAuthenticationTokenResponse::release_development_authentication_token() {
  auto temp = unsafe_arena_release_development_authentication_token();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* UpdateDevelopmentAuthenticationTokenResponse::unsafe_arena_release_development_authentication_token() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenResponse.development_authentication_token)
  
  ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* temp = development_authentication_token_;
  development_authentication_token_ = nullptr;
  return temp;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* UpdateDevelopmentAuthenticationTokenResponse::_internal_mutable_development_authentication_token() {
  
  if (development_authentication_token_ == nullptr) {
    auto* p = CreateMaybeMessage<::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken>(GetArena());
    development_authentication_token_ = p;
  }
  return development_authentication_token_;
}
inline ::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* UpdateDevelopmentAuthenticationTokenResponse::mutable_development_authentication_token() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenResponse.development_authentication_token)
  return _internal_mutable_development_authentication_token();
}
inline void UpdateDevelopmentAuthenticationTokenResponse::set_allocated_development_authentication_token(::improbable::spatialos::playerauth::v2::DevelopmentAuthenticationToken* development_authentication_token) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete development_authentication_token_;
  }
  if (development_authentication_token) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(development_authentication_token);
    if (message_arena != submessage_arena) {
      development_authentication_token = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, development_authentication_token, submessage_arena);
    }
    
  } else {
    
  }
  development_authentication_token_ = development_authentication_token;
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.UpdateDevelopmentAuthenticationTokenResponse.development_authentication_token)
}

// -------------------------------------------------------------------

// ExpireDevelopmentAuthenticationTokenRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
inline void ExpireDevelopmentAuthenticationTokenRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& ExpireDevelopmentAuthenticationTokenRequest::id() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
  return _internal_id();
}
inline void ExpireDevelopmentAuthenticationTokenRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* ExpireDevelopmentAuthenticationTokenRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
  return _internal_mutable_id();
}
inline const std::string& ExpireDevelopmentAuthenticationTokenRequest::_internal_id() const {
  return id_.Get();
}
inline void ExpireDevelopmentAuthenticationTokenRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void ExpireDevelopmentAuthenticationTokenRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
}
inline void ExpireDevelopmentAuthenticationTokenRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
}
inline void ExpireDevelopmentAuthenticationTokenRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* ExpireDevelopmentAuthenticationTokenRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* ExpireDevelopmentAuthenticationTokenRequest::release_id() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ExpireDevelopmentAuthenticationTokenRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* ExpireDevelopmentAuthenticationTokenRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void ExpireDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.ExpireDevelopmentAuthenticationTokenRequest.id)
}

// -------------------------------------------------------------------

// ExpireDevelopmentAuthenticationTokenResponse

// -------------------------------------------------------------------

// DeleteDevelopmentAuthenticationTokenRequest

// string id = 1 [(.google.api.field_behavior) = REQUIRED, (.improbable.logfield) = {
inline void DeleteDevelopmentAuthenticationTokenRequest::clear_id() {
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& DeleteDevelopmentAuthenticationTokenRequest::id() const {
  // @@protoc_insertion_point(field_get:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
  return _internal_id();
}
inline void DeleteDevelopmentAuthenticationTokenRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* DeleteDevelopmentAuthenticationTokenRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
  return _internal_mutable_id();
}
inline const std::string& DeleteDevelopmentAuthenticationTokenRequest::_internal_id() const {
  return id_.Get();
}
inline void DeleteDevelopmentAuthenticationTokenRequest::_internal_set_id(const std::string& value) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void DeleteDevelopmentAuthenticationTokenRequest::set_id(std::string&& value) {
  
  id_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
}
inline void DeleteDevelopmentAuthenticationTokenRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
}
inline void DeleteDevelopmentAuthenticationTokenRequest::set_id(const char* value,
    size_t size) {
  
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* DeleteDevelopmentAuthenticationTokenRequest::_internal_mutable_id() {
  
  return id_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* DeleteDevelopmentAuthenticationTokenRequest::release_id() {
  // @@protoc_insertion_point(field_release:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void DeleteDevelopmentAuthenticationTokenRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
}
inline std::string* DeleteDevelopmentAuthenticationTokenRequest::unsafe_arena_release_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return id_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void DeleteDevelopmentAuthenticationTokenRequest::unsafe_arena_set_allocated_id(
    std::string* id) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (id != nullptr) {
    
  } else {
    
  }
  id_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      id, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:improbable.spatialos.playerauth.v2.DeleteDevelopmentAuthenticationTokenRequest.id)
}

// -------------------------------------------------------------------

// DeleteDevelopmentAuthenticationTokenResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace playerauth
}  // namespace spatialos
}  // namespace improbable

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_improbable_2fspatialos_2fplayerauth_2fv2_2fplayerauth_2eproto
