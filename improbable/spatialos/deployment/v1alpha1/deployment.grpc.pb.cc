// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: improbable/spatialos/deployment/v1alpha1/deployment.proto

#include "improbable/spatialos/deployment/v1alpha1/deployment.pb.h"
#include "improbable/spatialos/deployment/v1alpha1/deployment.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace improbable {
namespace spatialos {
namespace deployment {
namespace v1alpha1 {

static const char* DeploymentService_method_names[] = {
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/CreateDeployment",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/DeleteDeployment",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/GetDeployment",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/GetRunningDeploymentByName",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/ListDeployments",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/SetDeploymentTags",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/SetDeploymentWorkerCapacities",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/SetDeploymentWorkerFlags",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/SetDeploymentWorkerRateLimits",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/StopDeployment",
  "/improbable.spatialos.deployment.v1alpha1.DeploymentService/UpdateDeployment",
};

std::unique_ptr< DeploymentService::Stub> DeploymentService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< DeploymentService::Stub> stub(new DeploymentService::Stub(channel));
  return stub;
}

DeploymentService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_CreateDeployment_(DeploymentService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteDeployment_(DeploymentService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDeployment_(DeploymentService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetRunningDeploymentByName_(DeploymentService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListDeployments_(DeploymentService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetDeploymentTags_(DeploymentService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetDeploymentWorkerCapacities_(DeploymentService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetDeploymentWorkerFlags_(DeploymentService_method_names[7], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_SetDeploymentWorkerRateLimits_(DeploymentService_method_names[8], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_StopDeployment_(DeploymentService_method_names[9], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateDeployment_(DeploymentService_method_names[10], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status DeploymentService::Stub::CreateDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::CreateDeploymentRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_CreateDeployment_, context, request, response);
}

void DeploymentService::Stub::experimental_async::CreateDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::CreateDeploymentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_CreateDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::CreateDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_CreateDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::CreateDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::CreateDeploymentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_CreateDeployment_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::CreateDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_CreateDeployment_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DeploymentService::Stub::AsyncCreateDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::CreateDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateDeployment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DeploymentService::Stub::PrepareAsyncCreateDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::CreateDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_CreateDeployment_, context, request, false);
}

::grpc::Status DeploymentService::Stub::DeleteDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::DeleteDeploymentRequest& request, ::google::longrunning::Operation* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_DeleteDeployment_, context, request, response);
}

void DeploymentService::Stub::experimental_async::DeleteDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::DeleteDeploymentRequest* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_DeleteDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::DeleteDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::longrunning::Operation* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_DeleteDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::DeleteDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::DeleteDeploymentRequest* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_DeleteDeployment_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::DeleteDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::google::longrunning::Operation* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_DeleteDeployment_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DeploymentService::Stub::AsyncDeleteDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::DeleteDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_DeleteDeployment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::google::longrunning::Operation>* DeploymentService::Stub::PrepareAsyncDeleteDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::DeleteDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::google::longrunning::Operation>::Create(channel_.get(), cq, rpcmethod_DeleteDeployment_, context, request, false);
}

::grpc::Status DeploymentService::Stub::GetDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetDeploymentRequest& request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetDeployment_, context, request, response);
}

void DeploymentService::Stub::experimental_async::GetDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_GetDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::GetDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_GetDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::GetDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_GetDeployment_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::GetDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_GetDeployment_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>* DeploymentService::Stub::AsyncGetDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>::Create(channel_.get(), cq, rpcmethod_GetDeployment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>* DeploymentService::Stub::PrepareAsyncGetDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>::Create(channel_.get(), cq, rpcmethod_GetDeployment_, context, request, false);
}

::grpc::Status DeploymentService::Stub::GetRunningDeploymentByName(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetRunningDeploymentByNameRequest& request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_GetRunningDeploymentByName_, context, request, response);
}

void DeploymentService::Stub::experimental_async::GetRunningDeploymentByName(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetRunningDeploymentByNameRequest* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_GetRunningDeploymentByName_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::GetRunningDeploymentByName(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_GetRunningDeploymentByName_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::GetRunningDeploymentByName(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetRunningDeploymentByNameRequest* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_GetRunningDeploymentByName_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::GetRunningDeploymentByName(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_GetRunningDeploymentByName_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>* DeploymentService::Stub::AsyncGetRunningDeploymentByNameRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetRunningDeploymentByNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>::Create(channel_.get(), cq, rpcmethod_GetRunningDeploymentByName_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>* DeploymentService::Stub::PrepareAsyncGetRunningDeploymentByNameRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetRunningDeploymentByNameRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>::Create(channel_.get(), cq, rpcmethod_GetRunningDeploymentByName_, context, request, false);
}

::grpc::Status DeploymentService::Stub::ListDeployments(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsRequest& request, ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_ListDeployments_, context, request, response);
}

void DeploymentService::Stub::experimental_async::ListDeployments(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsRequest* request, ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_ListDeployments_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::ListDeployments(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_ListDeployments_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::ListDeployments(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsRequest* request, ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_ListDeployments_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::ListDeployments(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_ListDeployments_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse>* DeploymentService::Stub::AsyncListDeploymentsRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse>::Create(channel_.get(), cq, rpcmethod_ListDeployments_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse>* DeploymentService::Stub::PrepareAsyncListDeploymentsRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse>::Create(channel_.get(), cq, rpcmethod_ListDeployments_, context, request, false);
}

::grpc::Status DeploymentService::Stub::SetDeploymentTags(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsRequest& request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SetDeploymentTags_, context, request, response);
}

void DeploymentService::Stub::experimental_async::SetDeploymentTags(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentTags_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::SetDeploymentTags(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentTags_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::SetDeploymentTags(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentTags_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::SetDeploymentTags(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentTags_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse>* DeploymentService::Stub::AsyncSetDeploymentTagsRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse>::Create(channel_.get(), cq, rpcmethod_SetDeploymentTags_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse>* DeploymentService::Stub::PrepareAsyncSetDeploymentTagsRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse>::Create(channel_.get(), cq, rpcmethod_SetDeploymentTags_, context, request, false);
}

::grpc::Status DeploymentService::Stub::SetDeploymentWorkerCapacities(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesRequest& request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SetDeploymentWorkerCapacities_, context, request, response);
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerCapacities(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerCapacities_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerCapacities(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerCapacities_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerCapacities(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerCapacities_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerCapacities(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerCapacities_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse>* DeploymentService::Stub::AsyncSetDeploymentWorkerCapacitiesRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse>::Create(channel_.get(), cq, rpcmethod_SetDeploymentWorkerCapacities_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse>* DeploymentService::Stub::PrepareAsyncSetDeploymentWorkerCapacitiesRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse>::Create(channel_.get(), cq, rpcmethod_SetDeploymentWorkerCapacities_, context, request, false);
}

::grpc::Status DeploymentService::Stub::SetDeploymentWorkerFlags(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsRequest& request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SetDeploymentWorkerFlags_, context, request, response);
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerFlags(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerFlags_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerFlags(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerFlags_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerFlags(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerFlags_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerFlags(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerFlags_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse>* DeploymentService::Stub::AsyncSetDeploymentWorkerFlagsRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse>::Create(channel_.get(), cq, rpcmethod_SetDeploymentWorkerFlags_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse>* DeploymentService::Stub::PrepareAsyncSetDeploymentWorkerFlagsRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse>::Create(channel_.get(), cq, rpcmethod_SetDeploymentWorkerFlags_, context, request, false);
}

::grpc::Status DeploymentService::Stub::SetDeploymentWorkerRateLimits(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsRequest& request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_SetDeploymentWorkerRateLimits_, context, request, response);
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerRateLimits(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerRateLimits_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerRateLimits(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerRateLimits_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerRateLimits(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerRateLimits_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::SetDeploymentWorkerRateLimits(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_SetDeploymentWorkerRateLimits_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse>* DeploymentService::Stub::AsyncSetDeploymentWorkerRateLimitsRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse>::Create(channel_.get(), cq, rpcmethod_SetDeploymentWorkerRateLimits_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse>* DeploymentService::Stub::PrepareAsyncSetDeploymentWorkerRateLimitsRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse>::Create(channel_.get(), cq, rpcmethod_SetDeploymentWorkerRateLimits_, context, request, false);
}

::grpc::Status DeploymentService::Stub::StopDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::StopDeploymentRequest& request, ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_StopDeployment_, context, request, response);
}

void DeploymentService::Stub::experimental_async::StopDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::StopDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_StopDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::StopDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_StopDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::StopDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::StopDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_StopDeployment_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::StopDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_StopDeployment_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse>* DeploymentService::Stub::AsyncStopDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::StopDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse>::Create(channel_.get(), cq, rpcmethod_StopDeployment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse>* DeploymentService::Stub::PrepareAsyncStopDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::StopDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse>::Create(channel_.get(), cq, rpcmethod_StopDeployment_, context, request, false);
}

::grpc::Status DeploymentService::Stub::UpdateDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentRequest& request, ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse* response) {
  return ::grpc::internal::BlockingUnaryCall(channel_.get(), rpcmethod_UpdateDeployment_, context, request, response);
}

void DeploymentService::Stub::experimental_async::UpdateDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_UpdateDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::UpdateDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc_impl::internal::CallbackUnaryCall(stub_->channel_.get(), stub_->rpcmethod_UpdateDeployment_, context, request, response, std::move(f));
}

void DeploymentService::Stub::experimental_async::UpdateDeployment(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_UpdateDeployment_, context, request, response, reactor);
}

void DeploymentService::Stub::experimental_async::UpdateDeployment(::grpc::ClientContext* context, const ::grpc::ByteBuffer* request, ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc_impl::internal::ClientCallbackUnaryFactory::Create(stub_->channel_.get(), stub_->rpcmethod_UpdateDeployment_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse>* DeploymentService::Stub::AsyncUpdateDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse>::Create(channel_.get(), cq, rpcmethod_UpdateDeployment_, context, request, true);
}

::grpc::ClientAsyncResponseReader< ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse>* DeploymentService::Stub::PrepareAsyncUpdateDeploymentRaw(::grpc::ClientContext* context, const ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc_impl::internal::ClientAsyncResponseReaderFactory< ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse>::Create(channel_.get(), cq, rpcmethod_UpdateDeployment_, context, request, false);
}

DeploymentService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::CreateDeploymentRequest, ::google::longrunning::Operation>(
          std::mem_fn(&DeploymentService::Service::CreateDeployment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::DeleteDeploymentRequest, ::google::longrunning::Operation>(
          std::mem_fn(&DeploymentService::Service::DeleteDeployment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentRequest, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>(
          std::mem_fn(&DeploymentService::Service::GetDeployment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::GetRunningDeploymentByNameRequest, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse>(
          std::mem_fn(&DeploymentService::Service::GetRunningDeploymentByName), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsRequest, ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse>(
          std::mem_fn(&DeploymentService::Service::ListDeployments), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsRequest, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse>(
          std::mem_fn(&DeploymentService::Service::SetDeploymentTags), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesRequest, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse>(
          std::mem_fn(&DeploymentService::Service::SetDeploymentWorkerCapacities), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsRequest, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse>(
          std::mem_fn(&DeploymentService::Service::SetDeploymentWorkerFlags), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsRequest, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse>(
          std::mem_fn(&DeploymentService::Service::SetDeploymentWorkerRateLimits), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::StopDeploymentRequest, ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse>(
          std::mem_fn(&DeploymentService::Service::StopDeployment), this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DeploymentService_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DeploymentService::Service, ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentRequest, ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse>(
          std::mem_fn(&DeploymentService::Service::UpdateDeployment), this)));
}

DeploymentService::Service::~Service() {
}

::grpc::Status DeploymentService::Service::CreateDeployment(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::CreateDeploymentRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::DeleteDeployment(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::DeleteDeploymentRequest* request, ::google::longrunning::Operation* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::GetDeployment(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::GetRunningDeploymentByName(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::GetRunningDeploymentByNameRequest* request, ::improbable::spatialos::deployment::v1alpha1::GetDeploymentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::ListDeployments(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsRequest* request, ::improbable::spatialos::deployment::v1alpha1::ListDeploymentsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::SetDeploymentTags(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentTagsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::SetDeploymentWorkerCapacities(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerCapacitiesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::SetDeploymentWorkerFlags(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerFlagsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::SetDeploymentWorkerRateLimits(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsRequest* request, ::improbable::spatialos::deployment::v1alpha1::SetDeploymentWorkerRateLimitsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::StopDeployment(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::StopDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::StopDeploymentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DeploymentService::Service::UpdateDeployment(::grpc::ServerContext* context, const ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentRequest* request, ::improbable::spatialos::deployment::v1alpha1::UpdateDeploymentResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace improbable
}  // namespace spatialos
}  // namespace deployment
}  // namespace v1alpha1

