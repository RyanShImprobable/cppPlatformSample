// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/spatialos/serviceaccount/v1alpha1/serviceaccount.proto

#include "improbable/spatialos/serviceaccount/v1alpha1/serviceaccount.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ServiceAccount_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto;
namespace improbable {
namespace spatialos {
namespace serviceaccount {
namespace v1alpha1 {
class PermissionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Permission> _instance;
} _Permission_default_instance_;
class ServiceAccountDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ServiceAccount> _instance;
} _ServiceAccount_default_instance_;
class CreateServiceAccountRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateServiceAccountRequest> _instance;
} _CreateServiceAccountRequest_default_instance_;
class ListServiceAccountsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceAccountsRequest> _instance;
} _ListServiceAccountsRequest_default_instance_;
class ListServiceAccountsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceAccountsResponse> _instance;
} _ListServiceAccountsResponse_default_instance_;
class UpdateServiceAccountRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateServiceAccountRequest> _instance;
} _UpdateServiceAccountRequest_default_instance_;
class DeleteServiceAccountRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteServiceAccountRequest> _instance;
} _DeleteServiceAccountRequest_default_instance_;
}  // namespace v1alpha1
}  // namespace serviceaccount
}  // namespace spatialos
}  // namespace improbable
static void InitDefaultsscc_info_CreateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::spatialos::serviceaccount::v1alpha1::_CreateServiceAccountRequest_default_instance_;
    new (ptr) ::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CreateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CreateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto}, {
      &scc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,}};

static void InitDefaultsscc_info_DeleteServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::spatialos::serviceaccount::v1alpha1::_DeleteServiceAccountRequest_default_instance_;
    new (ptr) ::improbable::spatialos::serviceaccount::v1alpha1::DeleteServiceAccountRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::improbable::spatialos::serviceaccount::v1alpha1::DeleteServiceAccountRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto}, {}};

static void InitDefaultsscc_info_ListServiceAccountsRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::spatialos::serviceaccount::v1alpha1::_ListServiceAccountsRequest_default_instance_;
    new (ptr) ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListServiceAccountsRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListServiceAccountsRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto}, {}};

static void InitDefaultsscc_info_ListServiceAccountsResponse_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::spatialos::serviceaccount::v1alpha1::_ListServiceAccountsResponse_default_instance_;
    new (ptr) ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListServiceAccountsResponse_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListServiceAccountsResponse_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto}, {
      &scc_info_ServiceAccount_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,}};

static void InitDefaultsscc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::spatialos::serviceaccount::v1alpha1::_Permission_default_instance_;
    new (ptr) ::improbable::spatialos::serviceaccount::v1alpha1::Permission();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::improbable::spatialos::serviceaccount::v1alpha1::Permission::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto}, {}};

static void InitDefaultsscc_info_ServiceAccount_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::spatialos::serviceaccount::v1alpha1::_ServiceAccount_default_instance_;
    new (ptr) ::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ServiceAccount_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ServiceAccount_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto}, {
      &scc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_UpdateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::improbable::spatialos::serviceaccount::v1alpha1::_UpdateServiceAccountRequest_default_instance_;
    new (ptr) ::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_UpdateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_UpdateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto}, {
      &scc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::Permission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::Permission, verbs_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::Permission, parts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount, id_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount, name_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount, project_name_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount, permissions_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount, token_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount, creation_time_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount, expiration_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest, name_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest, project_name_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest, permissions_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest, lifetime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest, project_name_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse, service_accounts_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest, id_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest, permissions_),
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest, expiration_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::DeleteServiceAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::improbable::spatialos::serviceaccount::v1alpha1::DeleteServiceAccountRequest, id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::improbable::spatialos::serviceaccount::v1alpha1::Permission)},
  { 7, -1, sizeof(::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount)},
  { 19, -1, sizeof(::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest)},
  { 28, -1, sizeof(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest)},
  { 36, -1, sizeof(::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse)},
  { 43, -1, sizeof(::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest)},
  { 51, -1, sizeof(::improbable::spatialos::serviceaccount::v1alpha1::DeleteServiceAccountRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::spatialos::serviceaccount::v1alpha1::_Permission_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::spatialos::serviceaccount::v1alpha1::_ServiceAccount_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::spatialos::serviceaccount::v1alpha1::_CreateServiceAccountRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::spatialos::serviceaccount::v1alpha1::_ListServiceAccountsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::spatialos::serviceaccount::v1alpha1::_ListServiceAccountsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::spatialos::serviceaccount::v1alpha1::_UpdateServiceAccountRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::improbable::spatialos::serviceaccount::v1alpha1::_DeleteServiceAccountRequest_default_instance_),
};

const char descriptor_table_protodef_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nAimprobable/spatialos/serviceaccount/v1"
  "alpha1/serviceaccount.proto\022,improbable."
  "spatialos.serviceaccount.v1alpha1\0326githu"
  "b.com/mwitkow/go-proto-validators/valida"
  "tor.proto\032\034google/api/annotations.proto\032"
  "\027google/api/client.proto\032\037google/api/fie"
  "ld_behavior.proto\032\036google/protobuf/durat"
  "ion.proto\032\033google/protobuf/empty.proto\032\037"
  "google/protobuf/timestamp.proto\"\307\001\n\nPerm"
  "ission\022L\n\005verbs\030\001 \003(\0162=.improbable.spati"
  "alos.serviceaccount.v1alpha1.Permission."
  "Verb\0221\n\005parts\030\002 \003(\tB\"\342\337\037\036\n\032^([a-zA-Z0-9_"
  "]{1,255}|\\*)$h\n\"8\n\004Verb\022\020\n\014UNKNOWN_VERB\020"
  "\000\022\010\n\004READ\020\001\022\t\n\005WRITE\020\002\022\t\n\005GRANT\020\003\"\276\002\n\016Se"
  "rviceAccount\022\n\n\002id\030\001 \001(\003\022(\n\004name\030\002 \001(\tB\032"
  "\342\337\037\026\n\024^[a-zA-Z0-9_]{5,64}$\0220\n\014project_na"
  "me\030\007 \001(\tB\032\342\337\037\026\n\024^[a-zA-Z0-9_]{3,32}$\022M\n\013"
  "permissions\030\003 \003(\01328.improbable.spatialos"
  ".serviceaccount.v1alpha1.Permission\022\r\n\005t"
  "oken\030\004 \001(\t\0221\n\rcreation_time\030\005 \001(\0132\032.goog"
  "le.protobuf.Timestamp\0223\n\017expiration_time"
  "\030\006 \001(\0132\032.google.protobuf.Timestamp\"\212\002\n\033C"
  "reateServiceAccountRequest\022-\n\004name\030\001 \001(\t"
  "B\037\340A\002\342\337\037\030\n\024^[a-zA-Z0-9_]{5,64}$ \001\0225\n\014pro"
  "ject_name\030\003 \001(\tB\037\340A\002\342\337\037\030\n\024^[a-zA-Z0-9_]{"
  "3,32}$ \001\022X\n\013permissions\030\004 \003(\01328.improbab"
  "le.spatialos.serviceaccount.v1alpha1.Per"
  "missionB\t\340A\002\342\337\037\002`\001\022+\n\010lifetime\030\002 \001(\0132\031.g"
  "oogle.protobuf.Duration\"\213\001\n\032ListServiceA"
  "ccountsRequest\0225\n\014project_name\030\003 \001(\tB\037\340A"
  "\002\342\337\037\030\n\024^[a-zA-Z0-9_]{3,32}$ \001\022\"\n\tpage_si"
  "ze\030\001 \001(\005B\017\342\337\037\013\020\377\377\377\377\377\377\377\377\377\001\022\022\n\npage_token\030"
  "\002 \001(\t\"\216\001\n\033ListServiceAccountsResponse\022V\n"
  "\020service_accounts\030\001 \003(\0132<.improbable.spa"
  "tialos.serviceaccount.v1alpha1.ServiceAc"
  "count\022\027\n\017next_page_token\030\002 \001(\t\"\270\001\n\033Updat"
  "eServiceAccountRequest\022\025\n\002id\030\001 \001(\003B\t\340A\002\342"
  "\337\037\002 \001\022M\n\013permissions\030\002 \003(\01328.improbable."
  "spatialos.serviceaccount.v1alpha1.Permis"
  "sion\0223\n\017expiration_time\030\003 \001(\0132\032.google.p"
  "rotobuf.Timestamp\"4\n\033DeleteServiceAccoun"
  "tRequest\022\025\n\002id\030\001 \001(\003B\t\340A\002\342\337\037\002 \0012\205\006\n\025Serv"
  "iceAccountService\022\301\001\n\024CreateServiceAccou"
  "nt\022I.improbable.spatialos.serviceaccount"
  ".v1alpha1.CreateServiceAccountRequest\032<."
  "improbable.spatialos.serviceaccount.v1al"
  "pha1.ServiceAccount\" \332A\035project_name,nam"
  "e,permissions\022\273\001\n\023ListServiceAccounts\022H."
  "improbable.spatialos.serviceaccount.v1al"
  "pha1.ListServiceAccountsRequest\032I.improb"
  "able.spatialos.serviceaccount.v1alpha1.L"
  "istServiceAccountsResponse\"\017\332A\014project_n"
  "ame\022\307\001\n\024UpdateServiceAccount\022I.improbabl"
  "e.spatialos.serviceaccount.v1alpha1.Upda"
  "teServiceAccountRequest\032<.improbable.spa"
  "tialos.serviceaccount.v1alpha1.ServiceAc"
  "count\"&\332A\022id,expiration_time\332A\016id,permis"
  "sions\022\200\001\n\024DeleteServiceAccount\022I.improba"
  "ble.spatialos.serviceaccount.v1alpha1.De"
  "leteServiceAccountRequest\032\026.google.proto"
  "buf.Empty\"\005\332A\002id\032\035\312A\032platform.api.improb"
  "able.ioBlZ;improbable/spatialos/servicea"
  "ccount/v1alpha1;serviceaccount\252\002,Improba"
  "ble.SpatialOS.ServiceAccount.V1Alpha1b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto_deps[7] = {
  &::descriptor_table_github_2ecom_2fmwitkow_2fgo_2dproto_2dvalidators_2fvalidator_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto_sccs[7] = {
  &scc_info_CreateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
  &scc_info_DeleteServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
  &scc_info_ListServiceAccountsRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
  &scc_info_ListServiceAccountsResponse_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
  &scc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
  &scc_info_ServiceAccount_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
  &scc_info_UpdateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto = {
  false, false, descriptor_table_protodef_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto, "improbable/spatialos/serviceaccount/v1alpha1/serviceaccount.proto", 2565,
  &descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto_once, descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto_sccs, descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto_deps, 7, 7,
  schemas, file_default_instances, TableStruct_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto::offsets,
  file_level_metadata_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto, 7, file_level_enum_descriptors_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto, file_level_service_descriptors_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto)), true);
namespace improbable {
namespace spatialos {
namespace serviceaccount {
namespace v1alpha1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Permission_Verb_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto);
  return file_level_enum_descriptors_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto[0];
}
bool Permission_Verb_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Permission_Verb Permission::UNKNOWN_VERB;
constexpr Permission_Verb Permission::READ;
constexpr Permission_Verb Permission::WRITE;
constexpr Permission_Verb Permission::GRANT;
constexpr Permission_Verb Permission::Verb_MIN;
constexpr Permission_Verb Permission::Verb_MAX;
constexpr int Permission::Verb_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void Permission::InitAsDefaultInstance() {
}
class Permission::_Internal {
 public:
};

Permission::Permission(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  verbs_(arena),
  parts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.spatialos.serviceaccount.v1alpha1.Permission)
}
Permission::Permission(const Permission& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      verbs_(from.verbs_),
      parts_(from.parts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:improbable.spatialos.serviceaccount.v1alpha1.Permission)
}

void Permission::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
}

Permission::~Permission() {
  // @@protoc_insertion_point(destructor:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Permission::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Permission::ArenaDtor(void* object) {
  Permission* _this = reinterpret_cast< Permission* >(object);
  (void)_this;
}
void Permission::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Permission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Permission& Permission::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Permission_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  return *internal_default_instance();
}


void Permission::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  verbs_.Clear();
  parts_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Permission::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission.Verb verbs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_verbs(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_verbs(static_cast<::improbable::spatialos::serviceaccount::v1alpha1::Permission_Verb>(val));
        } else goto handle_unusual;
        continue;
      // repeated string parts = 2 [(.validator.field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_parts();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.Permission.parts"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Permission::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission.Verb verbs = 1;
  {
    int byte_size = _verbs_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, verbs_, byte_size, target);
    }
  }

  // repeated string parts = 2 [(.validator.field) = {
  for (int i = 0, n = this->_internal_parts_size(); i < n; i++) {
    const auto& s = this->_internal_parts(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.Permission.parts");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  return target;
}

size_t Permission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission.Verb verbs = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_verbs_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_verbs(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _verbs_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated string parts = 2 [(.validator.field) = {
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(parts_.size());
  for (int i = 0, n = parts_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      parts_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Permission::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  GOOGLE_DCHECK_NE(&from, this);
  const Permission* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Permission>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.spatialos.serviceaccount.v1alpha1.Permission)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.spatialos.serviceaccount.v1alpha1.Permission)
    MergeFrom(*source);
  }
}

void Permission::MergeFrom(const Permission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  verbs_.MergeFrom(from.verbs_);
  parts_.MergeFrom(from.parts_);
}

void Permission::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Permission::CopyFrom(const Permission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.Permission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Permission::IsInitialized() const {
  return true;
}

void Permission::InternalSwap(Permission* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  verbs_.InternalSwap(&other->verbs_);
  parts_.InternalSwap(&other->parts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Permission::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ServiceAccount::InitAsDefaultInstance() {
  ::improbable::spatialos::serviceaccount::v1alpha1::_ServiceAccount_default_instance_._instance.get_mutable()->creation_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::improbable::spatialos::serviceaccount::v1alpha1::_ServiceAccount_default_instance_._instance.get_mutable()->expiration_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class ServiceAccount::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& creation_time(const ServiceAccount* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& expiration_time(const ServiceAccount* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
ServiceAccount::_Internal::creation_time(const ServiceAccount* msg) {
  return *msg->creation_time_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
ServiceAccount::_Internal::expiration_time(const ServiceAccount* msg) {
  return *msg->expiration_time_;
}
void ServiceAccount::clear_creation_time() {
  if (GetArena() == nullptr && creation_time_ != nullptr) {
    delete creation_time_;
  }
  creation_time_ = nullptr;
}
void ServiceAccount::clear_expiration_time() {
  if (GetArena() == nullptr && expiration_time_ != nullptr) {
    delete expiration_time_;
  }
  expiration_time_ = nullptr;
}
ServiceAccount::ServiceAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  permissions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
}
ServiceAccount::ServiceAccount(const ServiceAccount& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  project_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_name().empty()) {
    project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_project_name(),
      GetArena());
  }
  if (from._internal_has_creation_time()) {
    creation_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.creation_time_);
  } else {
    creation_time_ = nullptr;
  }
  if (from._internal_has_expiration_time()) {
    expiration_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.expiration_time_);
  } else {
    expiration_time_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
}

void ServiceAccount::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ServiceAccount_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&creation_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&creation_time_)) + sizeof(id_));
}

ServiceAccount::~ServiceAccount() {
  // @@protoc_insertion_point(destructor:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ServiceAccount::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete creation_time_;
  if (this != internal_default_instance()) delete expiration_time_;
}

void ServiceAccount::ArenaDtor(void* object) {
  ServiceAccount* _this = reinterpret_cast< ServiceAccount* >(object);
  (void)_this;
}
void ServiceAccount::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ServiceAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServiceAccount& ServiceAccount::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ServiceAccount_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  return *internal_default_instance();
}


void ServiceAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && creation_time_ != nullptr) {
    delete creation_time_;
  }
  creation_time_ = nullptr;
  if (GetArena() == nullptr && expiration_time_ != nullptr) {
    delete expiration_time_;
  }
  expiration_time_ = nullptr;
  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ServiceAccount::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2 [(.validator.field) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string token = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp creation_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_creation_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expiration_time = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_name = 7 [(.validator.field) = {
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_project_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount.project_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ServiceAccount::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2 [(.validator.field) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_permissions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_permissions(i), target, stream);
  }

  // string token = 4;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount.token");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_token(), target);
  }

  // .google.protobuf.Timestamp creation_time = 5;
  if (this->has_creation_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::creation_time(this), target, stream);
  }

  // .google.protobuf.Timestamp expiration_time = 6;
  if (this->has_expiration_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::expiration_time(this), target, stream);
  }

  // string project_name = 7 [(.validator.field) = {
  if (this->project_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_name().data(), static_cast<int>(this->_internal_project_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount.project_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_project_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  return target;
}

size_t ServiceAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 3;
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 2 [(.validator.field) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string token = 4;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string project_name = 7 [(.validator.field) = {
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_name());
  }

  // .google.protobuf.Timestamp creation_time = 5;
  if (this->has_creation_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *creation_time_);
  }

  // .google.protobuf.Timestamp expiration_time = 6;
  if (this->has_expiration_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expiration_time_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServiceAccount::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const ServiceAccount* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ServiceAccount>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
    MergeFrom(*source);
  }
}

void ServiceAccount::MergeFrom(const ServiceAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.project_name().size() > 0) {
    _internal_set_project_name(from._internal_project_name());
  }
  if (from.has_creation_time()) {
    _internal_mutable_creation_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_creation_time());
  }
  if (from.has_expiration_time()) {
    _internal_mutable_expiration_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_expiration_time());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void ServiceAccount::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServiceAccount::CopyFrom(const ServiceAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServiceAccount::IsInitialized() const {
  return true;
}

void ServiceAccount::InternalSwap(ServiceAccount* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  permissions_.InternalSwap(&other->permissions_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  project_name_.Swap(&other->project_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ServiceAccount, id_)
      + sizeof(ServiceAccount::id_)
      - PROTOBUF_FIELD_OFFSET(ServiceAccount, creation_time_)>(
          reinterpret_cast<char*>(&creation_time_),
          reinterpret_cast<char*>(&other->creation_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ServiceAccount::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateServiceAccountRequest::InitAsDefaultInstance() {
  ::improbable::spatialos::serviceaccount::v1alpha1::_CreateServiceAccountRequest_default_instance_._instance.get_mutable()->lifetime_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
}
class CreateServiceAccountRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Duration& lifetime(const CreateServiceAccountRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Duration&
CreateServiceAccountRequest::_Internal::lifetime(const CreateServiceAccountRequest* msg) {
  return *msg->lifetime_;
}
void CreateServiceAccountRequest::clear_lifetime() {
  if (GetArena() == nullptr && lifetime_ != nullptr) {
    delete lifetime_;
  }
  lifetime_ = nullptr;
}
CreateServiceAccountRequest::CreateServiceAccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  permissions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
}
CreateServiceAccountRequest::CreateServiceAccountRequest(const CreateServiceAccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  project_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_name().empty()) {
    project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_project_name(),
      GetArena());
  }
  if (from._internal_has_lifetime()) {
    lifetime_ = new PROTOBUF_NAMESPACE_ID::Duration(*from.lifetime_);
  } else {
    lifetime_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
}

void CreateServiceAccountRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lifetime_ = nullptr;
}

CreateServiceAccountRequest::~CreateServiceAccountRequest() {
  // @@protoc_insertion_point(destructor:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateServiceAccountRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete lifetime_;
}

void CreateServiceAccountRequest::ArenaDtor(void* object) {
  CreateServiceAccountRequest* _this = reinterpret_cast< CreateServiceAccountRequest* >(object);
  (void)_this;
}
void CreateServiceAccountRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateServiceAccountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateServiceAccountRequest& CreateServiceAccountRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  return *internal_default_instance();
}


void CreateServiceAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && lifetime_ != nullptr) {
    delete lifetime_;
  }
  lifetime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateServiceAccountRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration lifetime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_lifetime(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_name = 3 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_project_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest.project_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 4 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateServiceAccountRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .google.protobuf.Duration lifetime = 2;
  if (this->has_lifetime()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::lifetime(this), target, stream);
  }

  // string project_name = 3 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->project_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_name().data(), static_cast<int>(this->_internal_project_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest.project_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_project_name(), target);
  }

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 4 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_permissions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_permissions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  return target;
}

size_t CreateServiceAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 4 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string project_name = 3 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_name());
  }

  // .google.protobuf.Duration lifetime = 2;
  if (this->has_lifetime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *lifetime_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateServiceAccountRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateServiceAccountRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateServiceAccountRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
    MergeFrom(*source);
  }
}

void CreateServiceAccountRequest::MergeFrom(const CreateServiceAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.project_name().size() > 0) {
    _internal_set_project_name(from._internal_project_name());
  }
  if (from.has_lifetime()) {
    _internal_mutable_lifetime()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_lifetime());
  }
}

void CreateServiceAccountRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateServiceAccountRequest::CopyFrom(const CreateServiceAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.CreateServiceAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceAccountRequest::IsInitialized() const {
  return true;
}

void CreateServiceAccountRequest::InternalSwap(CreateServiceAccountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  permissions_.InternalSwap(&other->permissions_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  project_name_.Swap(&other->project_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(lifetime_, other->lifetime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateServiceAccountRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceAccountsRequest::InitAsDefaultInstance() {
}
class ListServiceAccountsRequest::_Internal {
 public:
};

ListServiceAccountsRequest::ListServiceAccountsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
}
ListServiceAccountsRequest::ListServiceAccountsRequest(const ListServiceAccountsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_page_token(),
      GetArena());
  }
  project_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_project_name().empty()) {
    project_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_project_name(),
      GetArena());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
}

void ListServiceAccountsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServiceAccountsRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListServiceAccountsRequest::~ListServiceAccountsRequest() {
  // @@protoc_insertion_point(destructor:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListServiceAccountsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  project_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListServiceAccountsRequest::ArenaDtor(void* object) {
  ListServiceAccountsRequest* _this = reinterpret_cast< ListServiceAccountsRequest* >(object);
  (void)_this;
}
void ListServiceAccountsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListServiceAccountsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceAccountsRequest& ListServiceAccountsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceAccountsRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  return *internal_default_instance();
}


void ListServiceAccountsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  project_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceAccountsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 page_size = 1 [(.validator.field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest.page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string project_name = 3 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_project_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest.project_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceAccountsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1 [(.validator.field) = {
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_page_size(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  // string project_name = 3 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->project_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_project_name().data(), static_cast<int>(this->_internal_project_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest.project_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_project_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  return target;
}

size_t ListServiceAccountsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string project_name = 3 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->project_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_project_name());
  }

  // int32 page_size = 1 [(.validator.field) = {
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceAccountsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceAccountsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceAccountsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
    MergeFrom(*source);
  }
}

void ListServiceAccountsRequest::MergeFrom(const ListServiceAccountsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.project_name().size() > 0) {
    _internal_set_project_name(from._internal_project_name());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListServiceAccountsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceAccountsRequest::CopyFrom(const ListServiceAccountsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceAccountsRequest::IsInitialized() const {
  return true;
}

void ListServiceAccountsRequest::InternalSwap(ListServiceAccountsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  project_name_.Swap(&other->project_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceAccountsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceAccountsResponse::InitAsDefaultInstance() {
}
class ListServiceAccountsResponse::_Internal {
 public:
};

ListServiceAccountsResponse::ListServiceAccountsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  service_accounts_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
}
ListServiceAccountsResponse::ListServiceAccountsResponse(const ListServiceAccountsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      service_accounts_(from.service_accounts_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_next_page_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
}

void ListServiceAccountsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServiceAccountsResponse_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListServiceAccountsResponse::~ListServiceAccountsResponse() {
  // @@protoc_insertion_point(destructor:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ListServiceAccountsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListServiceAccountsResponse::ArenaDtor(void* object) {
  ListServiceAccountsResponse* _this = reinterpret_cast< ListServiceAccountsResponse* >(object);
  (void)_this;
}
void ListServiceAccountsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListServiceAccountsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceAccountsResponse& ListServiceAccountsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceAccountsResponse_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  return *internal_default_instance();
}


void ListServiceAccountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_accounts_.Clear();
  next_page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListServiceAccountsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount service_accounts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service_accounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse.next_page_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceAccountsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount service_accounts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_service_accounts_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_service_accounts(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  return target;
}

size_t ListServiceAccountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.ServiceAccount service_accounts = 1;
  total_size += 1UL * this->_internal_service_accounts_size();
  for (const auto& msg : this->service_accounts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceAccountsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceAccountsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceAccountsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
    MergeFrom(*source);
  }
}

void ListServiceAccountsResponse::MergeFrom(const ListServiceAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_accounts_.MergeFrom(from.service_accounts_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListServiceAccountsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceAccountsResponse::CopyFrom(const ListServiceAccountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.ListServiceAccountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceAccountsResponse::IsInitialized() const {
  return true;
}

void ListServiceAccountsResponse::InternalSwap(ListServiceAccountsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  service_accounts_.InternalSwap(&other->service_accounts_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceAccountsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateServiceAccountRequest::InitAsDefaultInstance() {
  ::improbable::spatialos::serviceaccount::v1alpha1::_UpdateServiceAccountRequest_default_instance_._instance.get_mutable()->expiration_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class UpdateServiceAccountRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& expiration_time(const UpdateServiceAccountRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
UpdateServiceAccountRequest::_Internal::expiration_time(const UpdateServiceAccountRequest* msg) {
  return *msg->expiration_time_;
}
void UpdateServiceAccountRequest::clear_expiration_time() {
  if (GetArena() == nullptr && expiration_time_ != nullptr) {
    delete expiration_time_;
  }
  expiration_time_ = nullptr;
}
UpdateServiceAccountRequest::UpdateServiceAccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  permissions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
}
UpdateServiceAccountRequest::UpdateServiceAccountRequest(const UpdateServiceAccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      permissions_(from.permissions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_expiration_time()) {
    expiration_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.expiration_time_);
  } else {
    expiration_time_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
}

void UpdateServiceAccountRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  ::memset(&expiration_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&expiration_time_)) + sizeof(id_));
}

UpdateServiceAccountRequest::~UpdateServiceAccountRequest() {
  // @@protoc_insertion_point(destructor:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateServiceAccountRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete expiration_time_;
}

void UpdateServiceAccountRequest::ArenaDtor(void* object) {
  UpdateServiceAccountRequest* _this = reinterpret_cast< UpdateServiceAccountRequest* >(object);
  (void)_this;
}
void UpdateServiceAccountRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateServiceAccountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateServiceAccountRequest& UpdateServiceAccountRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  return *internal_default_instance();
}


void UpdateServiceAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  permissions_.Clear();
  if (GetArena() == nullptr && expiration_time_ != nullptr) {
    delete expiration_time_;
  }
  expiration_time_ = nullptr;
  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateServiceAccountRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expiration_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateServiceAccountRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_permissions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_permissions(i), target, stream);
  }

  // .google.protobuf.Timestamp expiration_time = 3;
  if (this->has_expiration_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::expiration_time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  return target;
}

size_t UpdateServiceAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .improbable.spatialos.serviceaccount.v1alpha1.Permission permissions = 2;
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->permissions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Timestamp expiration_time = 3;
  if (this->has_expiration_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expiration_time_);
  }

  // int64 id = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateServiceAccountRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateServiceAccountRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateServiceAccountRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
    MergeFrom(*source);
  }
}

void UpdateServiceAccountRequest::MergeFrom(const UpdateServiceAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  permissions_.MergeFrom(from.permissions_);
  if (from.has_expiration_time()) {
    _internal_mutable_expiration_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_expiration_time());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void UpdateServiceAccountRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateServiceAccountRequest::CopyFrom(const UpdateServiceAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.UpdateServiceAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateServiceAccountRequest::IsInitialized() const {
  return true;
}

void UpdateServiceAccountRequest::InternalSwap(UpdateServiceAccountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  permissions_.InternalSwap(&other->permissions_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateServiceAccountRequest, id_)
      + sizeof(UpdateServiceAccountRequest::id_)
      - PROTOBUF_FIELD_OFFSET(UpdateServiceAccountRequest, expiration_time_)>(
          reinterpret_cast<char*>(&expiration_time_),
          reinterpret_cast<char*>(&other->expiration_time_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateServiceAccountRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteServiceAccountRequest::InitAsDefaultInstance() {
}
class DeleteServiceAccountRequest::_Internal {
 public:
};

DeleteServiceAccountRequest::DeleteServiceAccountRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
}
DeleteServiceAccountRequest::DeleteServiceAccountRequest(const DeleteServiceAccountRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
}

void DeleteServiceAccountRequest::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

DeleteServiceAccountRequest::~DeleteServiceAccountRequest() {
  // @@protoc_insertion_point(destructor:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteServiceAccountRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeleteServiceAccountRequest::ArenaDtor(void* object) {
  DeleteServiceAccountRequest* _this = reinterpret_cast< DeleteServiceAccountRequest* >(object);
  (void)_this;
}
void DeleteServiceAccountRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteServiceAccountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteServiceAccountRequest& DeleteServiceAccountRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteServiceAccountRequest_improbable_2fspatialos_2fserviceaccount_2fv1alpha1_2fserviceaccount_2eproto.base);
  return *internal_default_instance();
}


void DeleteServiceAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteServiceAccountRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteServiceAccountRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  return target;
}

size_t DeleteServiceAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1 [(.google.api.field_behavior) = REQUIRED, (.validator.field) = {
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteServiceAccountRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteServiceAccountRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteServiceAccountRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
    MergeFrom(*source);
  }
}

void DeleteServiceAccountRequest::MergeFrom(const DeleteServiceAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void DeleteServiceAccountRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteServiceAccountRequest::CopyFrom(const DeleteServiceAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:improbable.spatialos.serviceaccount.v1alpha1.DeleteServiceAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteServiceAccountRequest::IsInitialized() const {
  return true;
}

void DeleteServiceAccountRequest::InternalSwap(DeleteServiceAccountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteServiceAccountRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace serviceaccount
}  // namespace spatialos
}  // namespace improbable
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::improbable::spatialos::serviceaccount::v1alpha1::Permission* Arena::CreateMaybeMessage< ::improbable::spatialos::serviceaccount::v1alpha1::Permission >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::spatialos::serviceaccount::v1alpha1::Permission >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount* Arena::CreateMaybeMessage< ::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::spatialos::serviceaccount::v1alpha1::ServiceAccount >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest* Arena::CreateMaybeMessage< ::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::spatialos::serviceaccount::v1alpha1::CreateServiceAccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest* Arena::CreateMaybeMessage< ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse* Arena::CreateMaybeMessage< ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::spatialos::serviceaccount::v1alpha1::ListServiceAccountsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest* Arena::CreateMaybeMessage< ::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::spatialos::serviceaccount::v1alpha1::UpdateServiceAccountRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::improbable::spatialos::serviceaccount::v1alpha1::DeleteServiceAccountRequest* Arena::CreateMaybeMessage< ::improbable::spatialos::serviceaccount::v1alpha1::DeleteServiceAccountRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::improbable::spatialos::serviceaccount::v1alpha1::DeleteServiceAccountRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
